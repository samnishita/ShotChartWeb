{"version":3,"sources":["Header.js","SearchTypeButtons.js","ShotPercentageView.js","SimpleSearchBox.js","images/transparent.png","images/newbackcourt.png","ShotView.js","SelectionViewer.js","AdvancedSearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","class","id","SearchTypeButtons","props","onClick","simpleClickHandler","advancedClickHandler","ShotPercentageView","console","log","simpleShotData","simplesearch","twoPMakes","twoPTotal","threePMakes","threePTotal","fgFrac","fgPerc","twoPFrac","twoPPerc","threePFrac","threePPerc","forEach","each","make","shottype","Number","toFixed","SimpleSearchBox","currentYear","useState","selectedYear","setSelectedYear","playerfirstname","playerlastname","selectedPlayer","setSelectedPlayer","selectedSeason","setSelectedSeason","activePlayers","setActivePlayers","activeSeasons","setActiveSeasons","yearDisplay","setYearDisplay","activePlayersDisplay","setActivePlayersDisplay","activeSeasonsDisplay","setActiveSeasonsDisplay","shotPercentageData","setShotPercentageData","latestSimpleViewType","setLatestSimpleViewType","selectedYearRef","useRef","current","selectedPlayerRef","selectedSeasonRef","initPlayersRef","initPlayersReverseMapRef","initPlayers","initPlayersReverseMap","getSearchData","url","a","fetch","method","then","res","json","data","catch","error","response","getActivePlayersData","year","activePlayersArray","i","activeplayers","length","push","displayname","firstname","lastname","trim","playerinfo","sort","b","getSeasonsData","playerId","playerFirstName","playerLastName","activeSeasonsRes","singleseason","preseason","reg","playoffs","includes","displayActivePlayers","playerElements","value","playerid","event","handlePlayerButtonClick","displayActiveSeasons","activeSeasonsElements","Object","values","map","handleSeasonButtonClick","handleYearButtonClick","target","classList","contains","textContent","names","firstPlayer","getAttribute","hideDD","matches","dropdowns","document","getElementsByClassName","openDropdown","remove","handleDDButtonClick","type","dropdown","getElementById","toggle","updateLatestSimpleSearchData","updateLatestSimpleViewType","handleViewSelectionButtonClick","window","onclick","useEffect","getInitData","players","playersReverse","initallplayers","nameArray","getInitPlayersData","subYearString","substring","elements","displayAllYears","e","runSimpleSearch","ShotView","viewType","currentView","setCurrentView","currentViewRef","determineView","allShots","tradArray","height","clientHeight","width","clientWidth","heightAltered","widthAltered","x","y","cx","cy","r","fill","stroke","strokeWidth","x1","y1","x2","y2","displayTraditional","displayGrid","allTiles","squareSizeOrig","j","tempTile","info","shotinfo","shots","filter","param","keys","eachTile","upperBoundX","lowerBoundX","upperBoundY","lowerBoundY","eachShot","predictedValue","aSum","bSum","calcDistance","tileValues","eachTile2","getDistance","Math","pow","tile1","tile2","sqrt","gridaverages","averageJson","uniqueid","average","getGridAverages","src","transparentCourt","SelectionViewer","AdvancedSearchBox","makeButton","name","App","latestSimpleSearchData","setLatestSimpleSearchData","latestSimpleViewTypeRef","inputData","inputViewType","whichSearchBox","setWhichSearchBox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b6b18eef.chunk.js","sourcesContent":["import './Header.css'\n\nfunction Header() {\n    return (\n        <header className='Header'>\n            <div class=\"header-grid-item\" id=\"title\">Custom NBA Shot Charts <span id='versionText'>Version 1.0.2</span></div>\n            <div class=\"header-grid-item\" id=\"date-accuracy\">\n                <div id='accuracy-title'><u>Accurate As Of</u></div>\n                <div id='accuracy-date'>July 3, 2021</div>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import './SearchTypeButtons.css'\n\nfunction SearchTypeButtons(props) {\n    return (\n        <div className=\"SearchTypeButtons\">\n            <button id=\"simple-search-button\" onClick={props.simpleClickHandler}>\n                Simple Search\n            </button>\n            <button id=\"advanced-search-button\" onClick={props.advancedClickHandler}>\n                Advanced Search\n            </button>\n        </div>\n    );\n}\n\nexport default SearchTypeButtons","import './ShotPercentageView.css'\n\nconst ShotPercentageView = (props) => {\n    console.log(\"updating shots\")\n    console.log(props.simpleShotData.simplesearch)\n    let twoPMakes = 0;\n    let twoPTotal = 0;\n    let threePMakes = 0;\n    let threePTotal = 0;\n    let fgFrac = \"--\", fgPerc = \"--\", twoPFrac = \"--\", twoPPerc = \"--\", threePFrac = \"--\", threePPerc = \"--\"\n    if (props.simpleShotData.simplesearch) {\n\n        props.simpleShotData.simplesearch.forEach(each => {\n            if (each.make == 1 && each.shottype === \"2PT Field Goal\") {\n                twoPMakes++\n                twoPTotal++\n            } else if (each.make == 0 && each.shottype === \"2PT Field Goal\") {\n                twoPTotal++\n            } else if (each.make == 1 && each.shottype === \"3PT Field Goal\") {\n                threePMakes++\n                threePTotal++\n            } else {\n                threePTotal++\n            }\n        })\n        if (twoPTotal !== 0) {\n            twoPFrac = twoPMakes + \"/\" + twoPTotal\n            twoPPerc = Number(twoPMakes / twoPTotal * 100).toFixed(2) + \"%\"\n        }\n        if (threePTotal !== 0) {\n            threePFrac = threePMakes + \"/\" + threePTotal\n            threePPerc = Number(threePMakes / threePTotal * 100).toFixed(2) + \"%\"\n        }\n\n        if (twoPTotal + threePTotal !== 0) {\n            fgFrac = (twoPMakes + threePMakes) + \"/\" + (twoPTotal + threePTotal)\n            fgPerc = Number((twoPMakes + threePMakes) / (twoPTotal + threePTotal) * 100).toFixed(2) + \"%\"\n        }\n    }\n    return (\n        <div className=\"ShotPercentageView\">\n            <p className=\"percentage-grid-item-title\">FG</p>\n            <p className=\"percentage-grid-item-title\">2P</p>\n            <p className=\"percentage-grid-item-title\">3P</p>\n            <p className=\"percentage-grid-item-content\">{fgFrac}</p>\n            <p className=\"percentage-grid-item-content\">{twoPFrac}</p>\n            <p className=\"percentage-grid-item-content\">{threePFrac}</p>\n            <p className=\"percentage-grid-item-content\">{fgPerc}</p>\n            <p className=\"percentage-grid-item-content\">{twoPPerc}</p>\n            <p className=\"percentage-grid-item-content\">{threePPerc}</p>\n        </div>\n    )\n}\n\nexport default ShotPercentageView","import './SimpleSearchBox.css'\nimport SearchTypeButtons from './SearchTypeButtons'\nimport ShotPercentageView from './ShotPercentageView'\nimport { useEffect, useState, useRef } from \"react\";\n\nconst SimpleSearchBox = (props) => {\n    const currentYear = '2020-21'\n    //STATES\n    const [selectedYear, setSelectedYear] = useState(currentYear);\n    const [selectedPlayer, setSelectedPlayer] = useState({\n        id: 203932,\n        playerfirstname: \"Aaron\",\n        playerlastname: \"Gordon\"\n    });\n    const [selectedSeason, setSelectedSeason] = useState(\"Regular Season\");\n    const [activePlayers, setActivePlayers] = useState([])\n    const [activeSeasons, setActiveSeasons] = useState([])\n    const [yearDisplay, setYearDisplay] = useState([])\n    const [activePlayersDisplay, setActivePlayersDisplay] = useState([])\n    const [activeSeasonsDisplay, setActiveSeasonsDisplay] = useState([])\n    const [shotPercentageData, setShotPercentageData] = useState({})\n    const [latestSimpleViewType, setLatestSimpleViewType] = useState(props.latestSimpleViewType)\n\n\n    //STATE REFS\n    const selectedYearRef = useRef({});\n    selectedYearRef.current = selectedYear;\n    const selectedPlayerRef = useRef({});\n    selectedPlayerRef.current = selectedPlayer;\n    const selectedSeasonRef = useRef({});\n    selectedSeasonRef.current = selectedSeason;\n    const initPlayersRef = useRef({})\n    const initPlayersReverseMapRef = useRef({})\n\n\n    let initState = \"\"\n    let initPlayers = \"\";\n    let initPlayersReverseMap = \"\"\n\n    async function getSearchData(url) {\n        console.log(\"Fetching \" + url)\n        const response = await fetch(url, {\n            method: 'GET'\n        }).then(res => res.json())\n            .then(data => {\n                //console.log(\"URL RESPONSE FROM \" + url + \": \")\n                //console.log(data)\n                return data\n            }).catch(error => console.log('error', error))\n        return response\n    }\n\n    async function getInitData() {\n        let response = await getSearchData(\"http://138.68.52.234:8080/shots_request?init=true\")\n            .then(res => {\n                //console.log(\"getInitData\")\n                //console.log(res.init)\n                initState = res\n            })\n        return response\n    }\n\n    function getInitPlayersData() {\n        let players = {}\n        let playersReverse = {}\n        console.log(\"getInitAllPlayers\")\n        let response = getSearchData(\"http://138.68.52.234:8080/shots_request?initallplayers=true\")\n            .then(res => {\n                for (let i = 0; i < res.initallplayers.length; i++) {\n                    let nameArray = [3]\n                    nameArray[0] = res.initallplayers[i].id;\n                    nameArray[1] = res.initallplayers[i].firstname;\n                    nameArray[2] = res.initallplayers[i].lastname;\n                    players[(res.initallplayers[i].firstname + \" \" + res.initallplayers[i].lastname).trim()] = nameArray;\n                    playersReverse[res.initallplayers[i].id] = nameArray;\n                }\n                initPlayers = players\n                initPlayersReverseMap = playersReverse\n                console.log(\"SETTING initPlayers/initPlayersReverseMap\")\n                console.log(initPlayers)\n                console.log(initPlayersReverseMap)\n                initPlayersRef.current = initPlayers\n                initPlayersReverseMapRef.current = initPlayersReverseMap\n                return res\n            })\n        return response\n    }\n    function getActivePlayersData(year) {\n        let response = getSearchData(`http://138.68.52.234:8080/shots_request?activeplayers=${year}`)\n            .then(res => {\n                let activePlayersArray = []\n                //let activePlayersJson = {}\n                for (let i = 0; i < res.activeplayers.length; i++) {\n                    activePlayersArray.push(\n                        {\n                            displayname: (`${res.activeplayers[i].firstname} ${res.activeplayers[i].lastname}`).trim(),\n                            playerinfo: {\n                                id: res.activeplayers[i].id,\n                                playerfirstname: res.activeplayers[i].firstname,\n                                playerlastname: res.activeplayers[i].lastname\n                            }\n                        })\n\n                    //activePlayersArray.push((`${res.activeplayers[i].firstname} ${res.activeplayers[i].lastname}`).trim())\n                }\n                activePlayersArray.sort((a, b) => {\n                    if (a.displayname < b.displayname) { return -1; }\n                    if (a.displayname > b.displayname) { return 1; }\n                    return 0;\n                })\n\n                console.log(\"getActivePlayersData: \")\n                // console.log(activePlayersArray)\n                setActivePlayers(activePlayersArray)\n                return activePlayersArray\n            })\n        // console.log(\"response\")\n        // console.log(response)\n        return response;\n    }\n\n    async function getSeasonsData(year, playerId, playerFirstName, playerLastName) {\n        let response = await getSearchData(`http://138.68.52.234:8080/shots_request?singleseasonactivity=true&playerlastname=${playerLastName}&playerfirstname=${playerFirstName}&playerid=${playerId}&year=${year}`)\n            .then(res => {\n                console.log(\"season response\")\n                console.log(`http://138.68.52.234:8080/shots_request?singleseasonactivity=true&playerlastname=${playerLastName}&playerfirstname=${playerFirstName}&playerid=${playerId}&year=${year}`)\n                console.log(res)\n                let activeSeasonsRes = []\n                if (res.singleseason[0].preseason === 1) {\n                    activeSeasonsRes.push(\"Preseason\")\n                }\n                if (res.singleseason[0].reg === 1) {\n                    activeSeasonsRes.push(\"Regular Season\")\n                }\n                if (res.singleseason[0].playoffs === 1) {\n                    activeSeasonsRes.push(\"Playoffs\")\n                }\n                console.log(\"getSeasonsData: \")\n                //console.log(activeSeasonsRes)\n                if (!activeSeasonsRes.includes(selectedSeasonRef.current)) {\n                    if (activeSeasonsRes.includes(\"Regular Season\")) {\n                        setSelectedSeason(\"Regular Season\")\n                    } else {\n                        setSelectedSeason(activeSeasonsRes[activeSeasonsRes.length - 1])\n                    }\n                }\n                setActiveSeasons(activeSeasonsRes)\n            })\n        return response\n    }\n\n    function displayAllYears(currentYear) {\n        if (yearDisplay.length === 0) {\n            console.log(\"displayAllYears\")\n            let year = Number(currentYear.substring(0, 4));\n            let subYearString;\n            let elements = []\n            while (year >= 1996) {\n                if ((year - 1899) % 100 < 10) {\n                    subYearString = \"0\" + (year - 1899) % 100;\n                } else {\n                    subYearString = \"\" + (year - 1899) % 100;\n                }\n                elements.push(<p className='dropdown-item year-display' onClick={(event) => handleYearButtonClick(event)}>{year + \"-\" + subYearString}</p>)\n                year--;\n            }\n            setYearDisplay(elements)//, console.log(yearDisplay)\n        }\n    }\n\n    function displayActivePlayers() {\n        console.log(\"displayPlayers\")\n        let playerElements = []\n        console.log(activePlayers)\n        console.log(activePlayers[0])\n        //activePlayers.forEach(value =>{\n        activePlayers.forEach(value => {\n            //console.log(value)\n            // console.log(value.displayname)\n            //console.log(value.playerinfo.id)\n            playerElements.push(<p className='dropdown-item player-display' playerid={value.playerinfo.id} onClick={(event) => handlePlayerButtonClick(event)}>{value.displayname}</p>)\n        });\n        setActivePlayersDisplay(playerElements)//, console.log(activePlayersDisplay)\n    }\n\n    function displayActiveSeasons() {\n        console.log(\"displayActiveSeasons\")\n        let activeSeasonsElements = []\n        Object.values(activeSeasons).map(value => activeSeasonsElements.push(<p className='dropdown-item season-display' onClick={(event) => handleSeasonButtonClick(event)}>{value}</p>));\n        setActiveSeasonsDisplay(activeSeasonsElements)//, console.log(activeSeasons)\n    }\n\n    async function handleYearButtonClick(event) {\n        console.log('YEAR BUTTON CLICKED')\n        if (event.target.classList.contains(\"year-display\") && selectedYearRef.current !== event.target.textContent) {\n            //console.log(\"selectedYear: \" + selectedYearRef.current + \", \" + event.target.textContent)\n            setSelectedYear(event.target.textContent, console.log(\"Set selected year to \" + event.target.textContent));\n            //console.log(\"event.target.textContent: \" + event.target.textContent)\n            let response = await getActivePlayersData(event.target.textContent)\n            console.log(\"response\")\n            console.log(response)\n            console.log(selectedPlayerRef.current.playerfirstname + \" \" + selectedPlayerRef.current.playerlastname)\n            let names = []\n            response.forEach(each => names.push(each.displayname))\n            console.log(names.includes(selectedPlayerRef.current.playerfirstname + \" \" + selectedPlayerRef.current.playerlastname))\n            if (!names.includes(selectedPlayerRef.current.playerfirstname + \" \" + selectedPlayerRef.current.playerlastname)) {\n                //let firstPlayer = Object.values(response)[0];\n                let firstPlayer = response[0]\n                //setSelectedPlayer(initPlayersRef.current[firstPlayer][1] + \" \" + initPlayersRef.current[firstPlayer][2]);\n                setSelectedPlayer({\n                    id: firstPlayer.playerinfo.id,\n                    playerfirstname: firstPlayer.playerinfo.playerfirstname,\n                    playerlastname: firstPlayer.playerinfo.playerlastname\n                })\n                console.log(\"Selected Player: \" + firstPlayer.displayname)\n                getSeasonsData(event.target.textContent, firstPlayer.playerinfo.id, firstPlayer.playerinfo.playerfirstname, firstPlayer.playerinfo.playerlastname)\n            } else {\n                getSeasonsData(event.target.textContent, selectedPlayerRef.current.id, selectedPlayerRef.current.playerfirstname, selectedPlayerRef.current.playerlastname)\n            }\n        }\n    }\n    async function handlePlayerButtonClick(event) {\n        console.log('PLAYER BUTTON CLICKED')\n        if (event.target.classList.contains(\"player-display\") && selectedPlayer !== event.target.textContent) {\n            console.log(\"player button clicked\")\n            //console.log(initPlayersReverseMapRef.current)\n            //console.log(event.target.getAttribute('playerid'))\n            setSelectedPlayer({\n                id: event.target.getAttribute('playerid'),\n                playerfirstname: initPlayersReverseMapRef.current[event.target.getAttribute('playerid')][1],\n                playerlastname: initPlayersReverseMapRef.current[event.target.getAttribute('playerid')][2]\n            }, console.log(\"Set selected player to \" + event.target.textContent));\n            console.log(\"setting season data here\")\n            getSeasonsData(selectedYearRef.current, initPlayersRef.current[event.target.textContent][0], initPlayersRef.current[event.target.textContent][1], initPlayersRef.current[event.target.textContent][2])\n        }\n\n    }\n    async function handleSeasonButtonClick(event) {\n        console.log('SEASON BUTTON CLICKED')\n        if (event.target.classList.contains(\"season-display\") && selectedSeason !== event.target.textContent) {\n            setSelectedSeason(event.target.textContent)\n        }\n    }\n\n    function hideDD(event) {\n        //console.log(\"hideDD: \" + event.target)\n        if (!event.target.matches('.dropdown-button')) {\n            var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n            var i;\n            for (i = 0; i < dropdowns.length; i++) {\n                var openDropdown = dropdowns[i];\n                if (openDropdown.classList.contains('show')) {\n                    openDropdown.classList.remove('show');\n                }\n            }\n        }\n    }\n    window.onclick = hideDD;\n\n    function handleDDButtonClick(event, type) {\n        console.log(\"handleDDButtonClick\")\n        hideDD(event);\n        var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n        var i;\n        for (i = 0; i < dropdowns.length; i++) {\n            var dropdown = dropdowns[i];\n            if (dropdown.id !== type) {\n                dropdown.classList.remove(\"show\")\n            }\n        }\n        document.getElementById(type).classList.toggle(\"show\")\n    };\n\n    async function runSimpleSearch(event) {\n        console.log(\"search\")\n        console.log(initPlayersReverseMapRef.current)\n        console.log(selectedPlayerRef.current)\n        console.log(selectedPlayerRef.current.id)\n        console.log(initPlayersReverseMapRef.current[selectedPlayerRef.current.id])\n\n        let url = `http://138.68.52.234:8080/shots_request?year=${selectedYearRef.current}&seasontype=${selectedSeasonRef.current}&simplesearch=true&playerid=${selectedPlayerRef.current.id}&playerlastname=${selectedPlayerRef.current.playerlastname}&playerfirstname=${selectedPlayerRef.current.playerfirstname}`\n        console.log(\"Fetching \" + url)\n        const response = await fetch(url, {\n            method: 'GET'\n        }).then(res => res.json())\n            .then(data => {\n                console.log(\"URL RESPONSE FROM \" + url + \": \")\n                console.log(data)\n                props.updateLatestSimpleSearchData(data)\n                //props.updateLatestSimpleViewType(\"Traditional\")\n                props.updateLatestSimpleViewType(\"Traditional\")\n                setShotPercentageData(data)\n                return data\n            }).catch(error => console.log('error', error))\n        return response\n    }\n\n    function handleViewSelectionButtonClick(event) {\n        props.updateLatestSimpleViewType(event.target.textContent)\n        setLatestSimpleViewType(event.target.textContent)\n    }\n\n\n    useEffect(() => {\n        getInitData()\n        getInitPlayersData().then(res => {\n            getActivePlayersData(currentYear)\n            getSeasonsData(currentYear, selectedPlayer.id, selectedPlayer.playerfirstname, selectedPlayer.playerlastname)\n        })\n        displayAllYears(currentYear)\n    }, []);\n\n    useEffect(() => {\n        displayActivePlayers()\n    }, [activePlayers])\n    useEffect(() => {\n        displayActiveSeasons()\n    }, [activeSeasons])\n\n    return (\n        <div className=\"SimpleSearchBox\">\n            <div className=\"search-box-body\">\n                <div className=\"search-box-inner-body\">\n                    <h6>Choose your search parameters</h6>\n                    <button class=\"dropdown-button\" onClick={(e) => {\n                        handleDDButtonClick(e, \"season-dd\");\n                    }}>\n                        {selectedYear}\n                        <div className=\"dropdown-content scrollable\" id=\"season-dd\">\n                            {yearDisplay}\n                        </div>\n                    </button>\n                    <br></br>\n                    <button class=\"dropdown-button\" onClick={(e) => handleDDButtonClick(e, \"player-dd\")}>\n                        {selectedPlayer.playerfirstname} {selectedPlayer.playerlastname}\n                        <div className=\"dropdown-content scrollable\" id=\"player-dd\">\n                            {activePlayersDisplay}\n                        </div>\n                    </button>\n                    <br></br>\n                    <button class=\"dropdown-button\" onClick={(e) => handleDDButtonClick(e, \"season-type-dd\")}>\n                        {selectedSeason}\n                        <div className=\"dropdown-content\" id=\"season-type-dd\">\n                            {activeSeasonsDisplay}\n                        </div>\n                    </button>\n                    <br></br>\n                    <button id=\"simple-search-button\" onClick={e => runSimpleSearch(e)}>\n                        Run It\n                    </button>\n                    <button class=\"dropdown-button\" id=\"view-selector\" onClick={e => handleDDButtonClick(e, \"view-selection-dd\")}>\n                        {latestSimpleViewType}\n                        <div className=\"dropdown-content\" id=\"view-selection-dd\">\n                            <p className='dropdown-item view-display' onClick={(event) => handleViewSelectionButtonClick(event)}>Traditional</p>\n                            <p className='dropdown-item view-display' onClick={(event) => handleViewSelectionButtonClick(event)}>Grid</p>\n                            <p className='dropdown-item view-display' onClick={(event) => handleViewSelectionButtonClick(event)}>Zone</p>\n                            <p className='dropdown-item view-display' onClick={(event) => handleViewSelectionButtonClick(event)}>Heat</p>\n                        </div>\n                    </button>\n                </div>\n            </div>\n            <ShotPercentageView simpleShotData={shotPercentageData} />\n        </div>\n    )\n\n    /*\n    let div = \"\"\n    //let divs = []\n    const [divs, setDivs] = useState([])\n    display()\n    function display() {\n        console.log(\"here\")\n        /**\n         console.log(getData().then(response => {\n             let data = response\n             console.log(\"data\" + data)\n             return data\n         }))*/\n    /*let food = getData().then(response => {\n        let data = response\n        return data\n    })\n\n    food.then(response => response.forEach(each => {\n        //setDivs(...divs, divs.push(each))\n    }))\n\n    //console.log(getData().then(data => data.json()))\n}\n\nfunction justDisplay() {\n\n}\nasync function getData() {\n    const response = await fetch(\"http://138.68.52.234:8080/shots_request?initallplayers=true\", {\n        method: 'GET'\n    }).then(response => response.json())\n        .then(result => {\n            // console.log(result)\n            return result\n        })\n        .catch(error => console.log('error', error))\n    //console.log(response.initallplayers)\n    //console.log(response.initallplayers[0])\n    let array = []\n    response.initallplayers.forEach(element => {\n        array.push(<div>{element}</div>)\n    });\n    //console.log(array)\n    return array;\n}\n\nuseEffect(() => {\n    justDisplay()\n}, [])\n\nreturn <div>0</div> */\n}\nexport default SimpleSearchBox","export default __webpack_public_path__ + \"static/media/transparent.37e32258.png\";","export default __webpack_public_path__ + \"static/media/newbackcourt.18ebe08e.png\";","import './ShotView.css'\nimport tradCourt from './images/newbackcourt.png'\nimport transparentCourt from './images/transparent.png'\nimport Svg, {\n    Circle,\n    Ellipse,\n    G,\n    Text,\n    TSpan,\n    TextPath,\n    Path,\n    Polygon,\n    Polyline,\n    Line,\n    Rect,\n    Use,\n    Image,\n    Symbol,\n    Defs,\n    LinearGradient,\n    RadialGradient,\n    Stop,\n    ClipPath,\n    Pattern,\n    Mask,\n} from 'react-native-svg';\nimport { View, StyleSheet } from 'react-native';\nimport { useEffect, useState, useRef } from \"react\";\n\n\n\n//            <div className=\"rectangle\" id=\"rect12\"  >Rectangle</div>\n\nconst ShotView = (props) => {\n    console.log(\"UPDATED SHOTVIEW\")\n    console.log(props.simpleShotData)\n    const [currentView, setCurrentView] = useState(props.viewType)\n    const currentViewRef = useRef({});\n    currentViewRef.current = currentView;\n\n    function displayTraditional() {\n        let allShots = props.simpleShotData.simplesearch\n        console.log(allShots)\n        let tradArray = []\n        if (allShots) {\n            const height = document.getElementById('court-image').clientHeight\n            const width = document.getElementById('court-image').clientWidth\n            const heightAltered = height * 1.1\n            const widthAltered = width * 1.1\n            console.log(\"height: \" + height)\n            console.log(\"width: \" + width)\n            const rad = 5;\n            allShots.forEach(each => {\n                let trans = `\\\"${each.x}, ${each.y}\\\"`\n                if (each.y <= 410) {\n                    if (each.make === 1) {\n                        tradArray.push(\n                            <Svg className=\"imageview-child\" height={heightAltered} width={widthAltered} >\n                                <Circle cx={widthAltered / 2 + each.x * width / 500} cy={heightAltered / 2 + each.y * height / 470 - 185 * height / 470} r={rad} fill=\"none\" stroke=\"limegreen\" strokeWidth=\"3\" />\n                            </Svg>)\n                    } else {\n                        tradArray.push(\n                            <Svg className=\"imageview-child\" height={heightAltered} width={widthAltered} >\n                                <Line x1={widthAltered / 2 - rad + each.x * width / 500} y1={heightAltered / 2 - rad + each.y * height / 470 - 185 * height / 470} x2={widthAltered / 2 + rad + each.x * width / 500} y2={heightAltered / 2 + rad + each.y * height / 470 - 185 * height / 470} stroke=\"red\" strokeWidth=\"2\" />\n                                <Line x1={widthAltered / 2 + rad + each.x * width / 500} y1={heightAltered / 2 - rad + each.y * height / 470 - 185 * height / 470} x2={widthAltered / 2 - rad + each.x * width / 500} y2={heightAltered / 2 + rad + each.y * height / 470 - 185 * height / 470} stroke=\"red\" strokeWidth=\"2\" />\n                            </Svg>)\n                    }\n                }\n                //translate=\"200, 200\"\n            })\n        }\n        return tradArray\n    }\n\n    function determineView(viewType) {\n        console.log(\"Determining viewtype: \" + viewType)\n        switch (viewType) {\n            case \"Traditional\":\n                console.log(\"Displaying Traditional\")\n                return displayTraditional()\n            case \"Grid\":\n                console.log(\"Displaying Grid\")\n                return displayGrid()\n        }\n\n    }\n    let gridAverages = \"\"\n\n    async function displayGrid() {\n\n        let allTiles = {}\n        let squareSizeOrig = 10\n        for (let j = -55; j < 400; j = j + squareSizeOrig) {\n            for (let i = -250; i < 250; i = i + squareSizeOrig) {\n                let tempTile = {}\n                let info = []\n                info.push(0.0);\n                info.push(0.0);\n                info.push(0.0);\n                tempTile.x = i\n                tempTile.y = j\n                tempTile.shotinfo = info;\n                allTiles[`tile_${i}_${j}`] = tempTile\n                //allShots.put(coord, info);\n            }\n        }\n        let factor = 0.007;\n        console.log(allTiles)\n        let shotCounter = 0\n\n        let shots = props.simpleShotData.simplesearch.filter(param => param.y <= 400)\n        Object.keys(allTiles).forEach(eachTile => {\n            let upperBoundX = allTiles[eachTile].x + 5 + squareSizeOrig * 1.5\n            let lowerBoundX = allTiles[eachTile].x + 5 - squareSizeOrig * 1.5\n            let upperBoundY = allTiles[eachTile].y + 5 + squareSizeOrig * 1.5\n            let lowerBoundY = allTiles[eachTile].y + 5 - squareSizeOrig * 1.5\n            //console.log(allTiles[each].y)\n            shots.forEach(eachShot => {\n                shotCounter++\n                if (eachShot.x < upperBoundX && eachShot.x >= lowerBoundX && eachShot.y < upperBoundY && eachShot.y >= lowerBoundY) {\n                    allTiles[eachTile].shotinfo[1] = allTiles[eachTile].shotinfo[1] + 1\n                    if (eachShot.make === 1) {\n                        allTiles[eachTile].shotinfo[0] = allTiles[eachTile].shotinfo[0] + 1\n                    }\n                }\n            })\n        })\n        Object.values(allTiles).forEach(each => {\n            if (each.shotinfo[1] !== 0) {\n                each.shotinfo[2] = each.shotinfo[0] / each.shotinfo[1]\n            }\n        })\n        let predictedValue = 0, aSum = 0, bSum = 0, p = 2, value = 0, offset = 10, maxDistanceBetweenNodes = 20, calcDistance = 0;\n        let tileValues = {}\n        Object.keys(allTiles).forEach(eachTile => {\n            if (allTiles[eachTile].x % offset === 0 && (allTiles[eachTile].y - 5) % offset === 0) {\n                aSum = 0;\n                bSum = 0;\n                Object.keys(allTiles).forEach(eachTile2 => {\n                    calcDistance = getDistance(allTiles[eachTile], allTiles[eachTile2])\n                    if (eachTile !== eachTile2 && calcDistance < maxDistanceBetweenNodes) {\n                        value = allTiles[eachTile2].shotinfo[2]\n                        aSum = aSum + (value / Math.pow(calcDistance, p));\n                        bSum = bSum + (1 / Math.pow(getDistance(allTiles[eachTile], allTiles[eachTile2]), p));\n                    }\n                })\n                predictedValue = aSum / bSum;\n                tileValues[eachTile] = predictedValue\n            }\n        })\n        console.log(\"tileValues\")\n        console.log(tileValues)\n        //Object.values(allTiles).forEach(each => console.log(each.shotinfo[1]))\n        return (<Svg>\n            <Rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"black\" />\n        </Svg>)\n    }\n\n    function idwGrid() {\n\n    }\n\n    function getDistance(tile1, tile2) {\n        return Math.sqrt(Math.pow(tile1.x - tile2.x, 2) + Math.pow(tile1.y - tile2.y, 2));\n    }\n\n\n    async function getGridAverages() {\n        let response = await getSearchData(\"http://138.68.52.234:8080/shots_request?gridaverages=true\")\n            .then(res => {\n                console.log(\"getGridAverages\")\n                console.log(res.gridaverages)\n                let averageJson = {}\n                res.gridaverages.forEach(each => averageJson[each.uniqueid] = each.average)\n                return averageJson\n            })\n        return response\n    }\n\n    async function getSearchData(url) {\n        console.log(\"Fetching \" + url)\n        const response = await fetch(url, {\n            method: 'GET'\n        }).then(res => res.json())\n            .then(data => {\n                //console.log(\"URL RESPONSE FROM \" + url + \": \")\n                //console.log(data)\n                return data\n            }).catch(error => console.log('error', error))\n        return response\n    }\n    useEffect(() => {\n        gridAverages = getGridAverages()\n    }, [])\n    // This will launch only if propName value has chaged.\n    useEffect(() => { setCurrentView(props.viewType) }, [props.viewType]);\n    /**\n     * <Svg height=\"20\" width=\"20\" fill=\"blue\" className=\"imageview-child\" >\n                    <Line x1=\"5\" y1=\"5\" x2=\"15\" y2=\"15\" stroke=\"red\" strokeWidth=\"2\" />\n                    <Line x1=\"15\" y1=\"5\" x2=\"5\" y2=\"15\" stroke=\"red\" strokeWidth=\"2\" />\n                </Svg>\n                <Svg height=\"20\" width=\"20\" fill=\"blue\" className=\"imageview-child\">\n                    <Circle cx=\"10\" cy=\"10\" r=\"5\" fill=\"transparent\" stroke=\"limegreen\" strokeWidth=\"2\" />\n                </Svg>\n     */\n    return (\n        <div className='ShotView'>\n            <p>Title Goes Here</p>\n            <div id=\"imageview-div\"  >\n                <img src={transparentCourt} id=\"court-image\"></img>\n                {determineView(currentViewRef.current)}\n            </div>\n            <br></br>\n            <button onClick={event => {\n                setCurrentView(\"Traditional\")\n            }}>Traditional</button>\n            <button onClick={event => determineView(\"Grid\")}>Grid</button>\n            <button onClick={event => determineView(\"Zone\")}>Zone</button>\n            <button onClick={event => determineView(\"Heat\")}>Heat</button>\n        </div>\n    )\n}\n//            <img src={tradCourt} className=\"court-image\"></img>\n\nexport default ShotView","import './SelectionViewer.css'\n\nfunction SelectionViewer() {\n    return (\n        <div className=\"SelectionViewer\">\n            Text Will Go Here\n        </div>\n    )\n}\n\nexport default SelectionViewer","import './AdvancedSearchBox.css'\nimport SelectionViewer from './SelectionViewer'\nimport ShotPercentageView from './ShotPercentageView'\n\nfunction AdvancedSearchBox() {\n    function makeButton(name) {\n        return <button class=\"dropdown-button\">\n            {name}\n        </button>\n    }\n    return (\n        <div className=\"AdvancedSearchBox\">\n            <div className=\"search-box-body\">\n                <div className='search-box-inner-body'>\n                    <h6>Choose your search parameters</h6>\n                    <div id='selection-scrollable'>\n                        <p>Seasons: <button>Begin</button> - <button>End</button></p>\n                        <p>Players: {makeButton(\"Choose Players\")}</p>\n                        <p>Season Types: {makeButton(\"Choose Season Types\")}</p>\n                        <p>Shot Distance (ft.): <button>Begin</button> - <button>End</button></p>\n                        <p>Shot Success: {makeButton(\"Choose Makes or Misses\")}</p>\n                        <p>Shot Value: {makeButton(\"Choose 2PT or 3PT\")}</p>\n                        <p>Shot Types: {makeButton(\"Choose Shot Types\")}</p>\n                        <p>Shooting Teams: {makeButton(\"Choose Teams\")}</p>\n                        <p>Home Teams: {makeButton(\"Choose Home Teams\")}</p>\n                        <p>Away Teams: {makeButton(\"Choose Away Teams\")}</p>\n                        <p>Court Areas: {makeButton(\"Choose Court Areas\")}</p>\n                        <p>Sides of Court: {makeButton(\"Choose Sides of Court\")}</p>\n                    </div>\n                    <button className=\"static-button\">Run It</button>\n                    <button className=\"static-button\">View Selection</button>\n                    <br></br>\n                    <p>Current Selections: </p>\n                    <SelectionViewer />\n                </div>\n            </div>\n            <ShotPercentageView />\n        </div>\n    )\n}\n\nexport default AdvancedSearchBox","import './App.css';\nimport Header from './Header'\nimport SimpleSearchBox from './SimpleSearchBox'\nimport ShotView from './ShotView'\nimport AdvancedSearchBox from './AdvancedSearchBox';\nimport SearchTypeButtons from './SearchTypeButtons';\nimport React, { useEffect, useState, useRef } from 'react';\nimport ShotPercentageView from './ShotPercentageView';\n\n\nconst App = () => {\n  const [latestSimpleSearchData, setLatestSimpleSearchData] = useState({})\n  const [latestSimpleViewType, setLatestSimpleViewType] = useState(\"Traditional\")\n  //const [shotPercentageData, setShotPercentageData] = useState({})\n\n  const latestSimpleViewTypeRef = useRef({});\n  latestSimpleViewTypeRef.current = latestSimpleViewType;\n  const [whichSearchBox, setWhichSearchBox] = useState(<SimpleSearchBox updateLatestSimpleSearchData={processSimpleSearchData}\n    updateLatestSimpleViewType={processLatestSimpleViewType} latestSimpleViewType={latestSimpleViewTypeRef.current} />)\n\n  function processSimpleSearchData(inputData) {\n    setLatestSimpleSearchData(inputData, console.log(\"Updated latest search with\" + inputData))\n  }\n  function processLatestSimpleViewType(inputViewType) {\n    setLatestSimpleViewType(inputViewType, console.log(\"Updated view type with \" + inputViewType))\n  }\n\n  function handleSimpleClick() {\n    if (whichSearchBox !== <SimpleSearchBox />) {\n      setWhichSearchBox(<SimpleSearchBox />)\n    }\n  }\n\n  function handleAdvancedClick() {\n    if (whichSearchBox !== <AdvancedSearchBox />) {\n      setWhichSearchBox(<AdvancedSearchBox />)\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"BaseGrid\">\n        <div className=\"basegrid-grid-item\" >\n          <SearchTypeButtons simpleClickHandler={handleSimpleClick} advancedClickHandler={handleAdvancedClick} />\n          {whichSearchBox}\n        </div>\n        <div className=\"basegrid-grid-item\">\n          <ShotView simpleShotData={latestSimpleSearchData} viewType={latestSimpleViewTypeRef.current} />\n        </div>\n      </div>\n\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}