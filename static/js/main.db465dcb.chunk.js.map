{"version":3,"sources":["Header.js","SearchTypeButtons.js","ShotPercentageView.js","SimpleSearchBox.js","images/newbackcourt.png","images/transparent.png","ShotView.js","SelectionViewer.js","AdvancedSearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","class","id","SearchTypeButtons","props","onClick","simpleClickHandler","advancedClickHandler","ShotPercentageView","console","log","twoPMakes","twoPTotal","threePMakes","threePTotal","fgFrac","fgPerc","twoPFrac","twoPPerc","threePFrac","threePPerc","simpleShotData","simplesearch","forEach","each","make","shottype","Number","toFixed","SimpleSearchBox","currentYear","useState","selectedYear","setSelectedYear","playerfirstname","playerlastname","selectedPlayer","setSelectedPlayer","selectedSeason","setSelectedSeason","activePlayers","setActivePlayers","activeSeasons","setActiveSeasons","yearDisplay","setYearDisplay","activePlayersDisplay","setActivePlayersDisplay","activeSeasonsDisplay","setActiveSeasonsDisplay","shotPercentageData","setShotPercentageData","latestSimpleViewType","setLatestSimpleViewType","selectedYearRef","useRef","current","selectedPlayerRef","selectedSeasonRef","initPlayersRef","initPlayersReverseMapRef","initPlayers","initPlayersReverseMap","getSearchData","url","a","fetch","method","then","res","json","data","catch","error","response","getActivePlayersData","year","activePlayersArray","i","activeplayers","length","push","displayname","firstname","lastname","trim","playerinfo","sort","b","getSeasonsData","playerId","playerFirstName","playerLastName","activeSeasonsRes","singleseason","preseason","reg","playoffs","includes","displayActivePlayers","playerElements","value","playerid","event","handlePlayerButtonClick","displayActiveSeasons","activeSeasonsElements","Object","values","map","handleSeasonButtonClick","handleYearButtonClick","target","classList","contains","textContent","names","firstPlayer","getAttribute","hideDD","matches","dropdowns","document","getElementsByClassName","openDropdown","remove","handleDDButtonClick","type","dropdown","getElementById","toggle","setTitle","updateLatestSimpleSearchData","updateLatestSimpleViewType","handleViewSelectionButtonClick","window","onclick","useEffect","getInitData","players","playersReverse","initallplayers","nameArray","getInitPlayersData","subYearString","substring","elements","displayAllYears","e","runSimpleSearch","ShotView","innerHeight","innerWidth","size","setWindowSize","allGridTiles","setAllGridTiles","allHeatTiles","setAllHeatTiles","gridAverages","setGridAverages","zoneAverages","setZoneAverages","whatToDisplay","setWhatToDisplay","allShots","setAllShots","whatToDisplayRef","allShotsRef","latestSimpleViewTypeRef","gridAveragesRef","zoneAveragesRef","hideElement","elementId","showElement","chooseCourt","view","handleResize","buffer","determineView","zoneLabels","generateZoneLabels","viewType","tradArray","height","clientHeight","width","clientWidth","heightAltered","widthAltered","rad","strokeWidth","y","cx","x","cy","r","fill","stroke","x1","y1","x2","y2","styles","position","transform","tradArrayWrapper","style","displayTraditional","allTiles","squareSizeOrig","j","tempTile","shotinfo","factor","shots","filter","param","shotCounter","keys","eachTile","upperBoundX","lowerBoundX","upperBoundY","lowerBoundY","eachShot","predictedValue","aSum","bSum","p","offset","maxDistanceBetweenNodes","calcDistance","tileValues","eachTile2","getDistance","Math","pow","min","minFactor","temp","avg","maxShotsPerMaxSquare","squareElements","squareSide","eachTileShotCount","tileFill","displayGrid","squareSize","allNewTiles","transX","transY","opacity","resizeGrid","allZones","mapShotsToZones","coloredZones","diff","d","zoneId","centerX","centerY","scaleNumber","r3","r3_2","r4","r4_2","r5","r5_2","r6","r7","r7_2","r8","r8_2","r9","r9_2","r10","r12","r13","r14","zIndex","displayZone","maxValue","eachValue","heatTileInfo","maxCutoff","eachTileKey","color","circleArray","displayHeat","circles1","circles2","circles3","circles4","circles5","circles6","circles7","gradients","radius","eachHeatTile","circle","eachGradient","fx","fy","gradientUnits","stopColor","stopOpacity","resizeHeat","tile1","tile2","sqrt","averageJson","gridaverages","uniqueid","average","fontSizeFrac","fontSizePerc","fontWidth","labelFracStyle","fontSize","margin","labelPercStyle","divStyles","backgroundColor","percent","addShot","shotzonebasic","shotzonearea","shotzonerange","eachZone","zoneaverages","number","addEventListener","getGridAverages","getZoneAverages","title","src","transparentCourt","tradCourt","SelectionViewer","AdvancedSearchBox","makeButton","name","App","latestSimpleSearchData","setLatestSimpleSearchData","inputData","inputViewType","whichSearchBox","setWhichSearchBox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.db465dcb.chunk.js","sourcesContent":["import './Header.css'\n\nfunction Header() {\n    return (\n        <header className='Header'>\n            <div class=\"header-grid-item\" id=\"title\">Custom NBA Shot Charts <span id='versionText'>Version 0.0</span></div>\n            <div class=\"header-grid-item\" id=\"date-accuracy\">\n                <div id='accuracy-title'><u>Accurate As Of</u></div>\n                <div id='accuracy-date'>July 3, 2021</div>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import './SearchTypeButtons.css'\n\nfunction SearchTypeButtons(props) {\n    return (\n        <div className=\"SearchTypeButtons\">\n            <button id=\"simple-search-button\" onClick={props.simpleClickHandler}>\n                Simple Search\n            </button>\n            <button id=\"advanced-search-button\" onClick={props.advancedClickHandler}>\n                Advanced Search\n            </button>\n        </div>\n    );\n}\n\nexport default SearchTypeButtons","import './ShotPercentageView.css'\n\nconst ShotPercentageView = (props) => {\n    console.log(\"Updating ShotPercentageView\")\n    //console.log(props.simpleShotData.simplesearch)\n    let twoPMakes = 0;\n    let twoPTotal = 0;\n    let threePMakes = 0;\n    let threePTotal = 0;\n    let fgFrac = \"--\", fgPerc = \"--\", twoPFrac = \"--\", twoPPerc = \"--\", threePFrac = \"--\", threePPerc = \"--\"\n    if (props.simpleShotData.simplesearch) {\n        props.simpleShotData.simplesearch.forEach(each => {\n            if (each.make == 1 && each.shottype === \"2PT Field Goal\") {\n                twoPMakes++\n                twoPTotal++\n            } else if (each.make == 0 && each.shottype === \"2PT Field Goal\") {\n                twoPTotal++\n            } else if (each.make == 1 && each.shottype === \"3PT Field Goal\") {\n                threePMakes++\n                threePTotal++\n            } else {\n                threePTotal++\n            }\n        })\n        if (twoPTotal !== 0) {\n            twoPFrac = twoPMakes + \"/\" + twoPTotal\n            twoPPerc = Number(twoPMakes / twoPTotal * 100).toFixed(2) + \"%\"\n        }\n        if (threePTotal !== 0) {\n            threePFrac = threePMakes + \"/\" + threePTotal\n            threePPerc = Number(threePMakes / threePTotal * 100).toFixed(2) + \"%\"\n        }\n\n        if (twoPTotal + threePTotal !== 0) {\n            fgFrac = (twoPMakes + threePMakes) + \"/\" + (twoPTotal + threePTotal)\n            fgPerc = Number((twoPMakes + threePMakes) / (twoPTotal + threePTotal) * 100).toFixed(2) + \"%\"\n        }\n    }\n    return (\n        <div className=\"ShotPercentageView\">\n            <p className=\"percentage-grid-item-title\">FG</p>\n            <p className=\"percentage-grid-item-title\">2P</p>\n            <p className=\"percentage-grid-item-title\">3P</p>\n            <p className=\"percentage-grid-item-content\">{fgFrac}</p>\n            <p className=\"percentage-grid-item-content\">{twoPFrac}</p>\n            <p className=\"percentage-grid-item-content\">{threePFrac}</p>\n            <p className=\"percentage-grid-item-content\">{fgPerc}</p>\n            <p className=\"percentage-grid-item-content\">{twoPPerc}</p>\n            <p className=\"percentage-grid-item-content\">{threePPerc}</p>\n        </div>\n    )\n}\n\nexport default ShotPercentageView","import './SimpleSearchBox.css'\nimport SearchTypeButtons from './SearchTypeButtons'\nimport ShotPercentageView from './ShotPercentageView'\nimport { useEffect, useState, useRef } from \"react\";\n\nconst SimpleSearchBox = (props) => {\n    const currentYear = '2020-21'\n    //STATES\n    const [selectedYear, setSelectedYear] = useState(currentYear);\n    const [selectedPlayer, setSelectedPlayer] = useState({\n        id: 203932,\n        playerfirstname: \"Aaron\",\n        playerlastname: \"Gordon\"\n    });\n    const [selectedSeason, setSelectedSeason] = useState(\"Regular Season\");\n    const [activePlayers, setActivePlayers] = useState([])\n    const [activeSeasons, setActiveSeasons] = useState([])\n    const [yearDisplay, setYearDisplay] = useState([])\n    const [activePlayersDisplay, setActivePlayersDisplay] = useState([])\n    const [activeSeasonsDisplay, setActiveSeasonsDisplay] = useState([])\n    const [shotPercentageData, setShotPercentageData] = useState({})\n    const [latestSimpleViewType, setLatestSimpleViewType] = useState(props.latestSimpleViewType)\n\n    //STATE REFS\n    const selectedYearRef = useRef({});\n    selectedYearRef.current = selectedYear;\n    const selectedPlayerRef = useRef({});\n    selectedPlayerRef.current = selectedPlayer;\n    const selectedSeasonRef = useRef({});\n    selectedSeasonRef.current = selectedSeason;\n    const initPlayersRef = useRef({})\n    const initPlayersReverseMapRef = useRef({})\n\n    let initState = \"\"\n    let initPlayers = \"\";\n    let initPlayersReverseMap = \"\"\n\n    async function getSearchData(url) {\n        console.log(\"Fetching \" + url)\n        const response = await fetch(url, {\n            method: 'GET'\n        }).then(res => res.json())\n            .then(data => {\n                //console.log(\"URL RESPONSE FROM \" + url + \": \")\n                //console.log(data)\n                return data\n            }).catch(error => console.log('error', error))\n        return response\n    }\n\n    async function getInitData() {\n        let response = await getSearchData(\"https://customnbashotcharts.com:8443/shots_request?init=true\")\n            .then(res => {\n                //console.log(\"getInitData\")\n                //console.log(res.init)\n                initState = res\n            })\n        return response\n    }\n\n    function getInitPlayersData() {\n        let players = {}\n        let playersReverse = {}\n        console.log(\"getInitPlayersData()\")\n        let response = getSearchData(\"https://customnbashotcharts.com:8443/shots_request?initallplayers=true\")\n            .then(res => {\n                for (let i = 0; i < res.initallplayers.length; i++) {\n                    let nameArray = [3]\n                    nameArray[0] = res.initallplayers[i].id;\n                    nameArray[1] = res.initallplayers[i].firstname;\n                    nameArray[2] = res.initallplayers[i].lastname;\n                    players[(res.initallplayers[i].firstname + \" \" + res.initallplayers[i].lastname).trim()] = nameArray;\n                    playersReverse[res.initallplayers[i].id] = nameArray;\n                }\n                initPlayers = players\n                initPlayersReverseMap = playersReverse\n                //console.log(\"SETTING initPlayers/initPlayersReverseMap\")\n                //console.log(initPlayers)\n                //console.log(initPlayersReverseMap)\n                initPlayersRef.current = initPlayers\n                initPlayersReverseMapRef.current = initPlayersReverseMap\n                return res\n            })\n        return response\n    }\n    function getActivePlayersData(year) {\n        //let response = getSearchData(`http://138.68.52.234:8080/shots_request?activeplayers=${year}`)\n        let response = getSearchData(`https://customnbashotcharts.com:8443/shots_request?activeplayers=${year}`)\n            .then(res => {\n                let activePlayersArray = []\n                //let activePlayersJson = {}\n                for (let i = 0; i < res.activeplayers.length; i++) {\n                    activePlayersArray.push(\n                        {\n                            displayname: (`${res.activeplayers[i].firstname} ${res.activeplayers[i].lastname}`).trim(),\n                            playerinfo: {\n                                id: res.activeplayers[i].id,\n                                playerfirstname: res.activeplayers[i].firstname,\n                                playerlastname: res.activeplayers[i].lastname\n                            }\n                        })\n\n                    //activePlayersArray.push((`${res.activeplayers[i].firstname} ${res.activeplayers[i].lastname}`).trim())\n                }\n                activePlayersArray.sort((a, b) => {\n                    if (a.displayname < b.displayname) { return -1; }\n                    if (a.displayname > b.displayname) { return 1; }\n                    return 0;\n                })\n\n                console.log(\"getActivePlayersData: \")\n                // console.log(activePlayersArray)\n                setActivePlayers(activePlayersArray)\n                return activePlayersArray\n            })\n        // console.log(\"response\")\n        // console.log(response)\n        return response;\n    }\n\n    async function getSeasonsData(year, playerId, playerFirstName, playerLastName) {\n        // let response = await getSearchData(`http://138.68.52.234:8080/shots_request?singleseasonactivity=true&playerlastname=${playerLastName}&playerfirstname=${playerFirstName}&playerid=${playerId}&year=${year}`)\n        let response = await getSearchData(`https://customnbashotcharts.com:8443/shots_request?singleseasonactivity=true&playerlastname=${playerLastName}&playerfirstname=${playerFirstName}&playerid=${playerId}&year=${year}`)\n            .then(res => {\n                console.log(\"getSeasonsData()\")\n                console.log(res)\n                let activeSeasonsRes = []\n                if (res.singleseason[0].preseason === 1) {\n                    activeSeasonsRes.push(\"Preseason\")\n                }\n                if (res.singleseason[0].reg === 1) {\n                    activeSeasonsRes.push(\"Regular Season\")\n                }\n                if (res.singleseason[0].playoffs === 1) {\n                    activeSeasonsRes.push(\"Playoffs\")\n                }\n                //console.log(\"getSeasonsData: \")\n                //console.log(activeSeasonsRes)\n                if (!activeSeasonsRes.includes(selectedSeasonRef.current)) {\n                    if (activeSeasonsRes.includes(\"Regular Season\")) {\n                        setSelectedSeason(\"Regular Season\")\n                        console.log(\"Includes Regular Season\")\n                    } else {\n                        setSelectedSeason(activeSeasonsRes[activeSeasonsRes.length - 1])\n                        console.log(\"Does Not Include Regular Season\")\n                    }\n                }\n                setActiveSeasons(activeSeasonsRes)\n            })\n        return response\n    }\n\n    function displayAllYears(currentYear) {\n        if (yearDisplay.length === 0) {\n            console.log(\"displayAllYears()\")\n            let year = Number(currentYear.substring(0, 4));\n            let subYearString;\n            let elements = []\n            while (year >= 1996) {\n                if ((year - 1899) % 100 < 10) {\n                    subYearString = \"0\" + (year - 1899) % 100;\n                } else {\n                    subYearString = \"\" + (year - 1899) % 100;\n                }\n                elements.push(<p className='dropdown-item year-display' onClick={(event) => handleYearButtonClick(event)}>{year + \"-\" + subYearString}</p>)\n                year--;\n            }\n            setYearDisplay(elements)//, console.log(yearDisplay)\n        }\n    }\n\n    function displayActivePlayers() {\n        console.log(\"displayActivePlayers()\")\n        let playerElements = []\n        //console.log(activePlayers)\n        //console.log(activePlayers[0])\n        activePlayers.forEach(value => {\n            //console.log(value)\n            // console.log(value.displayname)\n            //console.log(value.playerinfo.id)\n            playerElements.push(<p className='dropdown-item player-display' playerid={value.playerinfo.id} onClick={(event) => handlePlayerButtonClick(event)}>{value.displayname}</p>)\n        });\n        setActivePlayersDisplay(playerElements)//, console.log(activePlayersDisplay)\n    }\n\n    function displayActiveSeasons() {\n        console.log(\"displayActiveSeasons()\")\n        let activeSeasonsElements = []\n        Object.values(activeSeasons).map(value => activeSeasonsElements.push(<p className='dropdown-item season-display' onClick={(event) => handleSeasonButtonClick(event)}>{value}</p>));\n        setActiveSeasonsDisplay(activeSeasonsElements)//, console.log(activeSeasons)\n    }\n\n    async function handleYearButtonClick(event) {\n        console.log('handleYearButtonClick()')\n        if (event.target.classList.contains(\"year-display\") && selectedYearRef.current !== event.target.textContent) {\n            //console.log(\"selectedYear: \" + selectedYearRef.current + \", \" + event.target.textContent)\n            setSelectedYear(event.target.textContent, console.log(\"Set selected year to \" + event.target.textContent));\n            //console.log(\"event.target.textContent: \" + event.target.textContent)\n            let response = await getActivePlayersData(event.target.textContent)\n            //console.log(\"response\")\n            //console.log(response)\n            //console.log(selectedPlayerRef.current.playerfirstname + \" \" + selectedPlayerRef.current.playerlastname)\n            let names = []\n            response.forEach(each => names.push(each.displayname))\n            //console.log(names.includes(selectedPlayerRef.current.playerfirstname + \" \" + selectedPlayerRef.current.playerlastname))\n            if (!names.includes(selectedPlayerRef.current.playerfirstname + \" \" + selectedPlayerRef.current.playerlastname)) {\n                let firstPlayer = response[0]\n                setSelectedPlayer({\n                    id: firstPlayer.playerinfo.id,\n                    playerfirstname: firstPlayer.playerinfo.playerfirstname,\n                    playerlastname: firstPlayer.playerinfo.playerlastname\n                })\n                console.log(\"Selected Player: \" + firstPlayer.displayname)\n                getSeasonsData(event.target.textContent, firstPlayer.playerinfo.id, firstPlayer.playerinfo.playerfirstname, firstPlayer.playerinfo.playerlastname)\n            } else {\n                getSeasonsData(event.target.textContent, selectedPlayerRef.current.id, selectedPlayerRef.current.playerfirstname, selectedPlayerRef.current.playerlastname)\n            }\n        }\n    }\n    async function handlePlayerButtonClick(event) {\n        console.log('handlePlayerButtonClick()')\n        if (event.target.classList.contains(\"player-display\") && selectedPlayer !== event.target.textContent) {\n            //console.log(initPlayersReverseMapRef.current)\n            //console.log(event.target.getAttribute('playerid'))\n            setSelectedPlayer({\n                id: event.target.getAttribute('playerid'),\n                playerfirstname: initPlayersReverseMapRef.current[event.target.getAttribute('playerid')][1],\n                playerlastname: initPlayersReverseMapRef.current[event.target.getAttribute('playerid')][2]\n            }, console.log(\"Set selected player to \" + event.target.textContent));\n            getSeasonsData(selectedYearRef.current, initPlayersRef.current[event.target.textContent][0], initPlayersRef.current[event.target.textContent][1], initPlayersRef.current[event.target.textContent][2])\n        }\n    }\n    async function handleSeasonButtonClick(event) {\n        console.log('handleSeasonButtonClick()')\n        console.log(`selectedSeason: ${selectedSeasonRef.current}`)\n        console.log(`event.target.textContent: ${event.target.textContent}`)\n        console.log(event.target.classList.contains(\"season-display\"))\n        if (event.target.classList.contains(\"season-display\") && selectedSeasonRef.current !== event.target.textContent) {\n            console.log(`Setting season to ${event.target.textContent}`)\n            setSelectedSeason(event.target.textContent)\n        }\n    }\n\n    function hideDD(event) {\n        //console.log(\"hideDD: \" + event.target)\n        if (!event.target.matches('.dropdown-button')) {\n            var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n            var i;\n            for (i = 0; i < dropdowns.length; i++) {\n                var openDropdown = dropdowns[i];\n                if (openDropdown.classList.contains('show')) {\n                    openDropdown.classList.remove('show');\n                }\n            }\n        }\n    }\n    window.onclick = hideDD;\n\n    function handleDDButtonClick(event, type) {\n        console.log(\"handleDDButtonClick()\")\n        hideDD(event);\n        var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n        var i;\n        for (i = 0; i < dropdowns.length; i++) {\n            var dropdown = dropdowns[i];\n            if (dropdown.id !== type) {\n                dropdown.classList.remove(\"show\")\n            }\n        }\n        document.getElementById(type).classList.toggle(\"show\")\n    };\n\n    async function runSimpleSearch() {\n        console.log(\"runSimpleSearch()\")\n        // console.log(initPlayersReverseMapRef.current)\n        // console.log(selectedPlayerRef.current)\n        // console.log(selectedPlayerRef.current.id)\n        //console.log(initPlayersReverseMapRef.current[selectedPlayerRef.current.id])\n\n        let url = `https://customnbashotcharts.com:8443/shots_request?year=${selectedYearRef.current}&seasontype=${selectedSeasonRef.current}&simplesearch=true&playerid=${selectedPlayerRef.current.id}&playerlastname=${selectedPlayerRef.current.playerlastname}&playerfirstname=${selectedPlayerRef.current.playerfirstname}`\n        console.log(\"Fetching \" + url)\n        const response = await fetch(url, {\n            method: 'GET'\n        }).then(res => res.json())\n            .then(data => {\n                //console.log(\"URL RESPONSE FROM \" + url + \": \")\n                //console.log(data)\n                props.setTitle(`${selectedPlayerRef.current.playerfirstname} ${selectedPlayerRef.current.playerlastname}, ${selectedYearRef.current} ${selectedSeasonRef.current}`)\n                props.updateLatestSimpleSearchData(data)\n                props.updateLatestSimpleViewType(latestSimpleViewType)\n                setShotPercentageData(data)\n                return data\n            }).catch(error => console.log('error', error))\n        return response\n    }\n\n    function handleViewSelectionButtonClick(event) {\n        //props.updateLatestSimpleViewType(event.target.textContent)\n        setLatestSimpleViewType(event.target.textContent)\n    }\n\n    useEffect(() => {\n        getInitData()\n        getInitPlayersData().then(res => {\n            getActivePlayersData(currentYear)\n            getSeasonsData(currentYear, selectedPlayer.id, selectedPlayer.playerfirstname, selectedPlayer.playerlastname)\n        })\n        displayAllYears(currentYear)\n    }, []);\n\n    useEffect(() => {\n        displayActivePlayers()\n    }, [activePlayers])\n    useEffect(() => {\n        displayActiveSeasons()\n    }, [activeSeasons])\n\n    return (\n        <div className=\"SimpleSearchBox\">\n            <div className=\"search-box-body\">\n                <div className=\"search-box-inner-body\">\n                    <h6>Choose your search parameters</h6>\n                    <button class=\"dropdown-button\" onClick={(e) => { handleDDButtonClick(e, \"season-dd\") }}>\n                        {selectedYear}\n                        <div className=\"dropdown-content scrollable\" id=\"season-dd\">\n                            {yearDisplay}\n                        </div>\n                    </button>\n                    <br></br>\n                    <button class=\"dropdown-button\" onClick={(e) => handleDDButtonClick(e, \"player-dd\")}>\n                        {selectedPlayer.playerfirstname} {selectedPlayer.playerlastname}\n                        <div className=\"dropdown-content scrollable\" id=\"player-dd\">\n                            {activePlayersDisplay}\n                        </div>\n                    </button>\n                    <br></br>\n                    <button class=\"dropdown-button\" onClick={(e) => handleDDButtonClick(e, \"season-type-dd\")}>\n                        {selectedSeason}\n                        <div className=\"dropdown-content\" id=\"season-type-dd\">\n                            {activeSeasonsDisplay}\n                        </div>\n                    </button>\n                    <br></br>\n                    <button class=\"dropdown-button\" id=\"view-selector\" onClick={e => handleDDButtonClick(e, \"view-selection-dd\")}>\n                        {latestSimpleViewType}\n                        <div className=\"dropdown-content\" id=\"view-selection-dd\">\n                            <p className='dropdown-item view-display' onClick={(event) => handleViewSelectionButtonClick(event)}>Traditional</p>\n                            <p className='dropdown-item view-display' onClick={(event) => handleViewSelectionButtonClick(event)}>Grid</p>\n                            <p className='dropdown-item view-display' onClick={(event) => handleViewSelectionButtonClick(event)}>Zone</p>\n                            <p className='dropdown-item view-display' onClick={(event) => handleViewSelectionButtonClick(event)}>Heat</p>\n                        </div>\n                    </button>\n                    <button id=\"run-simple-search-button\" onClick={e => runSimpleSearch()}>\n                        Run It\n                    </button>\n\n                </div>\n            </div>\n            <ShotPercentageView simpleShotData={shotPercentageData} />\n        </div>\n    )\n}\nexport default SimpleSearchBox","export default __webpack_public_path__ + \"static/media/newbackcourt.18ebe08e.png\";","export default __webpack_public_path__ + \"static/media/transparent.37e32258.png\";","import './ShotView.css'\nimport tradCourt from './images/newbackcourt.png'\nimport transparentCourt from './images/transparent.png'\nimport Svg, { Circle, Path, Line, Rect, Defs, RadialGradient, Stop } from 'react-native-svg';\n\nimport { useEffect, useState, useRef } from \"react\";\n\nconst ShotView = (props) => {\n    const [size, setWindowSize] = useState([window.innerHeight, window.innerWidth])\n    const [allGridTiles, setAllGridTiles] = useState([])\n    const [allHeatTiles, setAllHeatTiles] = useState([])\n    const [gridAverages, setGridAverages] = useState([])\n    const [zoneAverages, setZoneAverages] = useState([])\n    const [whatToDisplay, setWhatToDisplay] = useState([])\n    const [allShots, setAllShots] = useState(props.simpleShotData.simplesearch)\n    const [latestSimpleViewType, setLatestSimpleViewType] = useState(props.latestSimpleViewType)\n    const whatToDisplayRef = useRef({})\n    whatToDisplayRef.current = whatToDisplay\n    const allShotsRef = useRef({})\n    allShotsRef.current = allShots\n    const latestSimpleViewTypeRef = useRef({})\n    latestSimpleViewTypeRef.current = latestSimpleViewType\n    const allGridTilesRef = useRef({})\n    allGridTilesRef.current = allGridTiles\n    const gridAveragesRef = useRef({})\n    gridAveragesRef.current = gridAverages\n    const allHeatTilesRef = useRef({})\n    allHeatTilesRef.current = allHeatTiles\n    const zoneAveragesRef = useRef({})\n    zoneAveragesRef.current = zoneAverages\n    //useEffect(() => { handleResize() }, [size])\n    useEffect(() => {\n        window.addEventListener('resize', handleResize)\n    }, [])\n    useEffect(() => {\n        setLatestSimpleViewType(props.latestSimpleViewType)\n    }, [props.latestSimpleViewType])\n    useEffect(() => {\n        setAllGridTiles([])\n        setAllHeatTiles([])\n        setAllShots(props.simpleShotData.simplesearch)\n        chooseCourt(props.latestSimpleViewType)\n    }, [props.simpleShotData])\n    useEffect(() => {\n        chooseCourt(props.latestSimpleViewType)\n        let buffer = []\n        console.log(props.latestSimpleViewType)\n        buffer.push(determineView(props.latestSimpleViewType))\n        let zoneLabels = generateZoneLabels(props.latestSimpleViewType)\n        if (zoneLabels) {\n            buffer.push(zoneLabels)\n        }\n        setWhatToDisplay(buffer)\n    }, [allGridTiles, allHeatTiles, props.simpleShotData, props.latestSimpleViewType])\n\n    function hideElement(elementId) {\n        if (document.getElementById(elementId).classList.contains('show')) {\n            document.getElementById(elementId).classList.toggle('show')\n        }\n    }\n    function showElement(elementId) {\n        if (!document.getElementById(elementId).classList.contains('show')) {\n            document.getElementById(elementId).classList.toggle('show')\n        }\n    }\n\n    function chooseCourt(view) {\n        switch (view) {\n            case \"Traditional\":\n                if (typeof (allShotsRef.current) === 'undefined') {\n                    showElement(\"transparent-court\")\n                    hideElement(\"trad-court\")\n                    hideElement(\"transparent-court-on-top\")\n                    hideElement(\"gray-background\")\n                    console.log(\"Showing transparent-court\")\n                } else {\n                    showElement(\"trad-court\")\n                    hideElement(\"transparent-court\")\n                    hideElement(\"transparent-court-on-top\")\n                    hideElement(\"gray-background\")\n                    console.log(\"Showing trad-court\")\n                }\n                break;\n            case \"Grid\":\n                showElement(\"transparent-court\")\n                showElement(\"gray-background\")\n                hideElement(\"trad-court\")\n                hideElement(\"transparent-court-on-top\")\n                console.log(\"Showing transparent-court & gray-background\")\n                break;\n            case \"Heat\":\n                showElement(\"transparent-court\")\n                hideElement(\"gray-background\")\n                hideElement(\"trad-court\")\n                hideElement(\"transparent-court-on-top\")\n                console.log(\"Showing transparent-court\")\n                break;\n            case \"Zone\":\n                showElement(\"transparent-court-on-top\")\n                hideElement(\"trad-court\")\n                hideElement(\"gray-background\")\n                hideElement(\"transparent-court\")\n                console.log(\"Showing transparent-court-on-top\")\n                break;\n        }\n    }\n\n    function handleResize() {\n        //console.log('resized to: ', window.innerWidth, 'x', window.innerHeight)\n        if (size[0] !== window.innerHeight || size[1] !== window.innerWidth) {\n            console.log(\"Size Not Okay\")\n            console.log(`${window.innerHeight}!=${size[0]} OR ${window.innerWidth}!=${size[1]}`)\n            setWindowSize([window.innerHeight, window.innerWidth])\n            console.log(\"props.latestSimpleViewType: \" + latestSimpleViewTypeRef.current)\n            //setWhatToDisplay(determineView(latestSimpleViewTypeRef.current))\n            let buffer = []\n            console.log(props.latestSimpleViewType)\n            buffer.push(determineView(latestSimpleViewTypeRef.current))\n            let zoneLabels = generateZoneLabels(latestSimpleViewTypeRef.current)\n            if (zoneLabels) {\n                buffer.push(zoneLabels)\n            }\n            setWhatToDisplay(buffer)\n        } else {\n            console.log(\"Size Okay\")\n            console.log(`${window.innerHeight}=${size[0]} AND ${window.innerWidth}=${size[1]}`)\n        }\n    }\n\n    function resizeGrid() {\n        console.log(allGridTiles.length > 0)\n        if (allGridTiles.length > 0) {\n            const height = document.getElementById('transparent-court').clientHeight\n            const width = document.getElementById('transparent-court').clientWidth\n            //console.log(`height: ${height}, width: ${width}`)\n            const heightAltered = height * 1.1\n            const widthAltered = width * 1.1\n            let squareSize = width / 50;\n            let allNewTiles = []\n            allGridTiles.forEach(eachTile => {\n                let squareSide = eachTile.squareSide * squareSize * 0.9\n                let tileFill = eachTile.tileFill\n                let transX = (eachTile.x + (squareSize - squareSide) / 2) * height / 470\n                let transY = (eachTile.y - 175 + (squareSize - squareSide) / 2) * height / 470\n                if (squareSide !== 0) {\n                    allNewTiles.push(<Rect x={widthAltered / 2 + transX} y={heightAltered / 2 + transY - 5} width={squareSide} height={squareSide} fill={tileFill} opacity=\"0.8\" />)\n                }\n            })\n            let allNewTilesWrapper = <Svg className=\"imageview-child grid-tile\" height={heightAltered} width={widthAltered}>\n                {allNewTiles}\n            </Svg>\n            return allNewTilesWrapper\n        }\n    }\n\n    console.log(\"Updating ShotView\")\n\n    function displayTraditional() {\n        console.log(\"displayTraditional()\")\n        //let allShots = props.simpleShotData.simplesearch\n        let allShots = allShotsRef.current\n        //console.log(allShots)\n        //console.log(allShotsRef.current)\n        let tradArray = []\n        if (allShots) {\n            const height = document.getElementById('trad-court').clientHeight\n            const width = document.getElementById('trad-court').clientWidth\n            const heightAltered = height * 1.1\n            const widthAltered = width * 1.1\n            const rad = 5 * height / 470;\n            const strokeWidth = 2 * height / 470\n            //console.log(\"height: \" + height)\n            // console.log(\"width: \" + width)\n            allShots.forEach(each => {\n                if (each.y <= 410) {\n                    if (each.make === 1) {\n                        tradArray.push(<Circle cx={widthAltered / 2 + each.x * width / 500} cy={heightAltered / 2 + each.y * height / 470 - 185 * height / 470} r={rad} fill=\"none\" stroke=\"limegreen\" strokeWidth={strokeWidth} />)\n                    } else {\n                        tradArray.push(<Line x1={widthAltered / 2 - rad + each.x * width / 500} y1={heightAltered / 2 - rad + each.y * height / 470 - 185 * height / 470} x2={widthAltered / 2 + rad + each.x * width / 500} y2={heightAltered / 2 + rad + each.y * height / 470 - 185 * height / 470} stroke=\"red\" strokeWidth={strokeWidth} />)\n                        tradArray.push(<Line x1={widthAltered / 2 + rad + each.x * width / 500} y1={heightAltered / 2 - rad + each.y * height / 470 - 185 * height / 470} x2={widthAltered / 2 - rad + each.x * width / 500} y2={heightAltered / 2 + rad + each.y * height / 470 - 185 * height / 470} stroke=\"red\" strokeWidth={strokeWidth} />)\n                    }\n                }\n            })\n            let styles = {\n                position: \"absolute\",\n                transform: `translate(${-(widthAltered / 2)}px, ${-heightAltered / 2}px)`,\n            }\n            let tradArrayWrapper = (\n                <div id=\"inner-imageview-div\" style={styles}>\n                    <Svg className=\"imageview-child\" height={heightAltered} width={widthAltered} >\n                        {tradArray}\n                    </Svg>\n                </div>)\n            console.log(tradArrayWrapper)\n            return tradArrayWrapper\n        }\n        // console.log(\"Returning Traditional\")\n        //console.log(tradArray)\n        return tradArray\n    }\n\n    function determineView(viewType) {\n        console.log(\"Determining viewtype: \" + viewType)\n        chooseCourt(viewType)\n        switch (viewType) {\n            case \"Traditional\":\n                console.log(\"Displaying Traditional\")\n                let response = displayTraditional()\n                return response\n            case \"Grid\":\n                if (allGridTiles.length === 0) {\n                    console.log(\"Displaying Grid\")\n                    displayGrid()\n                }\n                return resizeGrid()\n            case \"Zone\":\n                console.log(\"Displaying Zone\")\n                return displayZone()\n            case \"Heat\":\n                if (allHeatTiles.length === 0) {\n                    console.log(\"Displaying Heat\")\n                    displayHeat()\n                }\n                return resizeHeat()\n        }\n        console.log(\"Returning: \")\n        //console.log(response)\n        return <div></div>\n    }\n\n    function displayGrid() {\n        //console.log(\"gridAverages before: \")\n        //console.log(gridAverages)\n        //console.log(typeof (gridAverages))\n\n        if (allShotsRef.current) {\n            let allTiles = {}\n            let squareSizeOrig = 10\n            for (let j = -55; j < 400; j = j + squareSizeOrig) {\n                for (let i = -250; i < 250; i = i + squareSizeOrig) {\n                    let tempTile = {}\n                    tempTile.x = i\n                    tempTile.y = j\n                    tempTile.shotinfo = [0.0, 0.0, 0.0];\n                    allTiles[`tile_${i}_${j}`] = tempTile\n                }\n            }\n            let factor = 0.007;\n            //console.log(allTiles)\n            let shots = allShotsRef.current.filter(param => param.y <= 400)\n            let shotCounter = allShotsRef.current.length\n            Object.keys(allTiles).forEach(eachTile => {\n                let upperBoundX = allTiles[eachTile].x + 5 + squareSizeOrig * 1.5\n                let lowerBoundX = allTiles[eachTile].x + 5 - squareSizeOrig * 1.5\n                let upperBoundY = allTiles[eachTile].y + 5 + squareSizeOrig * 1.5\n                let lowerBoundY = allTiles[eachTile].y + 5 - squareSizeOrig * 1.5\n                shots.forEach(eachShot => {\n                    if (eachShot.x < upperBoundX && eachShot.x >= lowerBoundX && eachShot.y < upperBoundY && eachShot.y >= lowerBoundY) {\n                        allTiles[eachTile].shotinfo[1] = allTiles[eachTile].shotinfo[1] + 1\n                        if (eachShot.make === 1) {\n                            allTiles[eachTile].shotinfo[0] = allTiles[eachTile].shotinfo[0] + 1\n                        }\n                    }\n                })\n            })\n            Object.values(allTiles).forEach(each => {\n                if (each.shotinfo[1] !== 0) {\n                    each.shotinfo[2] = each.shotinfo[0] / each.shotinfo[1]\n                }\n            })\n            let predictedValue = 0, aSum = 0, bSum = 0, p = 2, value = 0, offset = 10, maxDistanceBetweenNodes = 20, calcDistance = 0;\n            let tileValues = {}\n            Object.keys(allTiles).forEach(eachTile => {\n                if (allTiles[eachTile].x % offset === 0 && (allTiles[eachTile].y - 5) % offset === 0) {\n                    aSum = 0;\n                    bSum = 0;\n                    Object.keys(allTiles).forEach(eachTile2 => {\n                        calcDistance = getDistance(allTiles[eachTile], allTiles[eachTile2])\n                        if (eachTile !== eachTile2 && calcDistance < maxDistanceBetweenNodes) {\n                            value = allTiles[eachTile2].shotinfo[2]\n                            aSum = aSum + (value / Math.pow(calcDistance, p));\n                            bSum = bSum + (1 / Math.pow(getDistance(allTiles[eachTile], allTiles[eachTile2]), p));\n                        }\n                    })\n                    predictedValue = aSum / bSum;\n                    tileValues[eachTile] = predictedValue\n                }\n            })\n            // console.log(\"tileValues\")\n            //console.log(tileValues)\n            let min = 1;\n            let minFactor = 0.00045;\n            // console.log(\"shotCounter: \" + shotCounter)\n            if (shotCounter * minFactor > 1) {\n                min = shotCounter * minFactor;\n            } else {\n                factor = 4.1008 * Math.pow(shotCounter, -0.798);\n            }\n            //console.log(\"factor: \" + factor)\n            let maxShotsPerMaxSquare = 0;\n            maxShotsPerMaxSquare = factor * shotCounter;\n            if (maxShotsPerMaxSquare == 0) {\n                maxShotsPerMaxSquare = 1;\n            }\n            //let squareSize = width / 50;\n            //let allSquares = []\n            let temp, avg;\n            let squareElements = []\n            //console.log(\"maxShotsPerMaxSquare: \" + maxShotsPerMaxSquare)\n            Object.keys(allTiles).forEach(eachTile => {\n                let squareSide = 0\n                //console.log(\"allTiles[eachTile].shotinfo[1]: \" + allTiles[eachTile].shotinfo[1])\n                let eachTileShotCount = allTiles[eachTile].shotinfo[1]\n                //console.log(\"eachTileShotCount: \" + eachTileShotCount)\n                if (eachTileShotCount < maxShotsPerMaxSquare && eachTileShotCount > min) {\n                    squareSide = eachTileShotCount / maxShotsPerMaxSquare\n                    //squareSide = eachTileShotCount / maxShotsPerMaxSquare * squareSize * 0.9\n                } else if (eachTileShotCount > maxShotsPerMaxSquare) {\n                    //squareSide = squareSize * 0.9\n                    squareSide = 1\n                }\n                //console.log(\"squareSide: \" + squareSide)\n                temp = \"(\" + allTiles[eachTile].x + \",\" + allTiles[eachTile].y + \")\";\n                avg = gridAveragesRef.current[temp]\n                //console.log(\"avg: \" + avg)\n                let tileFill = \"\"\n                //console.log(\"tileValues[eachTile]: \" + tileValues[eachTile])\n                if (tileValues[eachTile] > avg + 0.07) {\n                    tileFill = \"#fc2121\"\n                    //square.setFill(Color.web(\"#fc2121\"));\n                } else if (tileValues[eachTile] > avg + 0.05 && tileValues[eachTile] <= avg + 0.07) {\n                    tileFill = \"#ff6363\"\n                    //square.setFill(Color.web(\"#ff6363\"));\n                } else if (tileValues[eachTile] > avg + 0.015 && tileValues[eachTile] <= avg + 0.05) {\n                    tileFill = \"#ff9c9c\"\n                    //square.setFill(Color.web(\"#ff9c9c\"));\n                } else if (tileValues[eachTile] > avg - 0.015 && tileValues[eachTile] <= avg + 0.015) {\n                    tileFill = \"white\"\n                    //square.setFill(Color.WHITE);\n                } else if (tileValues[eachTile] > avg - 0.05 && tileValues[eachTile] <= avg - 0.015) {\n                    tileFill = \"#aed9ff\"\n                    //square.setFill(Color.web(\"#aed9ff\"));\n                } else if (tileValues[eachTile] > avg - 0.07 && tileValues[eachTile] <= avg - 0.05) {\n                    tileFill = \"#8bc9ff\"\n                    //square.setFill(Color.web(\"#8bc9ff\"));\n                } else {\n                    tileFill = \"#7babff\"\n                    //square.setFill(Color.web(\"#7babff\"));\n                }\n                squareElements.push({\n                    x: allTiles[eachTile].x,\n                    y: allTiles[eachTile].y,\n                    tileFill: tileFill,\n                    squareSide: squareSide\n                })\n            })\n            setAllGridTiles(squareElements)\n            //console.log(\"allGridTiles\")\n            //console.log(allGridTiles)\n            //console.log(\"Returning Grid\")\n            //console.log(squareElements)\n            //return squareElements\n        }\n    }\n\n    function getDistance(tile1, tile2) {\n        return Math.sqrt(Math.pow(tile1.x - tile2.x, 2) + Math.pow(tile1.y - tile2.y, 2));\n    }\n\n    async function getGridAverages() {\n        console.log(\"getGridAverages()\")\n        //let response = await getSearchData(\"http://138.68.52.234:8080/shots_request?gridaverages=true\")\n        let response = await getSearchData(\"https://customnbashotcharts.com:8443/shots_request?gridaverages=true\")\n            .then(res => {\n                //console.log(\"getGridAverages\")\n                //console.log(res.gridaverages)\n                let averageJson = {}\n                res.gridaverages.forEach(each => averageJson[each.uniqueid] = each.average)\n                //console.log(averageJson)\n                return averageJson\n            })\n        return response\n    }\n\n    async function getSearchData(url) {\n        console.log(\"Fetching \" + url)\n        const response = await fetch(url, {\n            method: 'GET'\n        }).then(res => res.json())\n            .then(data => {\n                //console.log(\"URL RESPONSE FROM \" + url + \": \")\n                //console.log(data)\n                return data\n            }).catch(error => console.log('error', error))\n        return response\n    }\n    function generateZoneLabels(view) {\n        if (allShotsRef.current && view === \"Zone\") {\n            let allZones = mapShotsToZones()\n            let zoneLabels = []\n            const height = document.getElementById('transparent-court-on-top').clientHeight\n            const width = document.getElementById('transparent-court-on-top').clientWidth\n            const heightAltered = height * 1.1\n            const widthAltered = width * 1.1\n            let fontSizeFrac = scaleNumber(18)\n            let fontSizePerc = scaleNumber(16)\n            let fontWidth = scaleNumber(10 * fontSizeFrac)\n            let labelFracStyle = {\n                fontSize: fontSizeFrac,\n                margin: \"0px\",\n            }\n            let labelPercStyle = {\n                fontSize: fontSizePerc,\n                margin: \"0px\"\n            }\n            for (let i = 1; i < allZones.length; i++) {\n                let divStyles = { position: \"absolute\", width: fontWidth, backgroundColor: \"transparent\", zIndex: 1 }\n                switch (i) {\n                    case 1:\n                        divStyles.transform = `translate(0px,${-scaleNumber(215)}px)`\n                        break;\n                    case 2:\n                        divStyles.transform = `translate(0px,${-scaleNumber(120)}px)`\n                        break;\n                    case 3:\n                        divStyles.transform = `translate(${-scaleNumber(115)}px,${-scaleNumber(155)}px)`\n                        break;\n                    case 4:\n                        divStyles.transform = `translate(0px,${-scaleNumber(57)}px)`\n                        break;\n                    case 5:\n                        divStyles.transform = `translate(${scaleNumber(115)}px,${scaleNumber(-155)}px)`\n                        break;\n                    case 6:\n                        divStyles.transform = `translate(${-scaleNumber(185)}px,${-scaleNumber(115)}px)`\n                        break;\n                    case 7:\n                        divStyles.transform = `translate(${-scaleNumber(120)}px,${-scaleNumber(20)}px)`\n                        break;\n                    case 8:\n                        divStyles.transform = `translate(0px,${scaleNumber(20)}px)`\n                        break;\n                    case 9:\n                        divStyles.transform = `translate(${scaleNumber(120)}px,${-scaleNumber(20)}px)`\n                        break;\n                    case 10:\n                        divStyles.transform = `translate(${scaleNumber(185)}px,${-scaleNumber(115)}px)`\n                        break;\n                    case 11:\n                        divStyles.transform = `translate(${scaleNumber(-210)}px,${-scaleNumber(200)}px)`\n                        break;\n                    case 12:\n                        divStyles.transform = `translate(${-scaleNumber(165)}px,${scaleNumber(70)}px)`\n                        break;\n                    case 13:\n                        divStyles.transform = `translate(0px,${scaleNumber(100)}px)`\n                        break;\n                    case 14:\n                        divStyles.transform = `translate(${scaleNumber(165)}px,${scaleNumber(70)}px)`\n                        break;\n                    case 15:\n                        divStyles.transform = `translate(${scaleNumber(210)}px,${-scaleNumber(200)}px)`\n                        break;\n                }\n                let percent = \"0%\"\n                if (allZones[i][1] !== 0) {\n                    percent = (allZones[i][0] * 100 / allZones[i][1]) % 1 === 0 ? `${Number(allZones[i][0] / allZones[i][1] * 100).toFixed(0)}%` : `${Number(allZones[i][0] / allZones[i][1] * 100).toFixed(1)}%`\n                }\n                zoneLabels.push(<div height={heightAltered} width={widthAltered} style={divStyles}>\n                    <p className=\"labelFrac\" style={labelFracStyle}>{`${allZones[i][0]}/${allZones[i][1]}`}</p>\n                    <p className=\"labelPerc\" style={labelPercStyle}>{percent}</p>\n                </div>)\n            }\n            return zoneLabels\n        }\n        return\n    }\n\n    function mapShotsToZones() {\n        let allShots = allShotsRef.current\n        if (allShots) {\n            let allZones = []\n            for (let i = 0; i < 16; i++) {\n                let array = [0, 0, 0]\n                allZones.push(array)\n            }\n            function addShot(i, make) {\n                allZones[i][1] = allZones[i][1] + 1\n                if (make) { allZones[i][0] = allZones[i][0] + 1 }\n            }\n            allShots.forEach(eachShot => {\n                switch (eachShot.shotzonebasic) {\n                    case \"Backcourt\":\n                        break;\n                    case \"Restricted Area\":\n                        addShot(1, eachShot.make);\n                        break;\n                    case \"In The Paint (Non-RA)\":\n                        switch (eachShot.shotzonearea) {\n                            case \"Left Side(L)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"8-16 ft.\":\n                                        addShot(3, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Center(C)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"Less Than 8 ft.\":\n                                        addShot(2, eachShot.make);\n                                        break;\n                                    case \"8-16 ft.\":\n                                        addShot(4, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Right Side(R)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"8-16 ft.\":\n                                        addShot(5, eachShot.make);\n                                        break;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"Mid-Range\":\n                        switch (eachShot.shotzonearea) {\n                            case \"Left Side(L)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"8-16 ft.\":\n                                        addShot(3, eachShot.make);\n                                        break;\n                                    case \"16-24 ft.\":\n                                        addShot(6, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Left Side Center(LC)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"16-24 ft.\":\n                                        addShot(7, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Center(C)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"8-16 ft.\":\n                                        addShot(4, eachShot.make);\n                                        break;\n                                    case \"16-24 ft.\":\n                                        addShot(8, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Right Side Center(RC)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"16-24 ft.\":\n                                        addShot(9, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Right Side(R)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"8-16 ft.\":\n                                        addShot(5, eachShot.make);\n                                        break;\n                                    case \"16-24 ft.\":\n                                        addShot(10, eachShot.make);\n                                        break;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"Left Corner 3\":\n                        addShot(11, eachShot.make);\n                        break;\n                    case \"Right Corner 3\":\n                        addShot(15, eachShot.make);\n                        break;\n                    case \"Above the Break 3\":\n                        switch (eachShot.shotzonearea) {\n                            case \"Left Side Center(LC)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"24+ ft.\":\n                                        addShot(12, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Center(C)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"24+ ft.\":\n                                        addShot(13, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Right Side Center(RC)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"24+ ft.\":\n                                        addShot(14, eachShot.make);\n                                        break;\n                                    default:\n                                }\n                                break;\n                        }\n                        break;\n                }\n            })\n            allZones.forEach(eachZone => {\n                if (eachZone[1] !== 0) {\n                    eachZone[2] = eachZone[0] * 1.0 / eachZone[1]\n                }\n            })\n            return allZones;\n        }\n        return <div></div>\n    }\n\n    function displayZone() {\n        if (allShotsRef.current) {\n            let allZones = mapShotsToZones()\n            //console.log(allZones)\n            let coloredZones = []\n            let fill = \"\"\n            //console.log(zoneAverages)\n            const height = document.getElementById('transparent-court-on-top').clientHeight\n            const width = document.getElementById('transparent-court-on-top').clientWidth\n            const heightAltered = height * 1.1\n            const widthAltered = width * 1.1\n            console.log(`height: ${height}`)\n            console.log(`width: ${width}`)\n            for (let i = 1; i < allZones.length; i++) {\n                if (allZones[i][1] === 0) {\n                    fill = \"rgba(178,178,178, 1)\"\n                } else {\n                    let diff = allZones[i][2] - zoneAveragesRef.current[i]\n                    if (diff > 0.06) {\n                        fill = \"rgba(252,33,33, 1)\"\n                    } else if (diff < 0.06 && diff >= 0.04) {\n                        fill = \"rgba(255,99,99, 1)\"\n                    } else if (diff < 0.04 && diff >= 0.02) {\n                        fill = \"rgba(255,156,156, 1)\"\n                    } else if (diff < 0.02 && diff >= -0.02) {\n                        fill = \"rgba(178,178,178, 1)\"\n                    } else if (diff < -0.02 && diff >= -0.04) {\n                        fill = \"rgba(145,198,244, 1)\"\n                    } else if (diff < -0.04 && diff >= -0.06) {\n                        fill = \"rgba(86,176,255, 1)\"\n                    } else if (diff < -0.06) {\n                        fill = \"rgba(35,115,255, 1)\"\n                    }\n                }\n                let d = \"\"\n                let zoneId = `zone${i}`\n                let centerX = widthAltered / 2\n                let centerY = heightAltered / 2\n                let strokeWidth = scaleNumber(3)\n                let stroke = \"rgba(0,0,0,1)\"\n                switch (i) {\n                    case 1:\n                        d = `m ${centerX - scaleNumber(39)} ${centerY - scaleNumber(233)}  l ${scaleNumber(78)} 0 l0 ${scaleNumber(56)} a${scaleNumber(4)},${scaleNumber(3.7)} 0 0,1 ${scaleNumber(-77)},0 l0 ${scaleNumber(-56)}`\n                        break;\n                    case 2:\n                        d = `m ${centerX - scaleNumber(80)} ${centerY - scaleNumber(233)} l ${scaleNumber(41)} 0 l0 ${scaleNumber(56)} a${scaleNumber(4)},${scaleNumber(3.7)} 0 0,0 ${scaleNumber(77)},0  l0 ${scaleNumber(-56)} l${scaleNumber(40)} 0 l0 ${scaleNumber(56)}a${scaleNumber(5)},${scaleNumber(5.25)} 0 0,1 ${scaleNumber(-157)},0 l0 ${scaleNumber(-56)}`\n                        break;\n                    case 3:\n                        let r3 = 85, r3_2 = 170\n                        d = `m ${centerX - scaleNumber(160)} ${centerY - scaleNumber(233)} l ${scaleNumber(81)} 0 l0 ${scaleNumber(56)} a${scaleNumber(r3)},${scaleNumber(r3)} 0 0,0 ${scaleNumber(38.7)},${scaleNumber(71.2)} l${scaleNumber(-41)} ${scaleNumber(73)} a${scaleNumber(r3_2)},${scaleNumber(r3_2)} 0 0,1 ${scaleNumber(-78.6)} ${scaleNumber(-145)}  l0 ${scaleNumber(-56)}`\n                        break;\n                    case 4:\n                        let r4 = 85, r4_2 = 160\n                        d = `m ${centerX - scaleNumber(40)} ${centerY - scaleNumber(105)}  a${scaleNumber(r4)},${scaleNumber(r4)} 0 0,0 ${scaleNumber(80)} 0 l${scaleNumber(41)} ${scaleNumber(71.8)} a${scaleNumber(r4_2)},${scaleNumber(r4_2)} 0 0,1 ${scaleNumber(-162)} 0 l${scaleNumber(41)} ${scaleNumber(-73)}`\n                        break;\n                    case 5:\n                        let r5 = 85, r5_2 = 170\n                        d = `m ${centerX + scaleNumber(78)} ${centerY - scaleNumber(233)} l ${scaleNumber(80)} 0 l0 ${scaleNumber(56)} a${scaleNumber(r5_2)},${scaleNumber(r5_2)} 0 0,1 ${scaleNumber(-77.4)} ${scaleNumber(143.5)} l${scaleNumber(-41)} ${scaleNumber(-72.6)} a${scaleNumber(r5)},${scaleNumber(r5)} 0 0,0 ${scaleNumber(38.7)},${scaleNumber(-71.2)}  l0 ${scaleNumber(-56)}`\n                        break;\n                    case 6:\n                        let r6 = 200\n                        d = `m ${centerX - scaleNumber(219)} ${centerY - scaleNumber(233)}  l ${scaleNumber(59)} 0 l0 ${scaleNumber(56)} a${scaleNumber(r6)},${scaleNumber(r6)} 0 0,0 ${scaleNumber(24)},${scaleNumber(88.5)} l${scaleNumber(-60)} ${scaleNumber(40)}  a${scaleNumber(r6)},${scaleNumber(r6)} 0 0,1 ${scaleNumber(-22.75)},${scaleNumber(-48)} l0 ${scaleNumber(-137)}`\n                        break;\n                    case 7:\n                        let r7 = 150, r7_2 = 230\n                        d = `m ${centerX - scaleNumber(136)} ${centerY - scaleNumber(89)}  a${scaleNumber(r7)},${scaleNumber(r7)} 0 0,0 ${scaleNumber(80)} ${scaleNumber(68)} l${scaleNumber(-22)} ${scaleNumber(65)} a${scaleNumber(r7_2)},${scaleNumber(r7_2)} 0 0,1 ${scaleNumber(-118)} ${scaleNumber(-92.5)} l${scaleNumber(60)} ${scaleNumber(-40)}`\n                        break;\n                    case 8:\n                        let r8 = 150, r8_2 = 230\n                        d = `m ${centerX + scaleNumber(-57)} ${centerY - scaleNumber(21)}  a${scaleNumber(r8)},${scaleNumber(r8)} 0 0,0 ${scaleNumber(113)} 0 l${scaleNumber(21.5)} ${scaleNumber(65)} a${scaleNumber(r8_2)},${scaleNumber(r8_2)} 0 0,1 ${scaleNumber(-155.5)} 0 l${scaleNumber(22)} ${scaleNumber(-65)} `\n                        break;\n                    case 9:\n                        let r9 = 150, r9_2 = 230\n                        d = `m ${centerX + scaleNumber(135)} ${centerY - scaleNumber(90)} l${scaleNumber(61)} ${scaleNumber(42)} a${scaleNumber(r9_2)},${scaleNumber(r9_2)} 0 0,1 ${scaleNumber(-118)} ${scaleNumber(92.5)} l${scaleNumber(-22)} ${scaleNumber(-66)} a${scaleNumber(r9)},${scaleNumber(r9)} 0 0,0 ${scaleNumber(80)} ${scaleNumber(-70)}  `\n                        break;\n                    case 10:\n                        let r10 = 200\n                        d = `m ${centerX + scaleNumber(158)} ${centerY - scaleNumber(233)}  l ${scaleNumber(60.5)} 0 l0 ${scaleNumber(137)} a${scaleNumber(r10)},${scaleNumber(r10)} 0 0,1 ${scaleNumber(-22.75)},${scaleNumber(48)}  l${scaleNumber(-60)} ${scaleNumber(-41.5)}  a${scaleNumber(r10)},${scaleNumber(r10)} 0 0,0 ${scaleNumber(23)},${scaleNumber(-88.5)} l0 ${scaleNumber(-56)}`\n                        break;\n                    case 11:\n                        d = `m ${centerX - scaleNumber(248)} ${centerY - scaleNumber(233)}  l${scaleNumber(30)} 0 l0 ${scaleNumber(137)}l${scaleNumber(-30)} 0 l0 ${scaleNumber(-137)}`\n                        break;\n                    case 12:\n                        let r12 = 220\n                        d = `m ${centerX - scaleNumber(248)} ${centerY - scaleNumber(96)} l${scaleNumber(30)} 0 a${scaleNumber(r12)},${scaleNumber(r12)} 0 0,0 ${scaleNumber(129)},${scaleNumber(136)} l${scaleNumber(-77)} ${scaleNumber(193)} l${scaleNumber(-82)} 0 l0 ${scaleNumber(-330)}`\n                        break;\n                    case 13:\n                        let r13 = 245\n                        d = `m ${centerX - scaleNumber(90)} ${centerY + scaleNumber(40)}  a${scaleNumber(r13)},${scaleNumber(r13)} 0 0,0 ${scaleNumber(179)},0 l${scaleNumber(77)} ${scaleNumber(193.5)} l${scaleNumber(-333)} 0 l${scaleNumber(77)} ${scaleNumber(-193)}`\n                        break;\n                    case 14:\n                        let r14 = 220\n                        d = `m ${centerX + scaleNumber(219)} ${centerY - scaleNumber(96)} l${scaleNumber(30)} 0 l0 ${scaleNumber(330)} l${scaleNumber(-83)} 0 l${scaleNumber(-77)} ${scaleNumber(-193.5)} a${scaleNumber(r14)},${scaleNumber(r14)} 0 0,0 ${scaleNumber(130)},${scaleNumber(-137)}  `\n                        break;\n                    case 15:\n                        d = `m ${centerX + scaleNumber(219)} ${centerY - scaleNumber(233)}  l${scaleNumber(30)} 0 l0 ${scaleNumber(137)}l${scaleNumber(-30)} 0 l0 ${scaleNumber(-137)}`\n                        break;\n                }\n                coloredZones.push(<Path id={zoneId} d={d} fill={fill} stroke={stroke} strokeWidth={strokeWidth} />)\n            }\n            //let dRad = `m ${centerX} ${centerY - scaleNumber(180)}  l200 500`\n            // let r345 = 5\n            //let d345 = `m ${centerX - scaleNumber(160)} ${centerY - scaleNumber(233)} l ${scaleNumber(318)} 0 l0 ${scaleNumber(56)} a${scaleNumber(r345)},${scaleNumber(5.25)} 0 0,1 ${scaleNumber(-318)},0 l0 ${scaleNumber(-56)}`\n            //<Path id=\"zone345\" d={d345} fill={fill} stroke={stroke} strokeWidth={strokeWidth} />\n            let styles = {\n                position: \"absolute\",\n                transform: `translate(${-(widthAltered / 2)}px, ${-heightAltered / 2}px)`,\n                zIndex: 0\n            }\n            return (<div id=\"inner-imageview-div\" style={styles}>\n                <Svg className=\"imageview-child\" id=\"zones-underneath\" height={heightAltered} width={widthAltered} >\n                    {coloredZones}\n                </Svg>\n            </div>)\n        }\n    }\n\n    async function getZoneAverages() {\n        console.log(\"getZoneAverages()\")\n        let response = await getSearchData(\"https://customnbashotcharts.com:8443/shots_request?zoneaverages=true\")\n            .then(res => {\n                //console.log(\"getGridAverages\")\n                //console.log(res.gridaverages)\n                let averageJson = {}\n                res.zoneaverages.forEach(each => averageJson[each.uniqueid] = each.average)\n                //console.log(averageJson)\n                return averageJson\n            })\n        return response\n    }\n    function displayHeat() {\n        console.log(\"displayHeat()\")\n        if (allShotsRef.current) {\n            let allTiles = {}\n            for (let x = -250; x < 250; x++) {\n                for (let y = -55; y < 400; y++) {\n                    allTiles[`tile_${x}_${y}`] = {\n                        x: x,\n                        y: y,\n                        shotinfo: [0.0, 0.0, 0.0]\n                    }\n                }\n            }\n            let shots = allShotsRef.current.filter(param => param.y <= 400)\n            let shotCounter = allShotsRef.current.length\n            shots.forEach(eachShot => {\n                // console.log(`${eachShot.x},${eachShot.y}`)\n                //console.log(allTiles[`tile_${eachShot.x}_${eachShot.y}`])\n                //console.log(allTiles[`tile_${eachShot.x}_${eachShot.y}`].shotinfo)\n                allTiles[`tile_${eachShot.x}_${eachShot.y}`].shotinfo[1] = allTiles[`tile_${eachShot.x}_${eachShot.y}`].shotinfo[1] + 1\n                if (eachShot.make === 1) {\n                    allTiles[`tile_${eachShot.x}_${eachShot.y}`].shotinfo[0] = allTiles[`tile_${eachShot.x}_${eachShot.y}`].shotinfo[0] + 1\n                }\n            })\n            Object.values(allTiles).forEach(each => {\n                if (each.shotinfo[1] !== 0) {\n                    each.shotinfo[2] = each.shotinfo[0] / each.shotinfo[1]\n                    //console.log(each)\n                }\n            })\n            let aSum = 0, bSum = 0, p = 2, value = 0, offset = 15, maxDistanceBetweenNodes = 30, calcDistance = 0;\n            let tileValues = {}\n            //console.log(\"Running IDW\")\n            Object.keys(allTiles).forEach(eachTile => {\n                if (allTiles[eachTile].x % offset === 0 && (allTiles[eachTile].y) % offset === 0) {\n                    //console.log(`OUTER LOOP: ${allTiles[eachTile].x}, ${allTiles[eachTile].y}`)\n                    aSum = 0;\n                    bSum = 0;\n                    let lowerBoundX = allTiles[eachTile].x - maxDistanceBetweenNodes >= -250 ? allTiles[eachTile].x - maxDistanceBetweenNodes : -250\n                    let upperBoundX = allTiles[eachTile].x + maxDistanceBetweenNodes < 250 ? allTiles[eachTile].x + maxDistanceBetweenNodes : 249\n                    let lowerBoundY = allTiles[eachTile].y - maxDistanceBetweenNodes >= -55 ? allTiles[eachTile].y - maxDistanceBetweenNodes : -55\n                    let upperBoundY = allTiles[eachTile].y + maxDistanceBetweenNodes < 400 ? allTiles[eachTile].y + maxDistanceBetweenNodes : 399\n                    for (let i = lowerBoundX; i <= upperBoundX; i++) {\n                        for (let j = lowerBoundY; j <= upperBoundY; j++) {\n                            //let tempTile = allTiles[`tile_${i}_${j}`]\n                            //console.log(allTiles[`tile_${i}_${j}`])\n                            let calcDistance = getDistance(allTiles[eachTile], allTiles[`tile_${i}_${j}`])\n                            if (calcDistance < maxDistanceBetweenNodes && calcDistance > 0) {\n                                //console.log(`INNER LOOP: ${allTiles[`tile_${i}_${j}`].x}, ${allTiles[`tile_${i}_${j}`].y}`)\n                                aSum = aSum + (allTiles[`tile_${i}_${j}`].shotinfo[1] * calcDistance / Math.pow(calcDistance, p));\n                                bSum = bSum + (1 / Math.pow(calcDistance, p));\n                            }\n                        }\n                    }\n                    tileValues[eachTile] = aSum / bSum;\n                }\n            })\n            //console.log(\"tileValues\")\n            //console.log(tileValues)\n\n            let maxValue = 0.0\n            Object.values(tileValues).forEach(eachValue => {\n                if (eachValue > maxValue) {\n                    maxValue = eachValue\n                }\n            })\n            let heatTileInfo = []\n            // console.log(\"maxValue: \" + maxValue)\n            if (maxValue != 0) {\n                maxValue = maxValue * (500 * 1.0 / shotCounter);\n                let maxCutoff = 0.00004 * shotCounter / maxValue + 0.3065;\n                let diff = maxCutoff / 7;\n                Object.keys(tileValues).forEach(eachTileKey => {\n                    let color = \"\", circleArray = \"\"\n                    let value = tileValues[eachTileKey]\n                    if (value > maxValue * (maxCutoff - (diff * 6))) {\n                        if (value > maxValue * (maxCutoff - (diff * 6)) && value <= maxValue * (maxCutoff - (diff * 5))) {\n                            color = \"#bc53f8\"\n                            circleArray = \"1\"\n                        } else if (value > maxValue * (maxCutoff - (diff * 5)) && value <= maxValue * (maxCutoff - (diff * 4))) {\n                            color = \"#dd76ff\"\n                            circleArray = \"2\"\n                        } else if (value > maxValue * (maxCutoff - (diff * 4)) && value <= maxValue * (maxCutoff - (diff * 3))) {\n                            color = \"#e696fa\"\n                            circleArray = \"3\"\n                        } else if (value > maxValue * (maxCutoff - (diff * 3)) && value <= maxValue * (maxCutoff - (diff * 2))) {\n                            color = \"#c4b8ff\"\n                            circleArray = \"4\"\n                        } else if (value > maxValue * (maxCutoff - (diff * 2)) && value <= maxValue * (maxCutoff - (diff * 1))) {\n                            color = \"#6bb2f8\"\n                            circleArray = \"5\"\n                        } else if (value > maxValue * (maxCutoff - (diff * 1)) && value <= maxValue * maxCutoff) {\n                            color = \"#62c8ff\"\n                            circleArray = \"6\"\n                        } else {\n                            color = \"#90ebff\"\n                            circleArray = \"7\"\n                        }\n                        heatTileInfo.push({\n                            x: allTiles[eachTileKey].x,\n                            y: allTiles[eachTileKey].y,\n                            color: color,\n                            circleArray: circleArray\n                        })\n                    }\n                })\n                if (heatTileInfo.length === 0) {\n                    setAllHeatTiles(<div></div>)\n                } else {\n                    setAllHeatTiles(heatTileInfo)\n\n                }\n            }\n        }\n    }\n\n    function resizeHeat() {\n        console.log(\"resizeHeat()\")\n        if (allHeatTiles.length > 0) {\n            let circles1 = [], circles2 = [], circles3 = [], circles4 = [], circles5 = [], circles6 = [], circles7 = []\n            let gradients = []\n            const height = document.getElementById('transparent-court').clientHeight\n            const width = document.getElementById('transparent-court').clientWidth\n            const heightAltered = height * 1.1\n            const widthAltered = width * 1.1\n            let radius = 25 * height / 470\n            allHeatTiles.forEach(eachHeatTile => {\n                let cx = widthAltered / 2 + eachHeatTile.x * width / 500\n                let cy = heightAltered / 2 + eachHeatTile.y * height / 470 - 185 * height / 470\n                let circle = <Circle cx={cx} cy={cy} r={radius} fill={`url(#grad_${eachHeatTile.x}_${eachHeatTile.y})`} stroke=\"none\" strokeWidth=\"3\" />\n                switch (eachHeatTile.circleArray) {\n                    case \"1\":\n                        circles1.push(circle)\n                        break;\n                    case \"2\":\n                        circles2.push(circle)\n                        break;\n                    case \"3\":\n                        circles3.push(circle)\n                        break;\n                    case \"4\":\n                        circles4.push(circle)\n                        break;\n                    case \"5\":\n                        circles5.push(circle)\n                        break;\n                    case \"6\":\n                        circles6.push(circle)\n                        break;\n                    case \"7\":\n                        circles7.push(circle)\n                        break;\n                }\n                let eachGradient = <RadialGradient id={`grad_${eachHeatTile.x}_${eachHeatTile.y}`} cx={cx} cy={cy} r={radius} fx={cx} fy={cy} gradientUnits=\"userSpaceOnUse\">\n                    <Stop offset=\"0\" stopColor={eachHeatTile.color} stopOpacity=\"0.8\" />\n                    <Stop offset=\"1\" stopColor={eachHeatTile.color} stopOpacity=\"0\" />\n                </RadialGradient>\n                gradients.push(eachGradient)\n            })\n            return (<Svg className=\"imageview-child\" height={height * 1.1} width={width * 1.1} >\n                <Defs>\n                    {gradients}\n                </Defs>\n                {circles1}\n                {circles2}\n                {circles3}\n                {circles4}\n                {circles5}\n                {circles6}\n                {circles7}\n            </Svg>)\n        }\n        return <div></div>\n    }\n\n    function scaleNumber(number) {\n        if (document.getElementById('transparent-court').clientHeight === 0) {\n            return number * document.getElementById('transparent-court-on-top').clientHeight / 470\n        }\n        return number * document.getElementById('transparent-court').clientHeight / 470\n    }\n\n    useEffect(() => {\n        getGridAverages().then(res => setGridAverages(res))\n        getZoneAverages().then(res => setZoneAverages(res))\n    }, [])\n\n    function determineHeight() {\n        if (document.getElementById(\"transparent-court\") === null) {\n            return 0\n        } else {\n            return document.getElementById(\"transparent-court\").clientHeight\n        }\n    }\n    return (\n        <div className='ShotView'>\n            <p id=\"view-title\">{props.title}</p>\n            <div id=\"imageview-div\">\n                <div className=\"court-image\" id=\"gray-background\" height={determineHeight()} >\n                    <Svg height=\"100%\" width=\"100%\">\n                        <Rect height=\"100%\" width=\"100%\" fill=\"#505050\"></Rect>\n                    </Svg>\n                </div>\n                <img src={transparentCourt} className=\"court-image\" id=\"transparent-court\"></img>\n                <img src={tradCourt} className=\"court-image\" id=\"trad-court\" ></img>\n                <img src={transparentCourt} className=\"court-image\" id=\"transparent-court-on-top\" ></img>\n                {whatToDisplayRef.current}\n            </div>\n            <br></br>\n            <button onClick={() => {\n                props.updateLatestSimpleViewType(\"Traditional\")\n                setLatestSimpleViewType(\"Traditional\")\n            }} >Traditional</button>\n            <button onClick={() => {\n                props.updateLatestSimpleViewType(\"Grid\")\n                setLatestSimpleViewType(\"Grid\")\n            }} >Grid</button>\n            <button onClick={() => {\n                props.updateLatestSimpleViewType(\"Zone\")\n                setLatestSimpleViewType(\"Zone\")\n            }} >Zone</button>\n            <button onClick={() => {\n                props.updateLatestSimpleViewType(\"Heat\")\n                setLatestSimpleViewType(\"Heat\")\n            }} >Heat</button>\n        </div>\n    )\n}\n\nexport default ShotView","import './SelectionViewer.css'\n\nfunction SelectionViewer() {\n    return (\n        <div className=\"SelectionViewer\">\n            Text Will Go Here\n        </div>\n    )\n}\n\nexport default SelectionViewer","import './AdvancedSearchBox.css'\nimport SelectionViewer from './SelectionViewer'\nimport ShotPercentageView from './ShotPercentageView'\n\nfunction AdvancedSearchBox() {\n    function makeButton(name) {\n        return <button class=\"dropdown-button\">\n            {name}\n        </button>\n    }\n    return (\n        <div className=\"AdvancedSearchBox\">\n            <div className=\"search-box-body\">\n                <div className='search-box-inner-body'>\n                    <h6>Choose your search parameters</h6>\n                    <div id='selection-scrollable'>\n                        <p>Seasons: <button>Begin</button> - <button>End</button></p>\n                        <p>Players: {makeButton(\"Choose Players\")}</p>\n                        <p>Season Types: {makeButton(\"Choose Season Types\")}</p>\n                        <p>Shot Distance (ft.): <button>Begin</button> - <button>End</button></p>\n                        <p>Shot Success: {makeButton(\"Choose Makes or Misses\")}</p>\n                        <p>Shot Value: {makeButton(\"Choose 2PT or 3PT\")}</p>\n                        <p>Shot Types: {makeButton(\"Choose Shot Types\")}</p>\n                        <p>Shooting Teams: {makeButton(\"Choose Teams\")}</p>\n                        <p>Home Teams: {makeButton(\"Choose Home Teams\")}</p>\n                        <p>Away Teams: {makeButton(\"Choose Away Teams\")}</p>\n                        <p>Court Areas: {makeButton(\"Choose Court Areas\")}</p>\n                        <p>Sides of Court: {makeButton(\"Choose Sides of Court\")}</p>\n                    </div>\n                    <button className=\"static-button\">Run It</button>\n                    <button className=\"static-button\">View Selection</button>\n                    <br></br>\n                    <p>Current Selections: </p>\n                    <SelectionViewer />\n                </div>\n            </div>\n            <ShotPercentageView />\n        </div>\n    )\n}\n\nexport default AdvancedSearchBox","import './App.css';\nimport Header from './Header'\nimport SimpleSearchBox from './SimpleSearchBox'\nimport ShotView from './ShotView'\nimport AdvancedSearchBox from './AdvancedSearchBox';\nimport SearchTypeButtons from './SearchTypeButtons';\nimport React, { useEffect, useState, useRef } from 'react';\n\nconst App = () => {\n  const [latestSimpleSearchData, setLatestSimpleSearchData] = useState({})\n  const [latestSimpleViewType, setLatestSimpleViewType] = useState(\"Traditional\")\n  const [title, setTitle] = useState(\"\")\n  useEffect(() => {\n    console.log(\"Simple Search Data Changed\")\n    console.log(latestSimpleSearchData)\n  }, [latestSimpleSearchData])\n\n  const latestSimpleViewTypeRef = useRef({});\n  latestSimpleViewTypeRef.current = latestSimpleViewType;\n  const [whichSearchBox, setWhichSearchBox] = useState(<SimpleSearchBox updateLatestSimpleSearchData={processSimpleSearchData}\n    updateLatestSimpleViewType={(inputViewType) => setLatestSimpleViewType(inputViewType, console.log(\"Updated view type with \" + inputViewType))}\n    latestSimpleViewType={latestSimpleViewTypeRef.current} setTitle={setTitle} />)\n\n  function processSimpleSearchData(inputData) {\n    setLatestSimpleSearchData(inputData, console.log(\"Updated latest search with\" + inputData))\n  }\n  function processLatestSimpleViewType(inputViewType) {\n    setLatestSimpleViewType(inputViewType, console.log(\"Updated view type with \" + inputViewType))\n  }\n\n  function handleSimpleClick() {\n    if (whichSearchBox !== <SimpleSearchBox />) {\n      setWhichSearchBox(<SimpleSearchBox />)\n    }\n  }\n\n  function handleAdvancedClick() {\n    if (whichSearchBox !== <AdvancedSearchBox />) {\n      setWhichSearchBox(<AdvancedSearchBox />)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"BaseGrid\">\n        <div >\n          <SearchTypeButtons simpleClickHandler={handleSimpleClick} advancedClickHandler={handleAdvancedClick} />\n          {whichSearchBox}\n        </div>\n        <div className=\"basegrid-grid-item\" id=\"shotview-grid-item\">\n          <ShotView simpleShotData={latestSimpleSearchData} updateLatestSimpleViewType={(inputViewType) => setLatestSimpleViewType(inputViewType, console.log(\"Updated view type with \" + inputViewType))}\n            latestSimpleViewType={latestSimpleViewTypeRef.current} title={title} />\n        </div>\n      </div>\n    </div >\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}