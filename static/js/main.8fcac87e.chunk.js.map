{"version":3,"sources":["Header.js","SearchTypeButtons.js","ShotPercentageView.js","SimpleSearchBox.js","images/newbackcourt.png","images/transparent.png","ShotView.js","SelectionViewer.js","AdvancedSearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","class","id","SearchTypeButtons","props","onClick","simpleClickHandler","advancedClickHandler","ShotPercentageView","console","log","twoPMakes","twoPTotal","threePMakes","threePTotal","fgFrac","fgPerc","twoPFrac","twoPPerc","threePFrac","threePPerc","simpleShotData","simplesearch","forEach","each","make","shottype","Number","toFixed","SimpleSearchBox","currentYear","useState","selectedYear","setSelectedYear","playerfirstname","playerlastname","selectedPlayer","setSelectedPlayer","selectedSeason","setSelectedSeason","activePlayers","setActivePlayers","activeSeasons","setActiveSeasons","yearDisplay","setYearDisplay","activePlayersDisplay","setActivePlayersDisplay","activeSeasonsDisplay","setActiveSeasonsDisplay","shotPercentageData","setShotPercentageData","latestSimpleViewType","setLatestSimpleViewType","keyPressedBuilder","setKeyPressedBuilder","event","keyCode","keyPressedBuilderRef","current","length","substring","String","fromCharCode","target","latestArray","activePlayersRef","map","eachPlayer","displayname","toUpperCase","i","tempArray","startsWith","push","result","document","getElementById","parentNode","scrollTop","offsetTop","getAttribute","initPlayersReverseMapRef","getSeasonsData","selectedYearRef","initPlayersRef","textContent","subYearString","year","years","eachYear","yearResult","scrollIntoView","behavior","processYearChange","keyPressedState","a","getActivePlayersData","response","names","includes","selectedPlayerRef","firstPlayer","playerinfo","useRef","selectedSeasonRef","keyPressedStateRef","initPlayers","initPlayersReverseMap","getSearchData","url","fetch","method","then","res","json","data","catch","error","activePlayersArray","activeplayers","firstname","lastname","trim","sort","b","playerId","playerFirstName","playerLastName","activeSeasonsRes","singleseason","preseason","reg","playoffs","displayActivePlayers","playerElements","value","playerid","handlePlayerButtonClick","displayActiveSeasons","activeSeasonsElements","Object","values","handleSeasonButtonClick","handleYearButtonClick","classList","contains","hideDD","matches","dropdowns","getElementsByClassName","openDropdown","remove","window","removeEventListener","handleDDButtonClick","type","dropdown","addEventListener","toggle","setTitle","updateLatestSimpleViewType","updateLatestSimpleSearchData","setAllSearchData","shots","view","handleViewSelectionButtonClick","onclick","useEffect","getInitData","players","playersReverse","initallplayers","nameArray","getInitPlayersData","elements","displayAllYears","preventDefault","e","height","width","d","fill","strokeWidth","runSimpleSearch","ShotView","innerHeight","innerWidth","size","setWindowSize","allGridTiles","setAllGridTiles","allHeatTiles","setAllHeatTiles","gridAverages","setGridAverages","zoneAverages","setZoneAverages","whatToDisplay","setWhatToDisplay","allShots","setAllShots","isOriginal","localViewType","setLocalViewType","loadingAnimation","setLoadingAnimation","whatToDisplayRef","allShotsRef","gridAveragesRef","zoneAveragesRef","localViewTypeRef","hideElement","elementId","showElement","chooseCourt","handleResize","buffer","determineView","zoneLabels","generateZoneLabels","resizeGrid","clientHeight","clientWidth","heightAltered","widthAltered","squareSize","allNewTiles","eachTile","squareSide","tileFill","transX","x","transY","y","opacity","viewType","tradArray","rad","cx","cy","r","stroke","x1","y1","x2","y2","styles","position","transform","style","displayTraditional","allTiles","squareSizeOrig","j","tempTile","shotinfo","factor","filter","param","shotCounter","keys","upperBoundX","lowerBoundX","upperBoundY","lowerBoundY","eachShot","predictedValue","aSum","bSum","p","offset","maxDistanceBetweenNodes","calcDistance","tileValues","eachTile2","getDistance","Math","pow","min","minFactor","temp","avg","maxShotsPerMaxSquare","squareElements","eachTileShotCount","displayGrid","allZones","mapShotsToZones","coloredZones","diff","zoneId","centerX","centerY","scaleNumber","r3","r3_2","r4","r4_2","r5","r5_2","r6","r7","r7_2","r8","r8_2","r9","r9_2","r10","r12","r13","r14","zIndex","displayZone","allKeys","counter","maxValue","eachValue","heatTileInfo","maxCutoff","eachTileKey","color","circleArray","displayHeat","resizeHeat","tile1","tile2","sqrt","averageJson","gridaverages","uniqueid","average","fontSizeFrac","fontSizePerc","fontWidth","labelFracStyle","fontSize","margin","labelPercStyle","divStyles","backgroundColor","percent","addShot","shotzonebasic","shotzonearea","shotzonerange","eachZone","zoneaverages","circles1","circles2","circles3","circles4","circles5","circles6","circles7","gradients","radius","eachHeatTile","circle","eachGradient","fx","fy","gradientUnits","stopColor","stopOpacity","number","makeLoadingAnimation","isLoading","court","innerR3","thickness3","outerR3","textAlign","animation","setIsLoading","allSearchData","load","setTimeout","getGridAverages","getZoneAverages","title","src","transparentCourt","tradCourt","SelectionViewer","AdvancedSearchBox","makeButton","name","App","latestSimpleSearchData","setLatestSimpleSearchData","latestSimpleViewTypeRef","inputData","inputViewType","whichSearchBox","setWhichSearchBox","isLoadingRef","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.8fcac87e.chunk.js","sourcesContent":["import './Header.css'\n\nfunction Header() {\n    return (\n        <header className='Header'>\n            <div class=\"header-grid-item\" id=\"title\">Custom NBA Shot Charts <span id='versionText'>Version 0.0</span></div>\n            <div class=\"header-grid-item\" id=\"date-accuracy\">\n                <div id='accuracy-title'><u>Accurate As Of</u></div>\n                <div id='accuracy-date'>July 3, 2021</div>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import './SearchTypeButtons.css'\n\nfunction SearchTypeButtons(props) {\n    return (\n        <div className=\"SearchTypeButtons\">\n            <button id=\"simple-search-button\" onClick={props.simpleClickHandler}>\n                Simple Search\n            </button>\n            <button id=\"advanced-search-button\" onClick={props.advancedClickHandler}>\n                Advanced Search\n            </button>\n        </div>\n    );\n}\n\nexport default SearchTypeButtons","import './ShotPercentageView.css'\n\nconst ShotPercentageView = (props) => {\n    console.log(\"Updating ShotPercentageView\")\n    //console.log(props.simpleShotData.simplesearch)\n    let twoPMakes = 0;\n    let twoPTotal = 0;\n    let threePMakes = 0;\n    let threePTotal = 0;\n    let fgFrac = \"--\", fgPerc = \"--\", twoPFrac = \"--\", twoPPerc = \"--\", threePFrac = \"--\", threePPerc = \"--\"\n    if (props.simpleShotData.simplesearch) {\n        props.simpleShotData.simplesearch.forEach(each => {\n            if (each.make == 1 && each.shottype === \"2PT Field Goal\") {\n                twoPMakes++\n                twoPTotal++\n            } else if (each.make == 0 && each.shottype === \"2PT Field Goal\") {\n                twoPTotal++\n            } else if (each.make == 1 && each.shottype === \"3PT Field Goal\") {\n                threePMakes++\n                threePTotal++\n            } else {\n                threePTotal++\n            }\n        })\n        if (twoPTotal !== 0) {\n            twoPFrac = twoPMakes + \"/\" + twoPTotal\n            twoPPerc = Number(twoPMakes / twoPTotal * 100).toFixed(2) + \"%\"\n        }\n        if (threePTotal !== 0) {\n            threePFrac = threePMakes + \"/\" + threePTotal\n            threePPerc = Number(threePMakes / threePTotal * 100).toFixed(2) + \"%\"\n        }\n\n        if (twoPTotal + threePTotal !== 0) {\n            fgFrac = (twoPMakes + threePMakes) + \"/\" + (twoPTotal + threePTotal)\n            fgPerc = Number((twoPMakes + threePMakes) / (twoPTotal + threePTotal) * 100).toFixed(2) + \"%\"\n        }\n    }\n    return (\n        <div className=\"ShotPercentageView\">\n            <p className=\"percentage-grid-item-title\">FG</p>\n            <p className=\"percentage-grid-item-title\">2P</p>\n            <p className=\"percentage-grid-item-title\">3P</p>\n            <p className=\"percentage-grid-item-content\">{fgFrac}</p>\n            <p className=\"percentage-grid-item-content\">{twoPFrac}</p>\n            <p className=\"percentage-grid-item-content\">{threePFrac}</p>\n            <p className=\"percentage-grid-item-content\">{fgPerc}</p>\n            <p className=\"percentage-grid-item-content\">{twoPPerc}</p>\n            <p className=\"percentage-grid-item-content\">{threePPerc}</p>\n        </div>\n    )\n}\n\nexport default ShotPercentageView","import './SimpleSearchBox.css'\nimport SearchTypeButtons from './SearchTypeButtons'\nimport ShotPercentageView from './ShotPercentageView'\nimport { useEffect, useState, useRef } from \"react\";\nimport Svg, { Path, Line, Rect, Defs, RadialGradient, Stop } from 'react-native-svg';\n\n\nconst SimpleSearchBox = (props) => {\n    const currentYear = '2020-21'\n    //STATES\n    const [selectedYear, setSelectedYear] = useState(currentYear);\n    const [selectedPlayer, setSelectedPlayer] = useState({\n        id: 203932,\n        playerfirstname: \"Aaron\",\n        playerlastname: \"Gordon\"\n    });\n    const [selectedSeason, setSelectedSeason] = useState(\"Regular Season\");\n    const [activePlayers, setActivePlayers] = useState([])\n    const [activeSeasons, setActiveSeasons] = useState([])\n    const [yearDisplay, setYearDisplay] = useState([])\n    const [activePlayersDisplay, setActivePlayersDisplay] = useState([])\n    const [activeSeasonsDisplay, setActiveSeasonsDisplay] = useState([])\n    const [shotPercentageData, setShotPercentageData] = useState({})\n    const [latestSimpleViewType, setLatestSimpleViewType] = useState(props.latestSimpleViewType)\n    const [keyPressedBuilder, setKeyPressedBuilder] = useState(\"\")\n    const [keyPressedState, setKeyPressedState] = useState(() => (event) => {\n        //console.log(\"KEYDOWN\")\n        //console.log(`${event.keyCode}: ${String.fromCharCode(event.keyCode)}`)\n        //console.log(`${event.target.id}`)\n        //console.log(activePlayersRef.current)\n        if (event.keyCode === 8 && keyPressedBuilderRef.current.length > 0) {\n            console.log(\"Backspace: \" + keyPressedBuilderRef.current.substring(0, keyPressedBuilderRef.current.length - 1))\n            setKeyPressedBuilder(keyPressedBuilderRef.current.substring(0, keyPressedBuilderRef.current.length - 1))\n        } else if (event.keyCode === 222) {\n            console.log(keyPressedBuilderRef.current + \"'\")\n            setKeyPressedBuilder(keyPressedBuilderRef.current + \"'\")\n        } else if (event.keyCode === 189) {\n            console.log(keyPressedBuilderRef.current + \"-\")\n            setKeyPressedBuilder(keyPressedBuilderRef.current + \"-\")\n        } else if ((event.keyCode >= 48 && event.keyCode <= 90) || event.keyCode === 32) {\n            console.log(keyPressedBuilderRef.current + String.fromCharCode(event.keyCode))\n            setKeyPressedBuilder(keyPressedBuilderRef.current + String.fromCharCode(event.keyCode))\n        }\n        switch (event.target.id) {\n            case \"player-button\":\n                let latestArray = activePlayersRef.current.map(eachPlayer => eachPlayer.displayname.toUpperCase())\n                for (let i = 0; i < keyPressedBuilderRef.current.length; i++) {\n                    let tempArray = []\n                    //console.log(keyPressedBuilderRef.current.length)\n                    //console.log((keyPressedBuilderRef.current.substring(0, i + 1)))\n                    latestArray.forEach(eachPlayer => {\n                        if (eachPlayer.startsWith(keyPressedBuilderRef.current.substring(0, i + 1))) {\n                            // console.log(`Pushing ${eachPlayer}`)\n                            tempArray.push(eachPlayer)\n                        }\n                    })\n                    if (tempArray.length !== 0) {\n                        latestArray = tempArray\n                    }\n                    //console.log(latestArray)\n                }\n                let result = latestArray[0]\n                console.log(result)\n                //document.getElementById(result).scrollIntoView({ behavior: 'auto', block: 'nearest' })\n                document.getElementById(result).parentNode.scrollTop = document.getElementById(result).offsetTop;\n                setSelectedPlayer({\n                    id: document.getElementById(result).getAttribute('playerid'),\n                    playerfirstname: initPlayersReverseMapRef.current[document.getElementById(result).getAttribute('playerid')][1],\n                    playerlastname: initPlayersReverseMapRef.current[document.getElementById(result).getAttribute('playerid')][2]\n                }, getSeasonsData(selectedYearRef.current, initPlayersRef.current[document.getElementById(result).textContent][0], initPlayersRef.current[document.getElementById(result).textContent][1], initPlayersRef.current[document.getElementById(result).textContent][2])\n                );\n                break;\n            case \"year-button\":\n                let year = Number(currentYear.substring(0, 4));\n                let subYearString;\n                let years = []\n                while (year >= 1996) {\n                    if ((year - 1899) % 100 < 10) {\n                        subYearString = \"0\" + (year - 1899) % 100;\n                    } else {\n                        subYearString = \"\" + (year - 1899) % 100;\n                    }\n                    years.push(year + \"-\" + subYearString)\n                    year--;\n                }\n                for (let i = 0; i < keyPressedBuilderRef.current.length; i++) {\n                    let tempArray = []\n                    //console.log(keyPressedBuilderRef.current.length)\n                    //console.log((keyPressedBuilderRef.current.substring(0, i + 1)))\n                    years.forEach(eachYear => {\n                        if (eachYear.startsWith(keyPressedBuilderRef.current.substring(0, i + 1))) {\n                            tempArray.push(eachYear)\n                        }\n                    })\n                    if (tempArray.length !== 0) {\n                        years = tempArray\n                    }\n                    //console.log(latestArray)\n                }\n                let yearResult = years[0]\n                console.log(yearResult)\n                document.getElementById(yearResult).scrollIntoView({ behavior: 'auto' })\n                setSelectedYear(document.getElementById(yearResult).textContent, console.log(\"Set selected year to \" + document.getElementById(yearResult).textContent));\n                processYearChange(yearResult)\n        }\n    })\n\n    async function processYearChange(yearResult) {\n        let response = await getActivePlayersData(document.getElementById(yearResult).textContent)\n        //console.log(\"response\")\n        //console.log(response)\n        //console.log(selectedPlayerRef.current.playerfirstname + \" \" + selectedPlayerRef.current.playerlastname)\n        let names = []\n        response.forEach(each => names.push(each.displayname))\n        //console.log(names.includes(selectedPlayerRef.current.playerfirstname + \" \" + selectedPlayerRef.current.playerlastname))\n        if (!names.includes(selectedPlayerRef.current.playerfirstname + \" \" + selectedPlayerRef.current.playerlastname)) {\n            let firstPlayer = response[0]\n            setSelectedPlayer({\n                id: firstPlayer.playerinfo.id,\n                playerfirstname: firstPlayer.playerinfo.playerfirstname,\n                playerlastname: firstPlayer.playerinfo.playerlastname\n            })\n            console.log(\"Selected Player: \" + firstPlayer.displayname)\n            getSeasonsData(document.getElementById(yearResult).textContent, firstPlayer.playerinfo.id, firstPlayer.playerinfo.playerfirstname, firstPlayer.playerinfo.playerlastname)\n        } else {\n            getSeasonsData(document.getElementById(yearResult).textContent, selectedPlayerRef.current.id, selectedPlayerRef.current.playerfirstname, selectedPlayerRef.current.playerlastname)\n        }\n\n    }\n    //STATE REFS\n    const selectedYearRef = useRef({});\n    selectedYearRef.current = selectedYear;\n    const selectedPlayerRef = useRef({});\n    selectedPlayerRef.current = selectedPlayer;\n    const selectedSeasonRef = useRef({});\n    selectedSeasonRef.current = selectedSeason;\n    const activePlayersRef = useRef({});\n    activePlayersRef.current = activePlayers;\n    const initPlayersRef = useRef({})\n    const initPlayersReverseMapRef = useRef({})\n    const keyPressedStateRef = useRef({});\n    keyPressedStateRef.current = keyPressedState;\n    const keyPressedBuilderRef = useRef({});\n    keyPressedBuilderRef.current = keyPressedBuilder;\n\n    let initState = \"\"\n    let initPlayers = \"\";\n    let initPlayersReverseMap = \"\"\n\n    async function getSearchData(url) {\n        console.log(\"Fetching \" + url)\n        const response = await fetch(url, {\n            method: 'GET'\n        }).then(res => res.json())\n            .then(data => {\n                //console.log(\"URL RESPONSE FROM \" + url + \": \")\n                //console.log(data)\n                return data\n            }).catch(error => console.log('error', error))\n        return response\n    }\n\n    async function getInitData() {\n        let response = await getSearchData(\"https://customnbashotcharts.com:8443/shots_request?init=true\")\n            .then(res => {\n                //console.log(\"getInitData\")\n                //console.log(res.init)\n                initState = res\n            })\n        return response\n    }\n\n    function getInitPlayersData() {\n        let players = {}\n        let playersReverse = {}\n        console.log(\"getInitPlayersData()\")\n        let response = getSearchData(\"https://customnbashotcharts.com:8443/shots_request?initallplayers=true\")\n            .then(res => {\n                for (let i = 0; i < res.initallplayers.length; i++) {\n                    let nameArray = [3]\n                    nameArray[0] = res.initallplayers[i].id;\n                    nameArray[1] = res.initallplayers[i].firstname;\n                    nameArray[2] = res.initallplayers[i].lastname;\n                    players[(res.initallplayers[i].firstname + \" \" + res.initallplayers[i].lastname).trim()] = nameArray;\n                    playersReverse[res.initallplayers[i].id] = nameArray;\n                }\n                initPlayers = players\n                initPlayersReverseMap = playersReverse\n                //console.log(\"SETTING initPlayers/initPlayersReverseMap\")\n                //console.log(initPlayers)\n                //console.log(initPlayersReverseMap)\n                initPlayersRef.current = initPlayers\n                initPlayersReverseMapRef.current = initPlayersReverseMap\n                return res\n            })\n        return response\n    }\n    function getActivePlayersData(year) {\n        let response = getSearchData(`https://customnbashotcharts.com:8443/shots_request?activeplayers=${year}`)\n            .then(res => {\n                let activePlayersArray = []\n                //let activePlayersJson = {}\n                for (let i = 0; i < res.activeplayers.length; i++) {\n                    activePlayersArray.push(\n                        {\n                            displayname: (`${res.activeplayers[i].firstname} ${res.activeplayers[i].lastname}`).trim(),\n                            playerinfo: {\n                                id: res.activeplayers[i].id,\n                                playerfirstname: res.activeplayers[i].firstname,\n                                playerlastname: res.activeplayers[i].lastname\n                            }\n                        })\n\n                    //activePlayersArray.push((`${res.activeplayers[i].firstname} ${res.activeplayers[i].lastname}`).trim())\n                }\n                activePlayersArray.sort((a, b) => {\n                    if (a.displayname < b.displayname) { return -1; }\n                    if (a.displayname > b.displayname) { return 1; }\n                    return 0;\n                })\n\n                console.log(\"getActivePlayersData: \")\n                // console.log(activePlayersArray)\n                setActivePlayers(activePlayersArray)\n                return activePlayersArray\n            })\n        // console.log(\"response\")\n        // console.log(response)\n        return response;\n    }\n\n    async function getSeasonsData(year, playerId, playerFirstName, playerLastName) {\n        // let response = await getSearchData(`http://138.68.52.234:8080/shots_request?singleseasonactivity=true&playerlastname=${playerLastName}&playerfirstname=${playerFirstName}&playerid=${playerId}&year=${year}`)\n        let response = await getSearchData(`https://customnbashotcharts.com:8443/shots_request?singleseasonactivity=true&playerlastname=${playerLastName}&playerfirstname=${playerFirstName}&playerid=${playerId}&year=${year}`)\n            .then(res => {\n                console.log(\"getSeasonsData()\")\n                //console.log(res)\n                let activeSeasonsRes = []\n                if (res.singleseason[0].preseason === 1) {\n                    activeSeasonsRes.push(\"Preseason\")\n                }\n                if (res.singleseason[0].reg === 1) {\n                    activeSeasonsRes.push(\"Regular Season\")\n                }\n                if (res.singleseason[0].playoffs === 1) {\n                    activeSeasonsRes.push(\"Playoffs\")\n                }\n                //console.log(\"getSeasonsData: \")\n                //console.log(activeSeasonsRes)\n                if (!activeSeasonsRes.includes(selectedSeasonRef.current)) {\n                    if (activeSeasonsRes.includes(\"Regular Season\")) {\n                        setSelectedSeason(\"Regular Season\")\n                        console.log(\"Includes Regular Season\")\n                    } else {\n                        setSelectedSeason(activeSeasonsRes[activeSeasonsRes.length - 1])\n                        console.log(\"Does Not Include Regular Season\")\n                    }\n                }\n                setActiveSeasons(activeSeasonsRes)\n            })\n        return response\n    }\n\n    function displayAllYears(currentYear) {\n        if (yearDisplay.length === 0) {\n            console.log(\"displayAllYears()\")\n            let year = Number(currentYear.substring(0, 4));\n            let subYearString;\n            let elements = []\n            while (year >= 1996) {\n                if ((year - 1899) % 100 < 10) {\n                    subYearString = \"0\" + (year - 1899) % 100;\n                } else {\n                    subYearString = \"\" + (year - 1899) % 100;\n                }\n                elements.push(<p className='dropdown-item year-display' id={year + \"-\" + subYearString} onClick={(event) => handleYearButtonClick(event)}>{year + \"-\" + subYearString}</p>)\n                year--;\n            }\n            setYearDisplay(elements)//, console.log(yearDisplay)\n        }\n    }\n\n    function displayActivePlayers() {\n        console.log(\"displayActivePlayers()\")\n        let playerElements = []\n        //console.log(activePlayers)\n        //console.log(activePlayers[0])\n        activePlayers.forEach(value => {\n            //console.log(value)\n            // console.log(value.displayname)\n            //console.log(value.playerinfo.id)\n            playerElements.push(<p className='dropdown-item player-display' id={value.displayname.toUpperCase()} playerid={value.playerinfo.id} onClick={(event) => handlePlayerButtonClick(event)}>{value.displayname}</p>)\n        });\n        setActivePlayersDisplay(playerElements)//, console.log(activePlayersDisplay)\n    }\n\n    function displayActiveSeasons() {\n        console.log(\"displayActiveSeasons()\")\n        let activeSeasonsElements = []\n        Object.values(activeSeasons).map(value => activeSeasonsElements.push(<p className='dropdown-item season-display' onClick={(event) => handleSeasonButtonClick(event)}>{value}</p>));\n        setActiveSeasonsDisplay(activeSeasonsElements)//, console.log(activeSeasons)\n    }\n\n    async function handleYearButtonClick(event) {\n        console.log('handleYearButtonClick()')\n        if (event.target.classList.contains(\"year-display\") && selectedYearRef.current !== event.target.textContent) {\n            //console.log(\"selectedYear: \" + selectedYearRef.current + \", \" + event.target.textContent)\n            setSelectedYear(event.target.textContent, console.log(\"Set selected year to \" + event.target.textContent));\n            //console.log(\"event.target.textContent: \" + event.target.textContent)\n            let response = await getActivePlayersData(event.target.textContent)\n            //console.log(\"response\")\n            //console.log(response)\n            //console.log(selectedPlayerRef.current.playerfirstname + \" \" + selectedPlayerRef.current.playerlastname)\n            let names = []\n            response.forEach(each => names.push(each.displayname))\n            //console.log(names.includes(selectedPlayerRef.current.playerfirstname + \" \" + selectedPlayerRef.current.playerlastname))\n            if (!names.includes(selectedPlayerRef.current.playerfirstname + \" \" + selectedPlayerRef.current.playerlastname)) {\n                let firstPlayer = response[0]\n                setSelectedPlayer({\n                    id: firstPlayer.playerinfo.id,\n                    playerfirstname: firstPlayer.playerinfo.playerfirstname,\n                    playerlastname: firstPlayer.playerinfo.playerlastname\n                })\n                console.log(\"Selected Player: \" + firstPlayer.displayname)\n                getSeasonsData(event.target.textContent, firstPlayer.playerinfo.id, firstPlayer.playerinfo.playerfirstname, firstPlayer.playerinfo.playerlastname)\n            } else {\n                getSeasonsData(event.target.textContent, selectedPlayerRef.current.id, selectedPlayerRef.current.playerfirstname, selectedPlayerRef.current.playerlastname)\n            }\n        }\n    }\n    async function handlePlayerButtonClick(event) {\n        console.log('handlePlayerButtonClick()')\n        if (event.target.classList.contains(\"player-display\") && selectedPlayer !== event.target.textContent) {\n            //console.log(initPlayersReverseMapRef.current)\n            //console.log(event.target.getAttribute('playerid'))\n            setSelectedPlayer({\n                id: event.target.getAttribute('playerid'),\n                playerfirstname: initPlayersReverseMapRef.current[event.target.getAttribute('playerid')][1],\n                playerlastname: initPlayersReverseMapRef.current[event.target.getAttribute('playerid')][2]\n            }, console.log(\"Set selected player to \" + event.target.textContent));\n            getSeasonsData(selectedYearRef.current, initPlayersRef.current[event.target.textContent][0], initPlayersRef.current[event.target.textContent][1], initPlayersRef.current[event.target.textContent][2])\n        }\n    }\n    async function handleSeasonButtonClick(event) {\n        console.log('handleSeasonButtonClick()')\n        console.log(`selectedSeason: ${selectedSeasonRef.current}`)\n        console.log(`event.target.textContent: ${event.target.textContent}`)\n        console.log(event.target.classList.contains(\"season-display\"))\n        if (event.target.classList.contains(\"season-display\") && selectedSeasonRef.current !== event.target.textContent) {\n            console.log(`Setting season to ${event.target.textContent}`)\n            setSelectedSeason(event.target.textContent)\n        }\n    }\n\n    function hideDD(event) {\n        //console.log(event.target)\n        if (!event.target.matches('.dropdown-button') && !event.target.matches('.dropdown-button-display') && !event.target.matches('.arrow-path') && !event.target.matches('.arrow-svg') && !event.target.matches('.arrow')) {\n            var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n            for (let i = 0; i < dropdowns.length; i++) {\n                var openDropdown = dropdowns[i];\n                if (openDropdown.classList.contains('show')) {\n                    openDropdown.classList.remove('show');\n                    window.removeEventListener('keydown', keyPressedStateRef.current)\n                    setKeyPressedBuilder(\"\")\n                    console.log(\"Removing event listener\")\n                }\n            }\n        }\n    }\n    window.onclick = hideDD;\n\n    function handleDDButtonClick(event, type) {\n        console.log(\"handleDDButtonClick()\")\n        //console.log(event)\n        hideDD(event);\n        var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n        var i;\n        for (i = 0; i < dropdowns.length; i++) {\n            var dropdown = dropdowns[i];\n            if (dropdown.id !== type) {\n                if (dropdown.classList.contains('show')) {\n                    dropdown.classList.remove('show');\n                    window.removeEventListener('keydown', keyPressedStateRef.current)\n                    setKeyPressedBuilder(\"\")\n                    console.log(\"Removing event listener\")\n                }\n            } else {\n                if (dropdown.classList.contains('show')) {\n                    dropdown.classList.remove('show');\n                    window.removeEventListener('keydown', keyPressedStateRef.current)\n                    setKeyPressedBuilder(\"\")\n                    console.log(\"Removing event listener\")\n                } else {\n                    window.addEventListener('keydown', keyPressedStateRef.current)\n                    console.log(\"Adding event listener\")\n                    document.getElementById(type).classList.toggle(\"show\")\n                }\n                //window.addEventListener('keydown', keyPressedStateRef.current)\n                // console.log(\"Adding event listener\")\n            }\n        }\n        //console.log(document.getElementById(type).classList)\n        //console.log(keyPressedStateRef.current)\n\n    };\n\n    async function runSimpleSearch() {\n        console.log(\"runSimpleSearch()\")\n        //props.setIsLoading(true)\n        // console.log(initPlayersReverseMapRef.current)\n        // console.log(selectedPlayerRef.current)\n        // console.log(selectedPlayerRef.current.id)\n        //console.log(initPlayersReverseMapRef.current[selectedPlayerRef.current.id])\n        let url = `https://customnbashotcharts.com:8443/shots_request?year=${selectedYearRef.current}&seasontype=${selectedSeasonRef.current}&simplesearch=true&playerid=${selectedPlayerRef.current.id}&playerlastname=${selectedPlayerRef.current.playerlastname}&playerfirstname=${selectedPlayerRef.current.playerfirstname}`\n        console.log(\"Fetching \" + url)\n        const response = await fetch(url, {\n            method: 'GET'\n        }).then(res => res.json())\n            .then(data => {\n                //console.log(\"URL RESPONSE FROM \" + url + \": \")\n                //console.log(data)\n                props.setTitle(`${selectedPlayerRef.current.playerfirstname} ${selectedPlayerRef.current.playerlastname}, ${selectedYearRef.current} ${selectedSeasonRef.current}`)\n                props.updateLatestSimpleViewType(latestSimpleViewType)\n                props.updateLatestSimpleSearchData(data)\n                props.setAllSearchData({\n                    shots: data,\n                    view: latestSimpleViewType\n                })\n                setShotPercentageData(data)\n                return data\n            }).catch(error => console.log('error', error))\n        return response\n    }\n\n    function handleViewSelectionButtonClick(event) {\n        setLatestSimpleViewType(event.target.textContent)\n    }\n\n    useEffect(() => {\n        getInitData()\n        getInitPlayersData().then(res => {\n            getActivePlayersData(currentYear)\n            getSeasonsData(currentYear, selectedPlayer.id, selectedPlayer.playerfirstname, selectedPlayer.playerlastname)\n        })\n        displayAllYears(currentYear)\n        window.addEventListener('keydown', function (event) {\n            if (event.keyCode == 32) {\n                console.log(\"SPACEBAR\")\n                event.preventDefault();\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        displayActivePlayers()\n    }, [activePlayers])\n    useEffect(() => {\n        displayActiveSeasons()\n    }, [activeSeasons])\n\n    return (\n        <div className=\"SimpleSearchBox\">\n            <div className=\"search-box-body\">\n                <div className=\"search-box-inner-body\">\n                    <h6>Choose your search parameters</h6>\n                    <button class=\"dropdown-button\" id=\"year-button\" onClick={(e) => { handleDDButtonClick(e, \"season-dd\") }}>\n                        <span className=\"dropdown-button-display\">{selectedYear}</span>\n                        <span className=\"arrow\">\n                            <Svg className=\"arrow-svg\" height=\"20\" width=\"20\">\n                                <Path className=\"arrow-path\" d='m0,5 l16 0 l-8 8 l-8 -8' fill=\"gray\" strokeWidth=\"2\"  >\n                                </Path>\n                            </Svg>\n                        </span>\n                        <div className=\"dropdown-content scrollable\" id=\"season-dd\">\n                            {yearDisplay}\n                        </div>\n                    </button>\n                    <br></br>\n                    <button class=\"dropdown-button\" id=\"player-button\" onClick={(e) => handleDDButtonClick(e, \"player-dd\")}>\n                        <span className=\"dropdown-button-display\">{selectedPlayer.playerfirstname} {selectedPlayer.playerlastname}</span>\n                        <span className=\"arrow\">\n                            <Svg className=\"arrow-svg\" height=\"20\" width=\"20\">\n                                <Path className=\"arrow-path\" d='m0,5 l16 0 l-8 8 l-8 -8' fill=\"gray\" strokeWidth=\"2\"  >\n                                </Path>\n                            </Svg>\n                        </span>\n                        <div className=\"dropdown-content scrollable\" id=\"player-dd\">\n                            {activePlayersDisplay}\n                        </div>\n                    </button>\n                    <br></br>\n                    <button class=\"dropdown-button\" id=\"season-type-button\" onClick={(e) => handleDDButtonClick(e, \"season-type-dd\")}>\n                        <span className=\"dropdown-button-display\">{selectedSeason}</span>\n                        <span className=\"arrow\">\n                            <Svg className=\"arrow-svg\" height=\"20\" width=\"20\">\n                                <Path className=\"arrow-path\" d='m0,5 l16 0 l-8 8 l-8 -8' fill=\"gray\" strokeWidth=\"2\"  >\n                                </Path>\n                            </Svg>\n                        </span>\n                        <div className=\"dropdown-content\" id=\"season-type-dd\">\n                            {activeSeasonsDisplay}\n                        </div>\n                    </button>\n                    <br></br>\n                    <button class=\"dropdown-button\" id=\"view-selector\" onClick={e => handleDDButtonClick(e, \"view-selection-dd\")}>\n                        <span className=\"dropdown-button-display\">{latestSimpleViewType}</span>\n                        <span className=\"arrow\">\n                            <Svg className=\"arrow-svg\" height=\"20\" width=\"20\">\n                                <Path className=\"arrow-path\" d='m0,5 l16 0 l-8 8 l-8 -8' fill=\"gray\" strokeWidth=\"2\"  >\n                                </Path>\n                            </Svg>\n                        </span>\n                        <div className=\"dropdown-content\" id=\"view-selection-dd\">\n                            <p className='dropdown-item view-display' onClick={(event) => handleViewSelectionButtonClick(event)}>Traditional</p>\n                            <p className='dropdown-item view-display' onClick={(event) => handleViewSelectionButtonClick(event)}>Grid</p>\n                            <p className='dropdown-item view-display' onClick={(event) => handleViewSelectionButtonClick(event)}>Zone</p>\n                            <p className='dropdown-item view-display' onClick={(event) => handleViewSelectionButtonClick(event)}>Heat</p>\n                        </div>\n                    </button>\n                    <button id=\"run-simple-search-button\" onClick={e => runSimpleSearch()}>\n                        Run It\n                    </button>\n\n                </div>\n            </div>\n            <ShotPercentageView simpleShotData={shotPercentageData} />\n        </div>\n    )\n}\nexport default SimpleSearchBox","export default __webpack_public_path__ + \"static/media/newbackcourt.18ebe08e.png\";","export default __webpack_public_path__ + \"static/media/transparent.37e32258.png\";","import './ShotView.css'\nimport tradCourt from './images/newbackcourt.png'\nimport transparentCourt from './images/transparent.png'\nimport Svg, { Circle, Path, Line, Rect, Defs, LinearGradient, RadialGradient, Stop } from 'react-native-svg';\n\nimport { useEffect, useState, useRef } from \"react\";\n\nconst ShotView = (props) => {\n    const [size, setWindowSize] = useState([window.innerHeight, window.innerWidth])\n    const [allGridTiles, setAllGridTiles] = useState([])\n    const [allHeatTiles, setAllHeatTiles] = useState([])\n    const [gridAverages, setGridAverages] = useState([])\n    const [zoneAverages, setZoneAverages] = useState([])\n    const [whatToDisplay, setWhatToDisplay] = useState([])\n    const [allShots, setAllShots] = useState()\n    const [localViewType, setLocalViewType] = useState({ type: \"Traditional\", isOriginal: false })\n    const [loadingAnimation, setLoadingAnimation] = useState(\"\")\n    const whatToDisplayRef = useRef([])\n    whatToDisplayRef.current = whatToDisplay\n    const allShotsRef = useRef({})\n    allShotsRef.current = allShots\n    const allGridTilesRef = useRef({})\n    allGridTilesRef.current = allGridTiles\n    const gridAveragesRef = useRef({})\n    gridAveragesRef.current = gridAverages\n    const allHeatTilesRef = useRef({})\n    allHeatTilesRef.current = allHeatTiles\n    const zoneAveragesRef = useRef({})\n    zoneAveragesRef.current = zoneAverages\n    const loadingAnimationRef = useRef({})\n    loadingAnimationRef.current = loadingAnimation\n    const localViewTypeRef = useRef({})\n    localViewTypeRef.current = localViewType\n\n    useEffect(() => {\n        console.log(\"useEffect (adding eventlistener)\")\n        window.addEventListener('resize', handleResize)\n    }, [])\n\n    useEffect(() => {\n        console.log(`useEffect for localViewType`)\n        console.log(localViewType)\n        //Initial case\n        if (!allShotsRef.current && whatToDisplay.length === 0) {\n\n        }//Click button after running search\n        else if (allShotsRef.current.shots) {\n            console.log(\"Setting isLoading to true from useEffect(localViewType)\")\n            //setWhatToDisplay([])\n            props.setIsLoading(true)\n        }\n    }, [localViewType])\n\n    useEffect(() => {\n        console.log(\"useEffect for props.allSearchData\")\n        console.log(props.allSearchData)\n        if (Object.keys(props.allSearchData).length !== 0) {\n            setAllShots(props.allSearchData)\n            console.log(props.allSearchData.view)\n            setAllGridTiles([])\n        }\n    }, [props.allSearchData])\n\n    useEffect(() => {\n        console.log(\"useEffect for props.isLoading\")\n        console.log(`isLoading: ${props.isLoading}`)\n        //makeLoadingAnimation()\n        if (props.isLoading) {\n            console.log(\"Setting whatToDisplay to [] from useEffect(isLoading)\")\n            setWhatToDisplay([])\n        } else {\n            console.log(\"Making Loading Animation from useEffect(isLoading)\")\n            let load = makeLoadingAnimation()\n            setLoadingAnimation(load)\n        }\n    }, [props.isLoading])\n\n    useEffect(() => {\n        console.log(\"useEffect for loadingAnimation\")\n        console.log(loadingAnimation)\n        setTimeout(() => {\n            console.log(\"TIMEOUT\")\n            if (allShotsRef.current && whatToDisplay.length === 0) {\n                console.log(document.getElementById(\"loadingAnimation\"))\n                console.log(\"Generating whatToDisplay from useEffect(loadingAnimation)\")\n                let buffer = []\n                buffer.push(determineView(localViewType.type))\n                let zoneLabels = generateZoneLabels(localViewType.type)\n                if (zoneLabels) {\n                    buffer.push(zoneLabels)\n                }\n                if (typeof (buffer[0]) !== 'undefined') {\n                    setWhatToDisplay(buffer)\n                }\n\n            }\n        }, 100)\n    }, [loadingAnimation])\n\n    useEffect(() => {\n        console.log(\"useEffect for whatToDisplay\")\n        console.log(whatToDisplay)\n        if (allShotsRef.current && whatToDisplay.length !== 0) {\n            if (typeof (whatToDisplay) === 'object') {\n                console.log(\"Setting isLoading to false from useEffect(whatToDisplay)\")\n                props.setIsLoading(false)\n            }\n            //Switching view of current shots\n        } else if (allShotsRef.current && whatToDisplay.length === 0) {\n            if (props.isLoading) {\n                console.log(\"Making LoadingAnimation from useEffect(whatToDisplay)\")\n                let load = makeLoadingAnimation()\n                setLoadingAnimation(load)\n            } else {\n                console.log(\"Setting isLoading to true from useEffect(whatToDisplay)\")\n                props.setIsLoading(true)\n            }\n        } else {\n            console.log(localViewType)\n            console.log(localViewTypeRef.current)\n            chooseCourt(localViewType.type)\n        }\n    }, [whatToDisplay])\n\n    useEffect(() => {\n        console.log(\"useEffect for allGridTiles\")\n        console.log(allGridTiles)\n        if (allGridTiles.length !== 0) {\n            // console.log(resizeGrid())\n            setWhatToDisplay(resizeGrid())\n        } else {\n            setAllHeatTiles([])\n        }\n\n    }, [allGridTiles])\n    useEffect(() => {\n        console.log(\"useEffect for allHeatTiles\")\n        console.log(allHeatTiles)\n        if (allHeatTiles.length !== 0) {\n            // console.log(resizeHeat())\n            setWhatToDisplay(resizeHeat())\n        } else {\n            if (allShotsRef.current) {\n                console.log(allShotsRef.current.shots)\n                setLocalViewType({ type: allShotsRef.current.view, isOriginal: true })\n            }\n        }\n    }, [allHeatTiles])\n\n    useEffect(() => {\n        console.log(\"RERENDER\")\n    })\n\n    function hideElement(elementId) {\n        if (document.getElementById(elementId).classList.contains('show')) {\n            document.getElementById(elementId).classList.toggle('show')\n        }\n    }\n    function showElement(elementId) {\n        if (!document.getElementById(elementId).classList.contains('show')) {\n            document.getElementById(elementId).classList.toggle('show')\n        }\n    }\n\n    function chooseCourt(view) {\n        switch (view) {\n            case \"Traditional\":\n                if (typeof (allShotsRef.current) === 'undefined') {\n                    //if (typeof (allShotsRef.current) === 'undefined') {\n                    showElement(\"transparent-court\")\n                    hideElement(\"trad-court\")\n                    hideElement(\"transparent-court-on-top\")\n                    hideElement(\"gray-background\")\n                    console.log(\"Showing transparent-court\")\n                } else {\n                    showElement(\"trad-court\")\n                    hideElement(\"transparent-court\")\n                    hideElement(\"transparent-court-on-top\")\n                    hideElement(\"gray-background\")\n                    console.log(\"Showing trad-court\")\n                }\n                break;\n            case \"Grid\":\n                showElement(\"transparent-court\")\n                showElement(\"gray-background\")\n                hideElement(\"trad-court\")\n                hideElement(\"transparent-court-on-top\")\n                console.log(\"Showing transparent-court & gray-background\")\n                break;\n            case \"Heat\":\n                showElement(\"transparent-court\")\n                hideElement(\"gray-background\")\n                hideElement(\"trad-court\")\n                hideElement(\"transparent-court-on-top\")\n                console.log(\"Showing transparent-court\")\n                break;\n            case \"Zone\":\n                showElement(\"transparent-court-on-top\")\n                hideElement(\"trad-court\")\n                hideElement(\"gray-background\")\n                hideElement(\"transparent-court\")\n                console.log(\"Showing transparent-court-on-top\")\n                break;\n        }\n    }\n\n    function handleResize() {\n        console.log(\"handleResize()\")\n        //console.log('resized to: ', window.innerWidth, 'x', window.innerHeight)\n        if (size[0] !== window.innerHeight || size[1] !== window.innerWidth) {\n            console.log(\"Size Not Okay\")\n            console.log(`${window.innerHeight}!=${size[0]} OR ${window.innerWidth}!=${size[1]}`)\n            setWindowSize([window.innerHeight, window.innerWidth])\n            // console.log(\"props.latestSimpleViewType: \" + latestSimpleViewTypeRef.current)\n            // console.log(\"props.latestSimpleViewType: \" + props.latestSimpleViewType)\n            let buffer = []\n            //console.log(props.latestSimpleViewType)\n            console.log(`Resizing with ${localViewTypeRef.current.type}`)\n            //console.log(props.allSearchData)\n            console.log(allShotsRef.current)\n            buffer.push(determineView(localViewTypeRef.current.type))\n            let zoneLabels = generateZoneLabels(localViewTypeRef.current.type)\n            if (zoneLabels) {\n                buffer.push(zoneLabels)\n            }\n            setWhatToDisplay(buffer)\n        } else {\n            console.log(\"Size Okay\")\n            console.log(`${window.innerHeight}=${size[0]} AND ${window.innerWidth}=${size[1]}`)\n        }\n    }\n\n    function resizeGrid() {\n        //console.log(allGridTilesRef.current.length)\n        if (allGridTiles.length > 0) {\n            const height = document.getElementById('transparent-court').clientHeight\n            const width = document.getElementById('transparent-court').clientWidth\n            //console.log(`height: ${height}, width: ${width}`)\n            const heightAltered = height * 1.1\n            const widthAltered = width * 1.1\n            let squareSize = width / 50;\n            let allNewTiles = []\n            allGridTiles.forEach(eachTile => {\n                let squareSide = eachTile.squareSide * squareSize * 0.9\n                let tileFill = eachTile.tileFill\n                let transX = (eachTile.x + (squareSize - squareSide) / 2) * height / 470\n                let transY = (eachTile.y - 175 + (squareSize - squareSide) / 2) * height / 470\n                if (squareSide !== 0) {\n                    allNewTiles.push(<Rect x={widthAltered / 2 + transX} y={heightAltered / 2 + transY - 5} width={squareSide} height={squareSide} fill={tileFill} opacity=\"0.8\" />)\n                }\n            })\n            let allNewTilesWrapper = <Svg className=\"imageview-child grid-tile\" height={heightAltered} width={widthAltered}>\n                {allNewTiles}\n            </Svg>\n            return allNewTilesWrapper\n        }\n    }\n\n    console.log(\"Updating ShotView\")\n\n    function displayTraditional() {\n        console.log(\"displayTraditional()\")\n        // console.log(allShots)\n        //console.log(allShotsRef.current)\n        let tradArray = []\n        console.log(allShotsRef.current)\n        if (allShotsRef.current) {\n            const height = document.getElementById('trad-court').clientHeight\n            const width = document.getElementById('trad-court').clientWidth\n            const heightAltered = height * 1.1\n            const widthAltered = width * 1.1\n            const rad = 5 * height / 470;\n            const strokeWidth = 2 * height / 470\n            console.log(\"height: \" + height)\n            console.log(\"width: \" + width)\n            //allShots.forEach(each => {\n            allShotsRef.current.shots.simplesearch.forEach(each => {\n                if (each.y <= 410) {\n                    if (each.make === 1) {\n                        tradArray.push(<Circle cx={widthAltered / 2 + each.x * width / 500} cy={heightAltered / 2 + each.y * height / 470 - 185 * height / 470} r={rad} fill=\"none\" stroke=\"limegreen\" strokeWidth={strokeWidth} />)\n                    } else {\n                        tradArray.push(<Line x1={widthAltered / 2 - rad + each.x * width / 500} y1={heightAltered / 2 - rad + each.y * height / 470 - 185 * height / 470} x2={widthAltered / 2 + rad + each.x * width / 500} y2={heightAltered / 2 + rad + each.y * height / 470 - 185 * height / 470} stroke=\"red\" strokeWidth={strokeWidth} />)\n                        tradArray.push(<Line x1={widthAltered / 2 + rad + each.x * width / 500} y1={heightAltered / 2 - rad + each.y * height / 470 - 185 * height / 470} x2={widthAltered / 2 - rad + each.x * width / 500} y2={heightAltered / 2 + rad + each.y * height / 470 - 185 * height / 470} stroke=\"red\" strokeWidth={strokeWidth} />)\n                    }\n                }\n            })\n            let styles = {\n                position: \"absolute\",\n                transform: `translate(${-(widthAltered / 2)}px, ${-heightAltered / 2}px)`,\n            }\n            let tradArrayWrapper = (\n                <div id=\"inner-imageview-div\" style={styles}>\n                    <Svg className=\"imageview-child\" height={heightAltered} width={widthAltered} >\n                        {tradArray}\n                    </Svg>\n                </div>)\n            // console.log(tradArrayWrapper)\n            return tradArrayWrapper\n        }\n        // console.log(\"Returning Traditional\")\n        //console.log(tradArray)\n        return tradArray\n    }\n\n    function determineView(viewType) {\n        console.log(\"Determining viewtype: \" + viewType)\n        chooseCourt(viewType)\n        let response;\n        switch (viewType) {\n            case \"Traditional\":\n                console.log(\"Displaying Traditional\")\n                response = displayTraditional()\n                return response\n            case \"Grid\":\n                if (allGridTiles.length === 0) {\n                    console.log(\"Displaying Grid\")\n                    displayGrid()\n                }\n                response = resizeGrid()\n                //console.log(response)\n                return response\n            case \"Zone\":\n                console.log(\"Displaying Zone\")\n                response = displayZone()\n                return response\n            case \"Heat\":\n                if (allHeatTiles.length === 0) {\n                    console.log(\"Displaying Heat\")\n                    displayHeat()\n                }\n                response = resizeHeat()\n                //console.log(response)\n                return response\n        }\n        //console.log(\"Returning: \")\n        //console.log(response)\n        return <div></div>\n    }\n\n    function displayGrid() {\n        //console.log(\"gridAverages before: \")\n        //console.log(gridAverages)\n        //console.log(typeof (gridAverages))\n        //console.log(allShotsRef.current)\n        if (allShotsRef.current) {\n            let allTiles = {}\n            let squareSizeOrig = 10\n            for (let j = -55; j < 400; j = j + squareSizeOrig) {\n                for (let i = -250; i < 250; i = i + squareSizeOrig) {\n                    let tempTile = {}\n                    tempTile.x = i\n                    tempTile.y = j\n                    tempTile.shotinfo = [0.0, 0.0, 0.0];\n                    allTiles[`tile_${i}_${j}`] = tempTile\n                }\n            }\n            let factor = 0.007;\n            //console.log(allTiles)\n            let shots = allShotsRef.current.shots.simplesearch.filter(param => param.y <= 400)\n            let shotCounter = allShotsRef.current.shots.simplesearch.length\n            Object.keys(allTiles).forEach(eachTile => {\n                let upperBoundX = allTiles[eachTile].x + 5 + squareSizeOrig * 1.5\n                let lowerBoundX = allTiles[eachTile].x + 5 - squareSizeOrig * 1.5\n                let upperBoundY = allTiles[eachTile].y + 5 + squareSizeOrig * 1.5\n                let lowerBoundY = allTiles[eachTile].y + 5 - squareSizeOrig * 1.5\n                shots.forEach(eachShot => {\n                    if (eachShot.x < upperBoundX && eachShot.x >= lowerBoundX && eachShot.y < upperBoundY && eachShot.y >= lowerBoundY) {\n                        allTiles[eachTile].shotinfo[1] = allTiles[eachTile].shotinfo[1] + 1\n                        if (eachShot.make === 1) {\n                            allTiles[eachTile].shotinfo[0] = allTiles[eachTile].shotinfo[0] + 1\n                        }\n                    }\n                })\n            })\n            Object.values(allTiles).forEach(each => {\n                if (each.shotinfo[1] !== 0) {\n                    each.shotinfo[2] = each.shotinfo[0] / each.shotinfo[1]\n                }\n            })\n            let predictedValue = 0, aSum = 0, bSum = 0, p = 2, value = 0, offset = 10, maxDistanceBetweenNodes = 20, calcDistance = 0;\n            let tileValues = {}\n            Object.keys(allTiles).forEach(eachTile => {\n                if (allTiles[eachTile].x % offset === 0 && (allTiles[eachTile].y - 5) % offset === 0) {\n                    aSum = 0;\n                    bSum = 0;\n                    Object.keys(allTiles).forEach(eachTile2 => {\n                        calcDistance = getDistance(allTiles[eachTile], allTiles[eachTile2])\n                        if (eachTile !== eachTile2 && calcDistance < maxDistanceBetweenNodes) {\n                            value = allTiles[eachTile2].shotinfo[2]\n                            aSum = aSum + (value / Math.pow(calcDistance, p));\n                            bSum = bSum + (1 / Math.pow(getDistance(allTiles[eachTile], allTiles[eachTile2]), p));\n                        }\n                    })\n                    predictedValue = aSum / bSum;\n                    tileValues[eachTile] = predictedValue\n                }\n            })\n            // console.log(\"tileValues\")\n            //console.log(tileValues)\n            let min = 1;\n            let minFactor = 0.00045;\n            // console.log(\"shotCounter: \" + shotCounter)\n            if (shotCounter * minFactor > 1) {\n                min = shotCounter * minFactor;\n            } else {\n                factor = 4.1008 * Math.pow(shotCounter, -0.798);\n            }\n            //console.log(\"factor: \" + factor)\n            let maxShotsPerMaxSquare = 0;\n            maxShotsPerMaxSquare = factor * shotCounter;\n            if (maxShotsPerMaxSquare == 0) {\n                maxShotsPerMaxSquare = 1;\n            }\n            //let squareSize = width / 50;\n            //let allSquares = []\n            let temp, avg;\n            let squareElements = []\n            //console.log(\"maxShotsPerMaxSquare: \" + maxShotsPerMaxSquare)\n            Object.keys(allTiles).forEach(eachTile => {\n                let squareSide = 0\n                //console.log(\"allTiles[eachTile].shotinfo[1]: \" + allTiles[eachTile].shotinfo[1])\n                let eachTileShotCount = allTiles[eachTile].shotinfo[1]\n                //console.log(\"eachTileShotCount: \" + eachTileShotCount)\n                if (eachTileShotCount < maxShotsPerMaxSquare && eachTileShotCount > min) {\n                    squareSide = eachTileShotCount / maxShotsPerMaxSquare\n                    //squareSide = eachTileShotCount / maxShotsPerMaxSquare * squareSize * 0.9\n                } else if (eachTileShotCount > maxShotsPerMaxSquare) {\n                    //squareSide = squareSize * 0.9\n                    squareSide = 1\n                }\n                //console.log(\"squareSide: \" + squareSide)\n                temp = \"(\" + allTiles[eachTile].x + \",\" + allTiles[eachTile].y + \")\";\n                avg = gridAveragesRef.current[temp]\n                //console.log(\"avg: \" + avg)\n                let tileFill = \"\"\n                //console.log(\"tileValues[eachTile]: \" + tileValues[eachTile])\n                if (tileValues[eachTile] > avg + 0.07) {\n                    tileFill = \"#fc2121\"\n                    //square.setFill(Color.web(\"#fc2121\"));\n                } else if (tileValues[eachTile] > avg + 0.05 && tileValues[eachTile] <= avg + 0.07) {\n                    tileFill = \"#ff6363\"\n                    //square.setFill(Color.web(\"#ff6363\"));\n                } else if (tileValues[eachTile] > avg + 0.015 && tileValues[eachTile] <= avg + 0.05) {\n                    tileFill = \"#ff9c9c\"\n                    //square.setFill(Color.web(\"#ff9c9c\"));\n                } else if (tileValues[eachTile] > avg - 0.015 && tileValues[eachTile] <= avg + 0.015) {\n                    tileFill = \"white\"\n                    //square.setFill(Color.WHITE);\n                } else if (tileValues[eachTile] > avg - 0.05 && tileValues[eachTile] <= avg - 0.015) {\n                    tileFill = \"#aed9ff\"\n                    //square.setFill(Color.web(\"#aed9ff\"));\n                } else if (tileValues[eachTile] > avg - 0.07 && tileValues[eachTile] <= avg - 0.05) {\n                    tileFill = \"#8bc9ff\"\n                    //square.setFill(Color.web(\"#8bc9ff\"));\n                } else {\n                    tileFill = \"#7babff\"\n                    //square.setFill(Color.web(\"#7babff\"));\n                }\n                squareElements.push({\n                    x: allTiles[eachTile].x,\n                    y: allTiles[eachTile].y,\n                    tileFill: tileFill,\n                    squareSide: squareSide\n                })\n            })\n            setAllGridTiles(squareElements)\n            //console.log(\"allGridTiles\")\n            //console.log(allGridTiles)\n            //console.log(\"Returning Grid\")\n            //console.log(squareElements)\n        }\n    }\n\n    function getDistance(tile1, tile2) {\n        return Math.sqrt(Math.pow(tile1.x - tile2.x, 2) + Math.pow(tile1.y - tile2.y, 2));\n    }\n\n    async function getGridAverages() {\n        console.log(\"getGridAverages()\")\n        let response = await getSearchData(\"https://customnbashotcharts.com:8443/shots_request?gridaverages=true\")\n            .then(res => {\n                //console.log(\"getGridAverages\")\n                //console.log(res.gridaverages)\n                let averageJson = {}\n                res.gridaverages.forEach(each => averageJson[each.uniqueid] = each.average)\n                //console.log(averageJson)\n                return averageJson\n            })\n        return response\n    }\n\n    async function getSearchData(url) {\n        console.log(\"Fetching \" + url)\n        const response = await fetch(url, {\n            method: 'GET'\n        }).then(res => res.json())\n            .then(data => {\n                //console.log(\"URL RESPONSE FROM \" + url + \": \")\n                //console.log(data)\n                return data\n            }).catch(error => console.log('error', error))\n        return response\n    }\n    function generateZoneLabels(view) {\n        if (allShotsRef.current && view === \"Zone\") {\n            let allZones = mapShotsToZones()\n            let zoneLabels = []\n            const height = document.getElementById('transparent-court-on-top').clientHeight\n            const width = document.getElementById('transparent-court-on-top').clientWidth\n            const heightAltered = height * 1.1\n            const widthAltered = width * 1.1\n            let fontSizeFrac = scaleNumber(18)\n            let fontSizePerc = scaleNumber(16)\n            let fontWidth = scaleNumber(10 * fontSizeFrac)\n            let labelFracStyle = {\n                fontSize: fontSizeFrac,\n                margin: \"0px\",\n            }\n            let labelPercStyle = {\n                fontSize: fontSizePerc,\n                margin: \"0px\"\n            }\n            for (let i = 1; i < allZones.length; i++) {\n                let divStyles = { position: \"absolute\", width: fontWidth, backgroundColor: \"transparent\", zIndex: 1 }\n                switch (i) {\n                    case 1:\n                        divStyles.transform = `translate(0px,${-scaleNumber(215)}px)`\n                        break;\n                    case 2:\n                        divStyles.transform = `translate(0px,${-scaleNumber(120)}px)`\n                        break;\n                    case 3:\n                        divStyles.transform = `translate(${-scaleNumber(115)}px,${-scaleNumber(155)}px)`\n                        break;\n                    case 4:\n                        divStyles.transform = `translate(0px,${-scaleNumber(57)}px)`\n                        break;\n                    case 5:\n                        divStyles.transform = `translate(${scaleNumber(115)}px,${scaleNumber(-155)}px)`\n                        break;\n                    case 6:\n                        divStyles.transform = `translate(${-scaleNumber(185)}px,${-scaleNumber(115)}px)`\n                        break;\n                    case 7:\n                        divStyles.transform = `translate(${-scaleNumber(120)}px,${-scaleNumber(20)}px)`\n                        break;\n                    case 8:\n                        divStyles.transform = `translate(0px,${scaleNumber(20)}px)`\n                        break;\n                    case 9:\n                        divStyles.transform = `translate(${scaleNumber(120)}px,${-scaleNumber(20)}px)`\n                        break;\n                    case 10:\n                        divStyles.transform = `translate(${scaleNumber(185)}px,${-scaleNumber(115)}px)`\n                        break;\n                    case 11:\n                        divStyles.transform = `translate(${scaleNumber(-210)}px,${-scaleNumber(200)}px)`\n                        break;\n                    case 12:\n                        divStyles.transform = `translate(${-scaleNumber(165)}px,${scaleNumber(70)}px)`\n                        break;\n                    case 13:\n                        divStyles.transform = `translate(0px,${scaleNumber(100)}px)`\n                        break;\n                    case 14:\n                        divStyles.transform = `translate(${scaleNumber(165)}px,${scaleNumber(70)}px)`\n                        break;\n                    case 15:\n                        divStyles.transform = `translate(${scaleNumber(210)}px,${-scaleNumber(200)}px)`\n                        break;\n                }\n                let percent = \"0%\"\n                if (allZones[i][1] !== 0) {\n                    percent = (allZones[i][0] * 100 / allZones[i][1]) % 1 === 0 ? `${Number(allZones[i][0] / allZones[i][1] * 100).toFixed(0)}%` : `${Number(allZones[i][0] / allZones[i][1] * 100).toFixed(1)}%`\n                }\n                zoneLabels.push(<div height={heightAltered} width={widthAltered} style={divStyles}>\n                    <p className=\"labelFrac\" style={labelFracStyle}>{`${allZones[i][0]}/${allZones[i][1]}`}</p>\n                    <p className=\"labelPerc\" style={labelPercStyle}>{percent}</p>\n                </div>)\n            }\n            return zoneLabels\n        }\n        return\n    }\n\n    function mapShotsToZones() {\n        if (allShotsRef.current) {\n            let allZones = []\n            for (let i = 0; i < 16; i++) {\n                let array = [0, 0, 0]\n                allZones.push(array)\n            }\n            function addShot(i, make) {\n                allZones[i][1] = allZones[i][1] + 1\n                if (make) { allZones[i][0] = allZones[i][0] + 1 }\n            }\n            allShotsRef.current.shots.simplesearch.forEach(eachShot => {\n                switch (eachShot.shotzonebasic) {\n                    case \"Backcourt\":\n                        break;\n                    case \"Restricted Area\":\n                        addShot(1, eachShot.make);\n                        break;\n                    case \"In The Paint (Non-RA)\":\n                        switch (eachShot.shotzonearea) {\n                            case \"Left Side(L)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"8-16 ft.\":\n                                        addShot(3, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Center(C)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"Less Than 8 ft.\":\n                                        addShot(2, eachShot.make);\n                                        break;\n                                    case \"8-16 ft.\":\n                                        addShot(4, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Right Side(R)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"8-16 ft.\":\n                                        addShot(5, eachShot.make);\n                                        break;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"Mid-Range\":\n                        switch (eachShot.shotzonearea) {\n                            case \"Left Side(L)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"8-16 ft.\":\n                                        addShot(3, eachShot.make);\n                                        break;\n                                    case \"16-24 ft.\":\n                                        addShot(6, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Left Side Center(LC)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"16-24 ft.\":\n                                        addShot(7, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Center(C)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"8-16 ft.\":\n                                        addShot(4, eachShot.make);\n                                        break;\n                                    case \"16-24 ft.\":\n                                        addShot(8, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Right Side Center(RC)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"16-24 ft.\":\n                                        addShot(9, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Right Side(R)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"8-16 ft.\":\n                                        addShot(5, eachShot.make);\n                                        break;\n                                    case \"16-24 ft.\":\n                                        addShot(10, eachShot.make);\n                                        break;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"Left Corner 3\":\n                        addShot(11, eachShot.make);\n                        break;\n                    case \"Right Corner 3\":\n                        addShot(15, eachShot.make);\n                        break;\n                    case \"Above the Break 3\":\n                        switch (eachShot.shotzonearea) {\n                            case \"Left Side Center(LC)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"24+ ft.\":\n                                        addShot(12, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Center(C)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"24+ ft.\":\n                                        addShot(13, eachShot.make);\n                                        break;\n                                }\n                                break;\n                            case \"Right Side Center(RC)\":\n                                switch (eachShot.shotzonerange) {\n                                    case \"24+ ft.\":\n                                        addShot(14, eachShot.make);\n                                        break;\n                                    default:\n                                }\n                                break;\n                        }\n                        break;\n                }\n            })\n            allZones.forEach(eachZone => {\n                if (eachZone[1] !== 0) {\n                    eachZone[2] = eachZone[0] * 1.0 / eachZone[1]\n                }\n            })\n            return allZones;\n        }\n        return <div></div>\n    }\n\n    function displayZone() {\n        if (allShotsRef.current) {\n            let allZones = mapShotsToZones()\n            //console.log(allZones)\n            let coloredZones = []\n            let fill = \"\"\n            //console.log(zoneAverages)\n            const height = document.getElementById('transparent-court-on-top').clientHeight\n            const width = document.getElementById('transparent-court-on-top').clientWidth\n            const heightAltered = height * 1.1\n            const widthAltered = width * 1.1\n            // console.log(`height: ${height}`)\n            //console.log(`width: ${width}`)\n            for (let i = 1; i < allZones.length; i++) {\n                if (allZones[i][1] === 0) {\n                    fill = \"rgba(178,178,178, 1)\"\n                } else {\n                    let diff = allZones[i][2] - zoneAveragesRef.current[i]\n                    if (diff > 0.06) {\n                        fill = \"rgba(252,33,33, 1)\"\n                    } else if (diff < 0.06 && diff >= 0.04) {\n                        fill = \"rgba(255,99,99, 1)\"\n                    } else if (diff < 0.04 && diff >= 0.02) {\n                        fill = \"rgba(255,156,156, 1)\"\n                    } else if (diff < 0.02 && diff >= -0.02) {\n                        fill = \"rgba(178,178,178, 1)\"\n                    } else if (diff < -0.02 && diff >= -0.04) {\n                        fill = \"rgba(145,198,244, 1)\"\n                    } else if (diff < -0.04 && diff >= -0.06) {\n                        fill = \"rgba(86,176,255, 1)\"\n                    } else if (diff < -0.06) {\n                        fill = \"rgba(35,115,255, 1)\"\n                    }\n                }\n                let d = \"\"\n                let zoneId = `zone${i}`\n                let centerX = widthAltered / 2\n                let centerY = heightAltered / 2\n                let strokeWidth = scaleNumber(4)\n                let stroke = \"rgba(0,0,0,1)\"\n                switch (i) {\n                    case 1:\n                        d = `m ${centerX - scaleNumber(39)} ${centerY - scaleNumber(233)}  l ${scaleNumber(78)} 0 l0 ${scaleNumber(56)} a${scaleNumber(4)},${scaleNumber(3.7)} 0 0,1 ${scaleNumber(-77)},0 l0 ${scaleNumber(-56)}`\n                        break;\n                    case 2:\n                        d = `m ${centerX - scaleNumber(80)} ${centerY - scaleNumber(233)} l ${scaleNumber(41)} 0 l0 ${scaleNumber(56)} a${scaleNumber(4)},${scaleNumber(3.7)} 0 0,0 ${scaleNumber(77)},0  l0 ${scaleNumber(-56)} l${scaleNumber(40)} 0 l0 ${scaleNumber(56)}a${scaleNumber(5)},${scaleNumber(5.25)} 0 0,1 ${scaleNumber(-157)},0 l0 ${scaleNumber(-56)}`\n                        break;\n                    case 3:\n                        let r3 = 85, r3_2 = 170\n                        d = `m ${centerX - scaleNumber(160)} ${centerY - scaleNumber(233)} l ${scaleNumber(81)} 0 l0 ${scaleNumber(56)} a${scaleNumber(r3)},${scaleNumber(r3)} 0 0,0 ${scaleNumber(38.7)},${scaleNumber(71.2)} l${scaleNumber(-41)} ${scaleNumber(73)} a${scaleNumber(r3_2)},${scaleNumber(r3_2)} 0 0,1 ${scaleNumber(-78.6)} ${scaleNumber(-145)}  l0 ${scaleNumber(-56)}`\n                        break;\n                    case 4:\n                        let r4 = 85, r4_2 = 160\n                        d = `m ${centerX - scaleNumber(40)} ${centerY - scaleNumber(105)}  a${scaleNumber(r4)},${scaleNumber(r4)} 0 0,0 ${scaleNumber(80)} 0 l${scaleNumber(41)} ${scaleNumber(71.8)} a${scaleNumber(r4_2)},${scaleNumber(r4_2)} 0 0,1 ${scaleNumber(-162)} 0 l${scaleNumber(41)} ${scaleNumber(-73)}`\n                        break;\n                    case 5:\n                        let r5 = 85, r5_2 = 170\n                        d = `m ${centerX + scaleNumber(78)} ${centerY - scaleNumber(233)} l ${scaleNumber(80)} 0 l0 ${scaleNumber(56)} a${scaleNumber(r5_2)},${scaleNumber(r5_2)} 0 0,1 ${scaleNumber(-77.4)} ${scaleNumber(143.5)} l${scaleNumber(-41)} ${scaleNumber(-72.6)} a${scaleNumber(r5)},${scaleNumber(r5)} 0 0,0 ${scaleNumber(38.7)},${scaleNumber(-71.2)}  l0 ${scaleNumber(-56)}`\n                        break;\n                    case 6:\n                        let r6 = 200\n                        d = `m ${centerX - scaleNumber(219)} ${centerY - scaleNumber(233)}  l ${scaleNumber(59)} 0 l0 ${scaleNumber(56)} a${scaleNumber(r6)},${scaleNumber(r6)} 0 0,0 ${scaleNumber(24)},${scaleNumber(88.5)} l${scaleNumber(-60)} ${scaleNumber(40)}  a${scaleNumber(r6)},${scaleNumber(r6)} 0 0,1 ${scaleNumber(-22.75)},${scaleNumber(-48)} l0 ${scaleNumber(-137)}`\n                        break;\n                    case 7:\n                        let r7 = 150, r7_2 = 230\n                        d = `m ${centerX - scaleNumber(136)} ${centerY - scaleNumber(89)}  a${scaleNumber(r7)},${scaleNumber(r7)} 0 0,0 ${scaleNumber(80)} ${scaleNumber(68)} l${scaleNumber(-22)} ${scaleNumber(65)} a${scaleNumber(r7_2)},${scaleNumber(r7_2)} 0 0,1 ${scaleNumber(-118)} ${scaleNumber(-92.5)} l${scaleNumber(60)} ${scaleNumber(-40)}`\n                        break;\n                    case 8:\n                        let r8 = 150, r8_2 = 230\n                        d = `m ${centerX + scaleNumber(-57)} ${centerY - scaleNumber(21)}  a${scaleNumber(r8)},${scaleNumber(r8)} 0 0,0 ${scaleNumber(113)} 0 l${scaleNumber(21.5)} ${scaleNumber(65)} a${scaleNumber(r8_2)},${scaleNumber(r8_2)} 0 0,1 ${scaleNumber(-155.5)} 0 l${scaleNumber(22)} ${scaleNumber(-65)} `\n                        break;\n                    case 9:\n                        let r9 = 150, r9_2 = 230\n                        d = `m ${centerX + scaleNumber(135)} ${centerY - scaleNumber(90)} l${scaleNumber(61)} ${scaleNumber(42)} a${scaleNumber(r9_2)},${scaleNumber(r9_2)} 0 0,1 ${scaleNumber(-118)} ${scaleNumber(92.5)} l${scaleNumber(-22)} ${scaleNumber(-66)} a${scaleNumber(r9)},${scaleNumber(r9)} 0 0,0 ${scaleNumber(80)} ${scaleNumber(-70)}  `\n                        break;\n                    case 10:\n                        let r10 = 200\n                        d = `m ${centerX + scaleNumber(158)} ${centerY - scaleNumber(233)}  l ${scaleNumber(60.5)} 0 l0 ${scaleNumber(137)} a${scaleNumber(r10)},${scaleNumber(r10)} 0 0,1 ${scaleNumber(-22.75)},${scaleNumber(48)}  l${scaleNumber(-60)} ${scaleNumber(-41.5)}  a${scaleNumber(r10)},${scaleNumber(r10)} 0 0,0 ${scaleNumber(23)},${scaleNumber(-88.5)} l0 ${scaleNumber(-56)}`\n                        break;\n                    case 11:\n                        d = `m ${centerX - scaleNumber(248)} ${centerY - scaleNumber(233)}  l${scaleNumber(30)} 0 l0 ${scaleNumber(137)}l${scaleNumber(-30)} 0 l0 ${scaleNumber(-137)}`\n                        break;\n                    case 12:\n                        let r12 = 220\n                        d = `m ${centerX - scaleNumber(248)} ${centerY - scaleNumber(96)} l${scaleNumber(30)} 0 a${scaleNumber(r12)},${scaleNumber(r12)} 0 0,0 ${scaleNumber(129)},${scaleNumber(136)} l${scaleNumber(-77)} ${scaleNumber(193)} l${scaleNumber(-82)} 0 l0 ${scaleNumber(-330)}`\n                        break;\n                    case 13:\n                        let r13 = 245\n                        d = `m ${centerX - scaleNumber(90)} ${centerY + scaleNumber(40)}  a${scaleNumber(r13)},${scaleNumber(r13)} 0 0,0 ${scaleNumber(179)},0 l${scaleNumber(77)} ${scaleNumber(193.5)} l${scaleNumber(-333)} 0 l${scaleNumber(77)} ${scaleNumber(-193)}`\n                        break;\n                    case 14:\n                        let r14 = 220\n                        d = `m ${centerX + scaleNumber(219)} ${centerY - scaleNumber(96)} l${scaleNumber(30)} 0 l0 ${scaleNumber(330)} l${scaleNumber(-83)} 0 l${scaleNumber(-77)} ${scaleNumber(-193.5)} a${scaleNumber(r14)},${scaleNumber(r14)} 0 0,0 ${scaleNumber(130)},${scaleNumber(-137)}  `\n                        break;\n                    case 15:\n                        d = `m ${centerX + scaleNumber(219)} ${centerY - scaleNumber(233)}  l${scaleNumber(30)} 0 l0 ${scaleNumber(137)}l${scaleNumber(-30)} 0 l0 ${scaleNumber(-137)}`\n                        break;\n                }\n                coloredZones.push(<Path id={zoneId} d={d} fill={fill} stroke={stroke} strokeWidth={strokeWidth} />)\n            }\n            //let dRad = `m ${centerX} ${centerY - scaleNumber(180)}  l200 500`\n            // let r345 = 5\n            //let d345 = `m ${centerX - scaleNumber(160)} ${centerY - scaleNumber(233)} l ${scaleNumber(318)} 0 l0 ${scaleNumber(56)} a${scaleNumber(r345)},${scaleNumber(5.25)} 0 0,1 ${scaleNumber(-318)},0 l0 ${scaleNumber(-56)}`\n            //<Path id=\"zone345\" d={d345} fill={fill} stroke={stroke} strokeWidth={strokeWidth} />\n            let styles = {\n                position: \"absolute\",\n                transform: `translate(${-(widthAltered / 2)}px, ${-heightAltered / 2}px)`,\n                zIndex: 0\n            }\n            return (<div id=\"inner-imageview-div\" style={styles}>\n                <Svg className=\"imageview-child\" id=\"zones-underneath\" height={heightAltered} width={widthAltered} >\n                    {coloredZones}\n                </Svg>\n            </div>)\n        }\n    }\n\n    async function getZoneAverages() {\n        console.log(\"getZoneAverages()\")\n        let response = await getSearchData(\"https://customnbashotcharts.com:8443/shots_request?zoneaverages=true\")\n            .then(res => {\n                //console.log(\"getGridAverages\")\n                //console.log(res.gridaverages)\n                let averageJson = {}\n                res.zoneaverages.forEach(each => averageJson[each.uniqueid] = each.average)\n                //console.log(averageJson)\n                return averageJson\n            })\n        return response\n    }\n    function displayHeat() {\n        console.log(\"displayHeat()\")\n        console.log(allShotsRef.current)\n        if (allShotsRef.current) {\n            let allTiles = {}\n            for (let x = -250; x < 250; x++) {\n                for (let y = -55; y < 400; y++) {\n                    allTiles[`tile_${x}_${y}`] = {\n                        x: x,\n                        y: y,\n                        shotinfo: [0.0, 0.0, 0.0]\n                    }\n                }\n            }\n            //console.log(\"FILTER\")\n            let shots = allShotsRef.current.shots.simplesearch.filter(param => param.y <= 400)\n            let shotCounter = allShotsRef.current.shots.simplesearch.length\n            ///console.log(\"SHOTS FOREACH\")\n            //let shots = allShotsRef.current.filter(param => param.y <= 400)\n            //let shotCounter = allShotsRef.current.length\n            shots.forEach(eachShot => {\n                // console.log(`${eachShot.x},${eachShot.y}`)\n                //console.log(allTiles[`tile_${eachShot.x}_${eachShot.y}`])\n                //console.log(allTiles[`tile_${eachShot.x}_${eachShot.y}`].shotinfo)\n                // setTimeout(() => {\n                allTiles[`tile_${eachShot.x}_${eachShot.y}`].shotinfo[1] = allTiles[`tile_${eachShot.x}_${eachShot.y}`].shotinfo[1] + 1\n                if (eachShot.make === 1) {\n                    allTiles[`tile_${eachShot.x}_${eachShot.y}`].shotinfo[0] = allTiles[`tile_${eachShot.x}_${eachShot.y}`].shotinfo[0] + 1\n                }\n                // }, 100)\n            })\n\n            //console.log(\"ALLTILES FOREACH\")\n            Object.values(allTiles).forEach(each => {\n                if (each.shotinfo[1] !== 0) {\n                    each.shotinfo[2] = each.shotinfo[0] / each.shotinfo[1]\n                    //console.log(each)\n                }\n            })\n            let aSum = 0, bSum = 0, p = 2, value = 0, offset = 15, maxDistanceBetweenNodes = 30, calcDistance = 0;\n            let tileValues = {}\n            //console.log(\"Running IDW\")\n            //console.log(\"ALLTILES FOREACH 2\")\n            let allKeys = Object.keys(allTiles)\n            //console.log(\"GATHERED ALLKEYS\")\n            //console.log(allKeys.length)\n            let counter = 0;\n            while (counter < allKeys.length) {\n                if (allTiles[allKeys[counter]].x % offset === 0 && (allTiles[allKeys[counter]].y) % offset === 0) {\n                    //console.log(`OUTER LOOP: ${allTiles[allKeys[counter]].x}, ${allTiles[allKeys[counter]].y}`)\n                    aSum = 0;\n                    bSum = 0;\n                    let lowerBoundX = allTiles[allKeys[counter]].x - maxDistanceBetweenNodes >= -250 ? allTiles[allKeys[counter]].x - maxDistanceBetweenNodes : -250\n                    let upperBoundX = allTiles[allKeys[counter]].x + maxDistanceBetweenNodes < 250 ? allTiles[allKeys[counter]].x + maxDistanceBetweenNodes : 249\n                    let lowerBoundY = allTiles[allKeys[counter]].y - maxDistanceBetweenNodes >= -55 ? allTiles[allKeys[counter]].y - maxDistanceBetweenNodes : -55\n                    let upperBoundY = allTiles[allKeys[counter]].y + maxDistanceBetweenNodes < 400 ? allTiles[allKeys[counter]].y + maxDistanceBetweenNodes : 399\n                    for (let i = lowerBoundX; i <= upperBoundX; i++) {\n                        for (let j = lowerBoundY; j <= upperBoundY; j++) {\n                            //let tempTile = allTiles[`tile_${i}_${j}`]\n                            //console.log(allTiles[`tile_${i}_${j}`])\n                            let calcDistance = getDistance(allTiles[allKeys[counter]], allTiles[`tile_${i}_${j}`])\n                            if (calcDistance < maxDistanceBetweenNodes && calcDistance > 0) {\n                                //console.log(`INNER LOOP: ${allTiles[`tile_${i}_${j}`].x}, ${allTiles[`tile_${i}_${j}`].y}`)\n                                aSum = aSum + (allTiles[`tile_${i}_${j}`].shotinfo[1] * calcDistance / Math.pow(calcDistance, p));\n                                bSum = bSum + (1 / Math.pow(calcDistance, p));\n                            }\n                        }\n                    }\n                    tileValues[allKeys[counter]] = aSum / bSum;\n                }\n\n                // }, 100);\n                counter++;\n            }\n            /*\n            allKeys.forEach(eachTile => {\n                setTimeout(() => {\n                    if (allTiles[eachTile].x % offset === 0 && (allTiles[eachTile].y) % offset === 0) {\n                        console.log(`OUTER LOOP: ${allTiles[eachTile].x}, ${allTiles[eachTile].y}`)\n                        aSum = 0;\n                        bSum = 0;\n                        let lowerBoundX = allTiles[eachTile].x - maxDistanceBetweenNodes >= -250 ? allTiles[eachTile].x - maxDistanceBetweenNodes : -250\n                        let upperBoundX = allTiles[eachTile].x + maxDistanceBetweenNodes < 250 ? allTiles[eachTile].x + maxDistanceBetweenNodes : 249\n                        let lowerBoundY = allTiles[eachTile].y - maxDistanceBetweenNodes >= -55 ? allTiles[eachTile].y - maxDistanceBetweenNodes : -55\n                        let upperBoundY = allTiles[eachTile].y + maxDistanceBetweenNodes < 400 ? allTiles[eachTile].y + maxDistanceBetweenNodes : 399\n                        for (let i = lowerBoundX; i <= upperBoundX; i++) {\n                            for (let j = lowerBoundY; j <= upperBoundY; j++) {\n                                //let tempTile = allTiles[`tile_${i}_${j}`]\n                                //console.log(allTiles[`tile_${i}_${j}`])\n                                let calcDistance = getDistance(allTiles[eachTile], allTiles[`tile_${i}_${j}`])\n                                if (calcDistance < maxDistanceBetweenNodes && calcDistance > 0) {\n                                    //console.log(`INNER LOOP: ${allTiles[`tile_${i}_${j}`].x}, ${allTiles[`tile_${i}_${j}`].y}`)\n                                    aSum = aSum + (allTiles[`tile_${i}_${j}`].shotinfo[1] * calcDistance / Math.pow(calcDistance, p));\n                                    bSum = bSum + (1 / Math.pow(calcDistance, p));\n                                }\n                            }\n                        }\n                        tileValues[eachTile] = aSum / bSum;\n                    }\n                }, 10);\n\n            })\n            */\n            //console.log(\"tileValues\")\n            //console.log(tileValues)\n\n            //console.log(\"TILEVALUES FOREACH 1\")\n            let maxValue = 0.0\n            Object.values(tileValues).forEach(eachValue => {\n                if (eachValue > maxValue) {\n                    maxValue = eachValue\n                }\n            })\n            let heatTileInfo = []\n            // console.log(\"maxValue: \" + maxValue)\n            if (maxValue != 0) {\n                maxValue = maxValue * (500 * 1.0 / shotCounter);\n                let maxCutoff = 0.00004 * shotCounter / maxValue + 0.3065;\n                let diff = maxCutoff / 7;\n                //console.log(\"TILEVALUES FOREACH 2\")\n                Object.keys(tileValues).forEach(eachTileKey => {\n                    let color = \"\", circleArray = \"\"\n                    let value = tileValues[eachTileKey]\n                    if (value > maxValue * (maxCutoff - (diff * 6))) {\n                        if (value > maxValue * (maxCutoff - (diff * 6)) && value <= maxValue * (maxCutoff - (diff * 5))) {\n                            color = \"#bc53f8\"\n                            circleArray = \"1\"\n                        } else if (value > maxValue * (maxCutoff - (diff * 5)) && value <= maxValue * (maxCutoff - (diff * 4))) {\n                            color = \"#dd76ff\"\n                            circleArray = \"2\"\n                        } else if (value > maxValue * (maxCutoff - (diff * 4)) && value <= maxValue * (maxCutoff - (diff * 3))) {\n                            color = \"#e696fa\"\n                            circleArray = \"3\"\n                        } else if (value > maxValue * (maxCutoff - (diff * 3)) && value <= maxValue * (maxCutoff - (diff * 2))) {\n                            color = \"#c4b8ff\"\n                            circleArray = \"4\"\n                        } else if (value > maxValue * (maxCutoff - (diff * 2)) && value <= maxValue * (maxCutoff - (diff * 1))) {\n                            color = \"#6bb2f8\"\n                            circleArray = \"5\"\n                        } else if (value > maxValue * (maxCutoff - (diff * 1)) && value <= maxValue * maxCutoff) {\n                            color = \"#62c8ff\"\n                            circleArray = \"6\"\n                        } else {\n                            color = \"#90ebff\"\n                            circleArray = \"7\"\n                        }\n                        heatTileInfo.push({\n                            x: allTiles[eachTileKey].x,\n                            y: allTiles[eachTileKey].y,\n                            color: color,\n                            circleArray: circleArray\n                        })\n                    }\n                })\n                if (heatTileInfo.length === 0) {\n                    setAllHeatTiles(<div></div>)\n                } else {\n                    setAllHeatTiles(heatTileInfo)\n                }\n                // console.log(\"END TILEVALUES\")\n\n            }\n        }\n    }\n\n    function resizeHeat() {\n        console.log(\"resizeHeat()\")\n        //console.log(allHeatTiles.length)\n        // console.log(allHeatTilesRef.current.length)\n        if (allHeatTiles.length > 0) {\n            let circles1 = [], circles2 = [], circles3 = [], circles4 = [], circles5 = [], circles6 = [], circles7 = []\n            let gradients = []\n            const height = document.getElementById('transparent-court').clientHeight\n            const width = document.getElementById('transparent-court').clientWidth\n            const heightAltered = height * 1.1\n            const widthAltered = width * 1.1\n            let radius = 25 * height / 470\n            allHeatTiles.forEach(eachHeatTile => {\n                let cx = widthAltered / 2 + eachHeatTile.x * width / 500\n                let cy = heightAltered / 2 + eachHeatTile.y * height / 470 - 185 * height / 470\n                let circle = <Circle cx={cx} cy={cy} r={radius} fill={`url(#grad_${eachHeatTile.x}_${eachHeatTile.y})`} stroke=\"none\" strokeWidth=\"3\" />\n                switch (eachHeatTile.circleArray) {\n                    case \"1\":\n                        circles1.push(circle)\n                        break;\n                    case \"2\":\n                        circles2.push(circle)\n                        break;\n                    case \"3\":\n                        circles3.push(circle)\n                        break;\n                    case \"4\":\n                        circles4.push(circle)\n                        break;\n                    case \"5\":\n                        circles5.push(circle)\n                        break;\n                    case \"6\":\n                        circles6.push(circle)\n                        break;\n                    case \"7\":\n                        circles7.push(circle)\n                        break;\n                }\n                let eachGradient = <RadialGradient id={`grad_${eachHeatTile.x}_${eachHeatTile.y}`} cx={cx} cy={cy} r={radius} fx={cx} fy={cy} gradientUnits=\"userSpaceOnUse\">\n                    <Stop offset=\"0\" stopColor={eachHeatTile.color} stopOpacity=\"0.8\" />\n                    <Stop offset=\"1\" stopColor={eachHeatTile.color} stopOpacity=\"0\" />\n                </RadialGradient>\n                gradients.push(eachGradient)\n            })\n            return (<Svg className=\"imageview-child\" height={height * 1.1} width={width * 1.1} >\n                <Defs>\n                    {gradients}\n                </Defs>\n                {circles1}\n                {circles2}\n                {circles3}\n                {circles4}\n                {circles5}\n                {circles6}\n                {circles7}\n            </Svg>)\n        }\n        return <div></div>\n    }\n\n    function scaleNumber(number) {\n        if (document.getElementById('transparent-court').clientHeight === 0) {\n            return number * document.getElementById('transparent-court-on-top').clientHeight / 470\n        }\n        return number * document.getElementById('transparent-court').clientHeight / 470\n    }\n\n    useEffect(() => {\n        getGridAverages().then(res => setGridAverages(res))\n        getZoneAverages().then(res => setZoneAverages(res))\n        setLocalViewType(makeLoadingAnimation())\n    }, [])\n\n    function determineHeight() {\n        if (document.getElementById(\"transparent-court\") === null) {\n            return 0\n        } else {\n            return document.getElementById(\"transparent-court\").clientHeight\n        }\n    }\n\n    function makeLoadingAnimation() {\n        console.log(\"makeLoadingAnimation()\")\n        //console.log(isLoadingRef.current)\n        //if (true) {\n        if (props.isLoading) {\n            let height = 470\n            let width = 500\n            let court\n            if (document.getElementById(\"transparent-court\") && document.getElementById(\"transparent-court\").clientHeight > 0) {\n                court = document.getElementById(\"transparent-court\")\n            }\n            if (!court && document.getElementById(\"transparent-court-on-top\") && document.getElementById(\"transparent-court-on-top\").clientHeight > 0) {\n                court = document.getElementById(\"transparent-court-on-top\")\n            }\n            if (!court && document.getElementById(\"trad-court\") && document.getElementById(\"trad-court\").clientHeight > 0) {\n                court = document.getElementById(\"trad-court\")\n            }\n            if (court) {\n                height = court.clientHeight\n                width = court.clientWidth\n            }\n            /*\n            let rEach = height / 70\n            let rLarge = height / 12\n            let svgDivisor = 4\n            let centerX = width / svgDivisor / 2\n            let centerY = height / svgDivisor / 2\n            function calcCoord(center, radius, angle, useSin) {\n                return useSin ? center + (radius * Math.sin(angle * Math.PI / 180)) : center + (radius * Math.cos(angle * Math.PI / 180))\n            }\n            let circles = []\n            let factor = 15\n            for (let i = -180; i <= 180; i += 30) {\n                let style = {\n                    fillOpacity: 1,\n                    fill: `rgb(0, 195, 255,${1 - 0.9 * (i / 30 + 6) / 12})`,\n                    animationTimingFunction: \"ease-in\",\n                    animationFillMode: \"forwards\",\n                    animationName: \"FillIn\",\n                    animationDuration: `${12 / factor}s`,\n                    animationIterationCount: \"infinite\",\n                    animationDelay: `${(i / 30 + 6) / factor}s`\n                }\n                console.log(style)\n                circles.push(<Circle style={style} cx={calcCoord(centerX, rLarge, i, false)} cy={calcCoord(centerY, rLarge, i, true)} r={rEach} ></Circle>)\n            }\n\n             <Svg margin=\"auto\" width={width / svgDivisor} height={height / svgDivisor} style={{ animation: `spin 4s linear infinite`, opacity: \"1\" }} >\n\n                    </Svg>\n            */\n            /**\n             * <Defs>\n                            <LinearGradient id=\"grad\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                                <Stop offset=\"0\" stopColor=\"#FFD080\" stopOpacity=\"1\" />\n                                <Stop offset=\"1\" stopColor=\"red\" stopOpacity=\"1\" />\n                            </LinearGradient>\n                        </Defs>\n                        <Circle cx={width / 10} cy={height / 10} r={height / 10} fill=\"url(#grad)\" ></Circle>\n                    \n             */\n\n            //let middleCircleR = height / 15\n            let centerX = width / 6\n            let centerY = height / 6\n            // let gap = height / 30\n            let innerR1 = height / 30\n            let thickness1 = height / 50\n            let outerR1 = innerR1 + thickness1\n            let innerR2 = height / 16\n            let thickness2 = height / 50\n            let outerR2 = innerR2 + thickness2\n            let innerR3 = height / 11\n            let thickness3 = height / 50\n            let outerR3 = innerR3 + thickness3\n            //style={{ animation: `spin 3s linear infinite`, opacity: \"1\" }}\n            // <Circle cx={centerX} cy={centerY} r={middleCircleR} fill=\"red\" opacity=\"0.5\"></Circle>\n            /**\n             * <Svg width={width / 3} height={height / 3} style={{ animation: `spin 0.6s linear infinite`, opacity: \"1\", position: \"absolute\" }} >\n                            <Path d={`m${centerX} ${centerY - innerR1} l0 -${thickness1} a${outerR1},${outerR1} 0 0,1 0,${2 * (innerR1 + thickness1)} l0 ${-thickness1}  a${innerR1},${innerR1} 0 0,0 0,${-2 * innerR1}`} fill=\"lightblue\" stroke=\"none\" strokeWidth=\"1\"></Path>\n                        </Svg>\n                        <Svg width={width / 3} height={height / 3} style={{ animation: `spin 1s linear infinite`, opacity: \"1\", position: \"absolute\" }} >\n                            <Path d={`m${centerX} ${centerY - innerR2} l0 -${thickness2} a${outerR2},${outerR2} 0 0,1 0,${2 * (innerR2 + thickness2)} l0 ${-thickness2}  a${innerR2},${innerR2} 0 0,0 0,${-2 * innerR2}`} fill=\"lightblue\" stroke=\"none\" strokeWidth=\"1\"></Path>\n                        </Svg>\n             */\n            return (<div id=\"loadingAnimation\" style={{ position: \"absolute\", backgroundColor: \"gray\", opacity: \"0.8\", zIndex: 1, width: width, height: height, textAlign: \"center\" }}>\n                <div style={{ transform: `translate(0px, ${height / 3}px)` }}>\n                    <p>Loading {localViewType.type}</p>\n                    <div width=\"100%\" height={height} style={{ position: \"absolute\", transform: `translate(${width / 2 - centerX}px,0px)` }} >\n                        <Svg width={width / 3} height={height / 3} style={{ animation: `spin 1s linear infinite`, opacity: \"1\", position: \"absolute\" }} >\n                            <Path d={`m${centerX} ${centerY - innerR3} l0 -${thickness3} a${outerR3},${outerR3} 0 0,1 0,${2 * (innerR3 + thickness3)} l0 ${-thickness3}  a${innerR3},${innerR3} 0 0,0 0,${-2 * innerR3}`} fill=\"white\" stroke=\"none\" strokeWidth=\"1\"></Path>\n                        </Svg>\n                    </div>\n\n                </div>\n            </div >)\n        } else {\n            return (<span></span>)\n        }\n    }\n    return (\n        <div className='ShotView'>\n            <p id=\"view-title\">{props.title}</p>\n            <div id=\"imageview-div\">\n                <div className=\"court-image\" id=\"gray-background\" height={determineHeight()} >\n                    <Svg height=\"100%\" width=\"100%\">\n                        <Rect height=\"100%\" width=\"100%\" fill=\"#505050\"></Rect>\n                    </Svg>\n                </div>\n                <img src={transparentCourt} className=\"court-image\" id=\"transparent-court\"></img>\n                <img src={tradCourt} className=\"court-image\" id=\"trad-court\" ></img>\n                <img src={transparentCourt} className=\"court-image\" id=\"transparent-court-on-top\" ></img>\n                {whatToDisplayRef.current}\n                {loadingAnimation}\n            </div>\n            <br></br>\n            <button onClick={() => {\n                if (!props.isLoading && localViewType.type !== \"Traditional\" && allShotsRef.current) {\n                    console.log(\"Traditional Button Clicked\")\n                    setLocalViewType({ type: \"Traditional\", isOriginal: false })\n                }\n            }} >Traditional</button>\n            <button onClick={() => {\n                if (!props.isLoading && localViewType.type !== \"Grid\" && allShotsRef.current) {\n                    console.log(\"Grid Button Clicked\")\n                    setLocalViewType({ type: \"Grid\", isOriginal: false })\n                }\n            }} >Grid</button>\n            <button onClick={() => {\n                if (!props.isLoading && localViewType.type !== \"Zone\" && allShotsRef.current) {\n                    console.log(\"Zone Button Clicked\")\n                    setLocalViewType({ type: \"Zone\", isOriginal: false })\n                }\n            }} >Zone</button>\n            <button onClick={() => {\n                if (!props.isLoading && localViewType.type !== \"Heat\" && allShotsRef.current) {\n                    console.log(\"Heat Button Clicked\")\n                    setLocalViewType({ type: \"Heat\", isOriginal: false })\n                }\n            }} >Heat</button>\n        </div>\n    )\n}\n\nexport default ShotView","import './SelectionViewer.css'\n\nfunction SelectionViewer() {\n    return (\n        <div className=\"SelectionViewer\">\n            Text Will Go Here\n        </div>\n    )\n}\n\nexport default SelectionViewer","import './AdvancedSearchBox.css'\nimport SelectionViewer from './SelectionViewer'\nimport ShotPercentageView from './ShotPercentageView'\n\nfunction AdvancedSearchBox() {\n    function makeButton(name) {\n        return <button class=\"dropdown-button\">\n            {name}\n        </button>\n    }\n    return (\n        <div className=\"AdvancedSearchBox\">\n            <div className=\"search-box-body\">\n                <div className='search-box-inner-body'>\n                    <h6>Choose your search parameters</h6>\n                    <div id='selection-scrollable'>\n                        <p>Seasons: <button>Begin</button> - <button>End</button></p>\n                        <p>Players: {makeButton(\"Choose Players\")}</p>\n                        <p>Season Types: {makeButton(\"Choose Season Types\")}</p>\n                        <p>Shot Distance (ft.): <button>Begin</button> - <button>End</button></p>\n                        <p>Shot Success: {makeButton(\"Choose Makes or Misses\")}</p>\n                        <p>Shot Value: {makeButton(\"Choose 2PT or 3PT\")}</p>\n                        <p>Shot Types: {makeButton(\"Choose Shot Types\")}</p>\n                        <p>Shooting Teams: {makeButton(\"Choose Teams\")}</p>\n                        <p>Home Teams: {makeButton(\"Choose Home Teams\")}</p>\n                        <p>Away Teams: {makeButton(\"Choose Away Teams\")}</p>\n                        <p>Court Areas: {makeButton(\"Choose Court Areas\")}</p>\n                        <p>Sides of Court: {makeButton(\"Choose Sides of Court\")}</p>\n                    </div>\n                    <button className=\"static-button\">Run It</button>\n                    <button className=\"static-button\">View Selection</button>\n                    <br></br>\n                    <p>Current Selections: </p>\n                    <SelectionViewer />\n                </div>\n            </div>\n            <ShotPercentageView />\n        </div>\n    )\n}\n\nexport default AdvancedSearchBox","import './App.css';\nimport Header from './Header'\nimport SimpleSearchBox from './SimpleSearchBox'\nimport ShotView from './ShotView'\nimport AdvancedSearchBox from './AdvancedSearchBox';\nimport SearchTypeButtons from './SearchTypeButtons';\nimport React, { useEffect, useState, useRef } from 'react';\n\nconst App = () => {\n  const [latestSimpleSearchData, setLatestSimpleSearchData] = useState()\n  const [latestSimpleViewType, setLatestSimpleViewType] = useState(\"Traditional\")\n  const [allSearchData, setAllSearchData] = useState({})\n  const [title, setTitle] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n  const [loadingAnimation, setLoadingAnimation] = useState(\"\")\n  useEffect(() => {\n    console.log(`isLoading changed to ${isLoading}`)\n  }, [isLoading])\n  useEffect(() => {\n    console.log(`latestSimpleSearchData changed to ${latestSimpleSearchData}`)\n  }, [latestSimpleSearchData])\n  useEffect(() => {\n    console.log(`allSearchData changed to `)\n    console.log(allSearchData)\n  }, [allSearchData])\n\n  const latestSimpleViewTypeRef = useRef({});\n  latestSimpleViewTypeRef.current = latestSimpleViewType;\n  const [whichSearchBox, setWhichSearchBox] = useState(<SimpleSearchBox updateLatestSimpleSearchData={processSimpleSearchData}\n    updateLatestSimpleViewType={(inputViewType) => setLatestSimpleViewType(inputViewType, console.log(\"Updated view type with \" + inputViewType))}\n    latestSimpleViewType={latestSimpleViewTypeRef.current} setTitle={setTitle} setIsLoading={setIsLoading} setAllSearchData={setAllSearchData} />)\n  const isLoadingRef = useRef({});\n  isLoadingRef.current = isLoading;\n  const loadingAnimationRef = useRef({})\n  loadingAnimationRef.current = loadingAnimation\n  function processSimpleSearchData(inputData) {\n    setLatestSimpleSearchData(inputData, console.log(\"Updated latest search with\" + inputData))\n  }\n  function processLatestSimpleViewType(inputViewType) {\n    setLatestSimpleViewType(inputViewType, console.log(\"Updated view type with \" + inputViewType))\n  }\n\n  function handleSimpleClick() {\n    if (whichSearchBox !== <SimpleSearchBox />) {\n      setWhichSearchBox(<SimpleSearchBox />)\n    }\n  }\n\n  function handleAdvancedClick() {\n    if (whichSearchBox !== <AdvancedSearchBox />) {\n      setWhichSearchBox(<AdvancedSearchBox />)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"BaseGrid\">\n        <div >\n          <SearchTypeButtons simpleClickHandler={handleSimpleClick} advancedClickHandler={handleAdvancedClick} />\n          {whichSearchBox}\n        </div>\n        <div className=\"basegrid-grid-item\" id=\"shotview-grid-item\">\n          <ShotView title={title} isLoading={isLoadingRef.current} setIsLoading={setIsLoading} allSearchData={allSearchData} />\n        </div>\n      </div>\n    </div >\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}